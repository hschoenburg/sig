{"version":3,"sources":["webpack://Sig/webpack/universalModuleDefinition","webpack://Sig/webpack/bootstrap","webpack://Sig/./node_modules/base-x/src/index.js","webpack://Sig/./node_modules/base64-js/index.js","webpack://Sig/./node_modules/bech32/index.js","webpack://Sig/./node_modules/bip32/src/bip32.js","webpack://Sig/./node_modules/bip32/src/crypto.js","webpack://Sig/./node_modules/bip32/src/index.js","webpack://Sig/./node_modules/bip39/src/_wordlists.js","webpack://Sig/./node_modules/bip39/src/index.js","webpack://Sig/./node_modules/bitcoin-ts/build/module/index.js","webpack://Sig/./node_modules/bitcoin-ts/build/module/lib/auth/auth.js","webpack://Sig/./node_modules/bitcoin-ts/build/module/lib/auth/instruction-sets/bch/bch-descriptions.js","webpack://Sig/./node_modules/bitcoin-ts/build/module/lib/auth/instruction-sets/bch/bch-errors.js","webpack://Sig/./node_modules/bitcoin-ts/build/module/lib/auth/instruction-sets/bch/bch-instruction-sets.js","webpack://Sig/./node_modules/bitcoin-ts/build/module/lib/auth/instruction-sets/bch/bch-opcodes.js","webpack://Sig/./node_modules/bitcoin-ts/build/module/lib/auth/instruction-sets/bch/bch-operations.js","webpack://Sig/./node_modules/bitcoin-ts/build/module/lib/auth/instruction-sets/bch/bch-types.js","webpack://Sig/./node_modules/bitcoin-ts/build/module/lib/auth/instruction-sets/bch/bch.js","webpack://Sig/./node_modules/bitcoin-ts/build/module/lib/auth/instruction-sets/btc/btc.js","webpack://Sig/./node_modules/bitcoin-ts/build/module/lib/auth/instruction-sets/common/arithmetic.js","webpack://Sig/./node_modules/bitcoin-ts/build/module/lib/auth/instruction-sets/common/bitwise.js","webpack://Sig/./node_modules/bitcoin-ts/build/module/lib/auth/instruction-sets/common/combinators.js","webpack://Sig/./node_modules/bitcoin-ts/build/module/lib/auth/instruction-sets/common/common.js","webpack://Sig/./node_modules/bitcoin-ts/build/module/lib/auth/instruction-sets/common/crypto.js","webpack://Sig/./node_modules/bitcoin-ts/build/module/lib/auth/instruction-sets/common/descriptions.js","webpack://Sig/./node_modules/bitcoin-ts/build/module/lib/auth/instruction-sets/common/encoding.js","webpack://Sig/./node_modules/bitcoin-ts/build/module/lib/auth/instruction-sets/common/errors.js","webpack://Sig/./node_modules/bitcoin-ts/build/module/lib/auth/instruction-sets/common/flow-control.js","webpack://Sig/./node_modules/bitcoin-ts/build/module/lib/auth/instruction-sets/common/nop.js","webpack://Sig/./node_modules/bitcoin-ts/build/module/lib/auth/instruction-sets/common/opcodes.js","webpack://Sig/./node_modules/bitcoin-ts/build/module/lib/auth/instruction-sets/common/push.js","webpack://Sig/./node_modules/bitcoin-ts/build/module/lib/auth/instruction-sets/common/signing-serialization.js","webpack://Sig/./node_modules/bitcoin-ts/build/module/lib/auth/instruction-sets/common/splice.js","webpack://Sig/./node_modules/bitcoin-ts/build/module/lib/auth/instruction-sets/common/stack.js","webpack://Sig/./node_modules/bitcoin-ts/build/module/lib/auth/instruction-sets/common/time.js","webpack://Sig/./node_modules/bitcoin-ts/build/module/lib/auth/instruction-sets/common/types.js","webpack://Sig/./node_modules/bitcoin-ts/build/module/lib/auth/instruction-sets/instruction-sets.js","webpack://Sig/./node_modules/bitcoin-ts/build/module/lib/auth/templates/language/compile.js","webpack://Sig/./node_modules/bitcoin-ts/build/module/lib/auth/templates/language/compiler.js","webpack://Sig/./node_modules/bitcoin-ts/build/module/lib/auth/templates/language/errors.js","webpack://Sig/./node_modules/bitcoin-ts/build/module/lib/auth/templates/language/language.js","webpack://Sig/./node_modules/bitcoin-ts/build/module/lib/auth/templates/language/parse.js","webpack://Sig/./node_modules/bitcoin-ts/build/module/lib/auth/templates/language/parsimmon.js","webpack://Sig/./node_modules/bitcoin-ts/build/module/lib/auth/templates/language/reduce.js","webpack://Sig/./node_modules/bitcoin-ts/build/module/lib/auth/templates/language/resolve.js","webpack://Sig/./node_modules/bitcoin-ts/build/module/lib/auth/templates/templates.js","webpack://Sig/./node_modules/bitcoin-ts/build/module/lib/auth/virtual-machine.js","webpack://Sig/./node_modules/bitcoin-ts/build/module/lib/bin/bin.js","webpack://Sig/./node_modules/bitcoin-ts/build/module/lib/bin/hashes.js","webpack://Sig/./node_modules/bitcoin-ts/build/module/lib/bin/ripemd160/ripemd160.base64.js","webpack://Sig/./node_modules/bitcoin-ts/build/module/lib/bin/secp256k1/secp256k1-wasm-types.js","webpack://Sig/./node_modules/bitcoin-ts/build/module/lib/bin/secp256k1/secp256k1-wasm.js","webpack://Sig/./node_modules/bitcoin-ts/build/module/lib/bin/secp256k1/secp256k1.base64.js","webpack://Sig/./node_modules/bitcoin-ts/build/module/lib/bin/sha1/sha1.base64.js","webpack://Sig/./node_modules/bitcoin-ts/build/module/lib/bin/sha256/sha256.base64.js","webpack://Sig/./node_modules/bitcoin-ts/build/module/lib/bin/sha512/sha512.base64.js","webpack://Sig/./node_modules/bitcoin-ts/build/module/lib/crypto/crypto.js","webpack://Sig/./node_modules/bitcoin-ts/build/module/lib/crypto/ripemd160.js","webpack://Sig/./node_modules/bitcoin-ts/build/module/lib/crypto/secp256k1.js","webpack://Sig/./node_modules/bitcoin-ts/build/module/lib/crypto/sha1.js","webpack://Sig/./node_modules/bitcoin-ts/build/module/lib/crypto/sha256.js","webpack://Sig/./node_modules/bitcoin-ts/build/module/lib/crypto/sha512.js","webpack://Sig/./node_modules/bitcoin-ts/build/module/lib/lib.js","webpack://Sig/./node_modules/bitcoin-ts/build/module/lib/transaction.js","webpack://Sig/./node_modules/bitcoin-ts/build/module/lib/utils/base64.js","webpack://Sig/./node_modules/bitcoin-ts/build/module/lib/utils/hex.js","webpack://Sig/./node_modules/bitcoin-ts/build/module/lib/utils/log.js","webpack://Sig/./node_modules/bitcoin-ts/build/module/lib/utils/numbers.js","webpack://Sig/./node_modules/bitcoin-ts/build/module/lib/utils/utf8.js","webpack://Sig/./node_modules/bitcoin-ts/build/module/lib/utils/utils.js","webpack://Sig/./node_modules/bn.js/lib/bn.js","webpack://Sig/./node_modules/brorand/index.js","webpack://Sig/./node_modules/bs58/index.js","webpack://Sig/./node_modules/bs58check/base.js","webpack://Sig/./node_modules/bs58check/index.js","webpack://Sig/./node_modules/buffer/index.js","webpack://Sig/./node_modules/cipher-base/index.js","webpack://Sig/./node_modules/core-util-is/lib/util.js","webpack://Sig/./node_modules/create-hash/browser.js","webpack://Sig/./node_modules/create-hash/md5.js","webpack://Sig/./node_modules/create-hmac/browser.js","webpack://Sig/./node_modules/create-hmac/legacy.js","webpack://Sig/./node_modules/elliptic/lib/elliptic.js","webpack://Sig/./node_modules/elliptic/lib/elliptic/curve/base.js","webpack://Sig/./node_modules/elliptic/lib/elliptic/curve/edwards.js","webpack://Sig/./node_modules/elliptic/lib/elliptic/curve/index.js","webpack://Sig/./node_modules/elliptic/lib/elliptic/curve/mont.js","webpack://Sig/./node_modules/elliptic/lib/elliptic/curve/short.js","webpack://Sig/./node_modules/elliptic/lib/elliptic/curves.js","webpack://Sig/./node_modules/elliptic/lib/elliptic/ec/index.js","webpack://Sig/./node_modules/elliptic/lib/elliptic/ec/key.js","webpack://Sig/./node_modules/elliptic/lib/elliptic/ec/signature.js","webpack://Sig/./node_modules/elliptic/lib/elliptic/eddsa/index.js","webpack://Sig/./node_modules/elliptic/lib/elliptic/eddsa/key.js","webpack://Sig/./node_modules/elliptic/lib/elliptic/eddsa/signature.js","webpack://Sig/./node_modules/elliptic/lib/elliptic/precomputed/secp256k1.js","webpack://Sig/./node_modules/elliptic/lib/elliptic/utils.js","webpack://Sig/./node_modules/events/events.js","webpack://Sig/./node_modules/hash-base/index.js","webpack://Sig/./node_modules/hash.js/lib/hash.js","webpack://Sig/./node_modules/hash.js/lib/hash/common.js","webpack://Sig/./node_modules/hash.js/lib/hash/hmac.js","webpack://Sig/./node_modules/hash.js/lib/hash/ripemd.js","webpack://Sig/./node_modules/hash.js/lib/hash/sha.js","webpack://Sig/./node_modules/hash.js/lib/hash/sha/1.js","webpack://Sig/./node_modules/hash.js/lib/hash/sha/224.js","webpack://Sig/./node_modules/hash.js/lib/hash/sha/256.js","webpack://Sig/./node_modules/hash.js/lib/hash/sha/384.js","webpack://Sig/./node_modules/hash.js/lib/hash/sha/512.js","webpack://Sig/./node_modules/hash.js/lib/hash/sha/common.js","webpack://Sig/./node_modules/hash.js/lib/hash/utils.js","webpack://Sig/./node_modules/hmac-drbg/lib/hmac-drbg.js","webpack://Sig/./node_modules/ieee754/index.js","webpack://Sig/./node_modules/inherits/inherits_browser.js","webpack://Sig/./node_modules/isarray/index.js","webpack://Sig/./node_modules/md5.js/index.js","webpack://Sig/./node_modules/minimalistic-assert/index.js","webpack://Sig/./node_modules/minimalistic-crypto-utils/lib/utils.js","webpack://Sig/./node_modules/pbkdf2/browser.js","webpack://Sig/./node_modules/pbkdf2/lib/async.js","webpack://Sig/./node_modules/pbkdf2/lib/default-encoding.js","webpack://Sig/./node_modules/pbkdf2/lib/precondition.js","webpack://Sig/./node_modules/pbkdf2/lib/sync-browser.js","webpack://Sig/./node_modules/process-nextick-args/index.js","webpack://Sig/./node_modules/process/browser.js","webpack://Sig/./node_modules/randombytes/browser.js","webpack://Sig/./node_modules/readable-stream/duplex-browser.js","webpack://Sig/./node_modules/readable-stream/lib/_stream_duplex.js","webpack://Sig/./node_modules/readable-stream/lib/_stream_passthrough.js","webpack://Sig/./node_modules/readable-stream/lib/_stream_readable.js","webpack://Sig/./node_modules/readable-stream/lib/_stream_transform.js","webpack://Sig/./node_modules/readable-stream/lib/_stream_writable.js","webpack://Sig/./node_modules/readable-stream/lib/internal/streams/BufferList.js","webpack://Sig/./node_modules/readable-stream/lib/internal/streams/destroy.js","webpack://Sig/./node_modules/readable-stream/lib/internal/streams/stream-browser.js","webpack://Sig/./node_modules/readable-stream/node_modules/safe-buffer/index.js","webpack://Sig/./node_modules/readable-stream/passthrough.js","webpack://Sig/./node_modules/readable-stream/readable-browser.js","webpack://Sig/./node_modules/readable-stream/transform.js","webpack://Sig/./node_modules/readable-stream/writable-browser.js","webpack://Sig/./node_modules/ripemd160/index.js","webpack://Sig/./node_modules/safe-buffer/index.js","webpack://Sig/./node_modules/setimmediate/setImmediate.js","webpack://Sig/./node_modules/sha.js/hash.js","webpack://Sig/./node_modules/sha.js/index.js","webpack://Sig/./node_modules/sha.js/sha.js","webpack://Sig/./node_modules/sha.js/sha1.js","webpack://Sig/./node_modules/sha.js/sha224.js","webpack://Sig/./node_modules/sha.js/sha256.js","webpack://Sig/./node_modules/sha.js/sha384.js","webpack://Sig/./node_modules/sha.js/sha512.js","webpack://Sig/./node_modules/stream-browserify/index.js","webpack://Sig/./node_modules/string_decoder/lib/string_decoder.js","webpack://Sig/./node_modules/timers-browserify/main.js","webpack://Sig/./node_modules/tiny-secp256k1/js.js","webpack://Sig/./node_modules/tiny-secp256k1/rfc6979.js","webpack://Sig/./node_modules/typeforce/errors.js","webpack://Sig/./node_modules/typeforce/extra.js","webpack://Sig/./node_modules/typeforce/index.js","webpack://Sig/./node_modules/typeforce/native.js","webpack://Sig/./node_modules/util-deprecate/browser.js","webpack://Sig/./node_modules/util/node_modules/inherits/inherits_browser.js","webpack://Sig/./node_modules/util/support/isBufferBrowser.js","webpack://Sig/./node_modules/util/util.js","webpack://Sig/(webpack)/buildin/global.js","webpack://Sig/(webpack)/buildin/module.js","webpack://Sig/./node_modules/wif/index.js","webpack://Sig/./src/index.ts","webpack://Sig/./src/util.ts","webpack://Sig/util (ignored)","webpack://Sig/util (ignored)?33ef","webpack://Sig/buffer (ignored)","webpack://Sig/crypto (ignored)"],"names":["COSMOS_PREFIX","COSMOS_PATH","instantiate","randomSeed","Promise","all","instantiateSha256","instantiateRipemd160","instantiateSecp256k1","then","api","sha256","ripemd160","secp256k1","createWallet","prefix","path","mnemonic","generateMnemonic","createWalletFromMnemonic","masterKey","createMasterKeyFromMnemonic","createWalletFromMasterKey","createKeyPairFromMasterKey","privateKey","publicKey","address","createAddress","validateMnemonic","Error","seed","mnemonicToSeedSync","fromSeed","derivePath","derivePublicKeyCompressed","hash","words","bech32ToWords","bech32Encode","sign","bytes","signMessageHashCompact","createSignatureBytes","signMsg","toCanonicalJSONBytes","verifySignatureBytes","signature","verifySignatureCompact","createSignature","signatureBytes","bytesToBase64","pub_key","type","value","verifySignature","base64ToBytes","verifySignatures","signatures","length","every","createSignMsg","tx","meta","account_number","chain_id","fee","memo","msgs","msg","sequence","signTx","keyPair","verifyTx","broadcastTx","mode","TextDecoder","TextEncoder","atob","btoa","process","versions","node","require","Buffer","base64","from","toString","binary","window","decoder","encoder","Uint8Array","ArrayBuffer","i","charCodeAt","String","fromCharCode","bytesToString","decode","stringToBytes","string","encode","toCanonicalJSON","JSON","parse","toCanonicalJSONString","stringify","canonicalizeJSON","isObject","Object","prototype","call","sorted","keys","sort","key","keyValue","Array","isArray","map","undefined","arrayWrap","first","rest","array","arguments"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;QCVA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;;AClFY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,mBAAO,CAAC,wDAAa;AACnC;AACA,+BAA+B;AAC/B;AACA;AACA,iBAAiB,qBAAqB;AACtC;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,6CAA6C;AAC3E;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,YAAY,SAAS;AAC/B;AACA;AACA;AACA,qCAAqC;AACrC,8BAA8B;AAC9B;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA,8BAA8B,6CAA6C;AAC3E;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACvHY;;AAEZ;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,kCAAkC,SAAS;AAC3C;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,qBAAqB,SAAS;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,0CAA0C,UAAU;AACpD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;ACvJY;AACZ;;AAEA;AACA;AACA,eAAe,qBAAqB;AACpC;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,mBAAmB;AACpC;AACA;;AAEA;AACA;AACA;;AAEA,aAAa,mBAAmB;AAChC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,iBAAiB,kBAAkB;AACnC;AACA;;AAEA;AACA;AACA;;AAEA,aAAa,OAAO;AACpB;AACA;AACA;;AAEA,aAAa,OAAO;AACpB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,sBAAsB;AACvC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,UAAU;AACV;;AAEA;AACA;AACA;AACA;;AAEA;AACA,iBAAiB,iBAAiB;AAClC;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AClJA,8CAAa;AACb,8CAA8C,cAAc;AAC5D,eAAe,mBAAO,CAAC,oDAAU;AACjC,kBAAkB,mBAAO,CAAC,oDAAW;AACrC,YAAY,mBAAO,CAAC,2DAAgB;AACpC,kBAAkB,mBAAO,CAAC,oDAAW;AACrC,YAAY,mBAAO,CAAC,wCAAK;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,GAAG,wBAAwB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,GAAG,uBAAuB;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACjSa;AACb,8CAA8C,cAAc;AAC5D,mBAAmB,mBAAO,CAAC,0DAAa;AACxC,mBAAmB,mBAAO,CAAC,0DAAa;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACzBa;AACb,8CAA8C,cAAc;AAC5D,cAAc,mBAAO,CAAC,kDAAS;AAC/B;AACA;AACA;AACA;;;;;;;;;;;;;ACNa;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,mBAAO,CAAC,uGAAqC;AAC/E;AACA;AACA,aAAa;AACb;AACA,kCAAkC,mBAAO,CAAC,yGAAsC;AAChF;AACA;AACA,aAAa;AACb;AACA,kCAAkC,mBAAO,CAAC,+EAAyB;AACnE;AACA;AACA,aAAa;AACb;AACA,kCAAkC,mBAAO,CAAC,+EAAyB;AACnE;AACA;AACA,aAAa;AACb;AACA,kCAAkC,mBAAO,CAAC,iFAA0B;AACpE;AACA;AACA,aAAa;AACb;AACA,kCAAkC,mBAAO,CAAC,iFAA0B;AACpE;AACA;AACA,aAAa;AACb;AACA,kCAAkC,mBAAO,CAAC,mFAA2B;AACrE;AACA;AACA;AACA,aAAa;AACb;AACA,kCAAkC,mBAAO,CAAC,iFAA0B;AACpE;AACA;AACA;AACA,aAAa;;;;;;;;;;;;;AClDb,8CAAa;AACb,8CAA8C,cAAc;AAC5D,mBAAmB,mBAAO,CAAC,0DAAa;AACxC,iBAAiB,mBAAO,CAAC,gDAAQ;AACjC,oBAAoB,mBAAO,CAAC,0DAAa;AACzC,qBAAqB,mBAAO,CAAC,4DAAc;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,IAAI;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,KAAK;AACvC;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,mBAAmB,mBAAO,CAAC,4DAAc;AACzoD;AACd;AACJ;AAClC,2CAA2C,+P;;;;;;;;;;;;ACH3C;AAAA;AAAA;AAAA;AAAkE;AAC3D;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,kEAAkE;AACnE;AACA;AACA;AACA;AACO;AACP,OAAO,6EAAwB;AAC/B;AACA;AACA,2CAA2C,uyB;;;;;;;;;;;;ACvB3C;AAAA;AAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,wDAAwD;AACzD,2CAA2C,miB;;;;;;;;;;;;ACZ3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0G;AACuM;AACrN;AACtC;AACX;AACc;AACnC;AACf;AACP;AACA,QAAQ,uDAAU;AAClB;AACA,QAAQ,uDAAU;AAClB;AACA,oBAAoB,uDAAU;AAC9B;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,uDAAU;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,CAAC,8CAA8C;AACxC;AACA;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,WAAW,oFAAqC;AAChD;AACA;AACA;AACA;AACA;AACA,sCAAsC,uEAAa;AACnD,oCAAoC,uEAAa;AACjD,8BAA8B,qGAA8C;AAC5E,6BAA6B,6FAAsC;AACnE,2DAA2D,8DAAe;AAC1E,cAAc,iEAAU,CAAC,wEAAyB;AAClD,cAAc,gGAAsC;AACpD,kBAAkB,iEAAU,CAAC,wEAAyB;AACtD,2CAA2C,8DAAe;AAC1D,sBAAsB,iEAAU,CAAC,wEAAyB;AAC1D,sBAAsB,gGAAsC;AAC5D,0BAA0B,iEAAU,CAAC,wEAAyB;AAC9D;AACA;AACA,8BAA8B,iEAAU,CAAC,kEAAsB;AAC/D;AACA;AACA;AACA;AACA,4CAA4C,6FAAsC;AAClF;AACA;AACA;AACA;AACA,0BAA0B,iEAAU;AACpC;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,uEAAa;AAC9C,eAAe,gGAAsC;AACrD;AACA;AACA,uBAAuB,kEAAsB;AAC7C;AACA,4BAA4B,6FAAsC;AAClE,KAAK;AACL;AACA,WAAW,uEAAgB;AAC3B,WAAW,6EAAiB,CAAC,6EAAqB,4BAA4B,yEAAqB,EAAE,2EAAuB,EAAE,gEAAiB;AAC/I,KAAK;AACL,OAAO,yEAAkB;AACzB;AACA;AACA;AACA,QAAQ,wEAAiB;AACzB,CAAC;AACD,2CAA2C,23M;;;;;;;;;;;;ACxgCAAgC;AAC1B;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAA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ACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,4DAA4D;AAC7D,2CAA2C,+sJ;;;;;;;;;;;;AC7L3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0C;AACkC;AACrE;AACP;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,oCAAoC,qDAAY;AAChD,KAAK,gGAAiC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA,CAAC;AACD,2CAA2C,uwH;;;;;;;;;;;;ACzG3C;AAAA;AAAA;AAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,8DAA8D;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA,CAAC;AACD,2CAA2C,u9C;;;;;;;;;;;;ACpD3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAqC;AACkC;AAC1B;AACoB;AACvB;AACnC,kCAAkC,oEAAe,6BAA6B,iEAAiB;AACtG;AACA,MAAM,0DAAU,CAAC,iEAAyB;AACnC,2CAA2C,0DAAU,CAAC,iEAAyB;AAC/E,kCAAkC,0DAAU,CAAC,iEAAyB;AACtE;AACP,KAAK,sDAAa;AAClB,KAAK,sDAAa;AAClB,KAAK,sDAAa;AAClB,KAAK,sDAAa;AAClB,KAAK,sDAAa;AAClB,KAAK,sDAAa;AAClB,CAAC;AACM;AACP;AACA;AACA;AACA;AACA,mBAAmB,0DAAU,CAAC,iEAAyB;AACvD;AACA;AACA,kCAAkC,iEAAiB;AACnD;AACA;AACA;AACA;AACA;AACA;AACO;AACP,gBAAgB,0EAAqB,CAAC,yDAAK;AAC3C;AACA;AACA;AACO;AACP;AACA;AACA;AACA,eAAe,0DAAU,CAAC,iEAAyB;AACnD;AACA;AACA;AACO;AACP;AACA;AACA;AACA,eAAe,0DAAU,CAAC,iEAAyB;AACnD;AACA;AACA;AACA;AACA;AACO;AACP,KAAK,sDAAa;AAClB,KAAK,sDAAa;AAClB,KAAK,sDAAa;AAClB,KAAK,sDAAa;AAClB,KAAK,sDAAa;AAClB,KAAK,sDAAa;AAClB,CAAC;AACD,2CAA2C,27H;;;;;;;;;;;;AChE3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAiE;AACvB;AACnC;AACP,MAAM,0DAAU,CAAC,iEAAyB;AAC1C;AACO;AACP,KAAK,sDAAa;AAClB,KAAK,sDAAa;AAClB,KAAK,sDAAa;AAClB,KAAK,sDAAa;AAClB,KAAK,sDAAa;AAClB,KAAK,sDAAa;AAClB,KAAK,sDAAa;AAClB,KAAK,sDAAa;AAClB,KAAK,sDAAa;AAClB,CAAC;AACD;AACA;AACA;AACA;AACO,2CAA2C,0DAAU,CAAC,iEAAyB;AAC/E;AACP,KAAK,sDAAa;AAClB,KAAK,sDAAa;AAClB,KAAK,sDAAa;AAClB,KAAK,sDAAa;AAClB,KAAK,sDAAa;AAClB,KAAK,sDAAa;AAClB,KAAK,sDAAa;AAClB,KAAK,sDAAa;AAClB,KAAK,sDAAa;AAClB,KAAK,sDAAa;AAClB,KAAK,sDAAa;AAClB,KAAK,sDAAa;AAClB,KAAK,sDAAa;AAClB,KAAK,sDAAa;AAClB,KAAK,sDAAa;AAClB,CAAC;AACD,2CAA2C,uiF;;;;;;;;;;;;ACtsCAAsC;AACvC,2CAA2C,+rM;;;;;;;;;;;;AC/Q3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;AAC0B;AACzB;AACqB;AACvB;AACK;AACxC;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,wDAAwD;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,iFAAuB,cAAc,uDAAK;AACzD;AACA;AACA;AACA;AACA;AACA,mBAAmB,iFAAuB,cAAc,uDAAK;AAC7D;AACA;AACA;AACA;AACA,mBAAmB,iFAAuB,cAAc,uDAAK;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,IAAI,sDAAa;AACjB,IAAI,sDAAa;AACjB,IAAI,sDAAa;AACjB,IAAI,sDAAa;AACjB,IAAI,sDAAa;AACjB,IAAI,sDAAa;AACjB,IAAI,sDAAa;AACjB,IAAI,sDAAa;AACjB,IAAI,sDAAa;AACjB,IAAI,sDAAa;AACjB,IAAI,sDAAa;AACjB,IAAI,sDAAa;AACjB,IAAI,sDAAa;AACjB,IAAI,sDAAa;AACjB,IAAI,sDAAa;AACjB,IAAI,sDAAa;AACjB,IAAI,sDAAa;AACjB,IAAI,sDAAa;AACjB,IAAI,sDAAa;AACjB,IAAI,sDAAa;AACjB,IAAI,sDAAa;AACjB,IAAI,sDAAa;AACjB,IAAI,sDAAa;AACjB,IAAI,sDAAa;AACjB,IAAI,sDAAa;AACjB,IAAI,sDAAa;AACjB,IAAI,sDAAa;AACjB,IAAI,sDAAa;AACjB,IAAI,sDAAa;AACjB,IAAI,sDAAa;AACjB,IAAI,sDAAa;AACjB,IAAI,sDAAa;AACjB,IAAI,sDAAa;AACjB,IAAI,sDAAa;AACjB,IAAI,sDAAa;AACjB,IAAI,sDAAa;AACjB,IAAI,sDAAa;AACjB,IAAI,sDAAa;AACjB,IAAI,sDAAa;AACjB,IAAI,sDAAa;AACjB,IAAI,sDAAa;AACjB,IAAI,sDAAa;AACjB,IAAI,sDAAa;AACjB,IAAI,sDAAa;AACjB,IAAI,sDAAa;AACjB,IAAI,sDAAa;AACjB,IAAI,sDAAa;AACjB,IAAI,sDAAa;AACjB,IAAI,sDAAa;AACjB,IAAI,sDAAa;AACjB,IAAI,sDAAa;AACjB,IAAI,sDAAa;AACjB,IAAI,sDAAa;AACjB,IAAI,sDAAa;AACjB,IAAI,sDAAa;AACjB,IAAI,sDAAa;AACjB,IAAI,sDAAa;AACjB,IAAI,sDAAa;AACjB,IAAI,sDAAa;AACjB,IAAI,sDAAa;AACjB,IAAI,sDAAa;AACjB,IAAI,sDAAa;AACjB,IAAI,sDAAa;AACjB,IAAI,sDAAa;AACjB,IAAI,sDAAa;AACjB,IAAI,sDAAa;AACjB,IAAI,sDAAa;AACjB,IAAI,sDAAa;AACjB,IAAI,sDAAa;AACjB,IAAI,sDAAa;AACjB,IAAI,sDAAa;AACjB,IAAI,sDAAa;AACjB,IAAI,sDAAa;AACjB,IAAI,sDAAa;AACjB,IAAI,sDAAa;AACjB;AACO;AACP;AACA;AACA,UAAU,0DAAU,CAAC,iEAAyB;AAC9C;AACA;AACA;AACA;AACA,kBAAkB,0DAAU,CAAC,iEAAyB;AACtD,kBAAkB,gEAAW;AAC7B;AACO;AACP;AACA,WAAW,wDAAK,0EAA0E,sBAAsB,KAAK;AACrH;AACO;AACP,IAAI,sDAAa;AACjB,IAAI,sDAAa;AACjB,IAAI,sDAAa;AACjB,IAAI,sDAAa;AACjB,IAAI,sDAAa;AACjB,IAAI,sDAAa;AACjB,IAAI,sDAAa;AACjB,IAAI,sDAAa;AACjB,IAAI,sDAAa;AACjB,IAAI,sDAAa;AACjB,IAAI,sDAAa;AACjB,IAAI,sDAAa;AACjB,IAAI,sDAAa;AACjB,IAAI,sDAAa;AACjB,IAAI,sDAAa;AACjB,IAAI,sDAAa;AACjB,IAAI,sDAAa;AACjB;AACO;AACP;AACA;AACA,YAAY,wDAAK;AACjB;AACA,aAAa,2DAAoB;AACjC;AACA;AACA;AACA,0BAA0B,gEAAW;AACrC,CAAC,KAAK;AACN,2CAA2C,m5Q;;;;;;;;;;;;ACtP3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAA8F;AAC9F;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,4DAA4D;AACtD;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,OAAO,6DAAmB;AAC1B;AACA;AACA;AACA,OAAO,6DAAmB;AAC1B;AACA,WAAW,+DAAqB;AAChC;AACA;AACA,OAAO,6DAAmB;AAC1B,OAAO,6DAAmB;AAC1B;AACA,OAAO,6DAAmB;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,myI;;;;;;;;;;;;AC7I3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAA6D;AACnB;AACK;AACxC,gCAAgC,oEAAe,6BAA6B,gEAAW,kBAAkB,mEAAoB;AAC7H;AACP,KAAK,sDAAa;AAClB,CAAC;AACD,2CAA2C,m0B;;;;;;;;;;;;ACP3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA4J;AAC3F;AACvB;AACwB;AAC3D,sCAAsC,oEAAe;AAC5D;AACA;AACA;AACA,CAAC;AACM;AACP;AACA;AACA;AACA,eAAe,0DAAU,CAAC,iEAAyB;AACnD;AACA,WAAW,gEAAW;AACtB;AACO,iCAAiC,qEAAgB;AACjD,gCAAgC,qEAAgB,6BAA6B,gEAAW;AACxF,gCAAgC,uEAAkB,gCAAgC,gEAAW;AAC7F,iCAAiC,sEAAiB,mCAAmC,gEAAW;AAChG,gCAAgC,qEAAgB,yCAAyC,gEAAW;AACpG,iCAAiC,sEAAiB,mCAAmC,gEAAW;AAChG,iCAAiC,oEAAe,6BAA6B,gEAAW,gBAAgB,gEAAiB;AACzH,iCAAiC,gEAAW,QAAQ,mEAAoB;AACxE,gCAAgC,oEAAe;AAC/C,+BAA+B,oEAAe,6BAA6B,gEAAW;AACtF,+BAA+B,qEAAgB,6BAA6B,gEAAW;AACvF,gCAAgC,qEAAgB,6BAA6B,gEAAW;AACxF,qCAAqC,uEAAkB;AAC9D;AACA;AACA;AACA,eAAe,0DAAU,CAAC,iEAAyB;AACnD;AACA,WAAW,gEAAW;AACtB,CAAC;AACM,qCAAqC,uEAAkB;AAC9D;AACA;AACA;AACA,eAAe,0DAAU,CAAC,iEAAyB;AACnD;AACA,WAAW,gEAAW;AACtB,CAAC;AACM,+BAA+B,uEAAkB,gCAAgC,gEAAW;AAC5F,gCAAgC,qEAAgB,6BAA6B,gEAAW;AACxF,gCAAgC,qEAAgB,6BAA6B,gEAAW;AACxF;AACP,KAAK,sDAAa;AAClB,KAAK,sDAAa;AAClB,KAAK,sDAAa;AAClB,KAAK,sDAAa;AAClB,KAAK,sDAAa;AAClB,KAAK,sDAAa;AAClB,KAAK,sDAAa;AAClB,KAAK,sDAAa;AAClB,KAAK,sDAAa;AAClB,KAAK,sDAAa;AAClB,KAAK,sDAAa;AAClB,KAAK,sDAAa;AAClB,KAAK,sDAAa;AAClB,KAAK,sDAAa;AAClB,KAAK,sDAAa;AAClB,KAAK,sDAAa;AAClB,KAAK,sDAAa;AAClB,KAAK,sDAAa;AAClB,KAAK,sDAAa;AAClB,CAAC;AACD,2CAA2C,m+P;;;;;;;;;;;;ACrE3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyE;AACR;AACvB;AAC1C;AACA;AACA;AACA;AACA,CAAC,oBAAoB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,8BAA8B;AACxB;AACP;AACA;AACA;AACA,eAAe,0DAAU,CAAC,iEAAyB;AACnD;AACA,2BAA2B,wEAAwB;AACnD;AACA,QAAQ,mEAAmB;AAC3B,eAAe,0DAAU,CAAC,iEAAyB;AACnD;AACA;AACA;AACA;AACA,eAAe,0DAAU,CAAC,iEAAyB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA,eAAe,0DAAU,CAAC,iEAAyB;AACnD;AACA;AACA;AACA,eAAe,0DAAU,CAAC,iEAAyB;AACnD;AACA;AACA;AACA,eAAe,0DAAU,CAAC,iEAAyB;AACnD;AACA;AACA,CAAC;AACD;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,0DAAU,CAAC,iEAAyB;AACnD;AACA;AACA;AACA,eAAe,0DAAU,CAAC,iEAAyB;AACnD;AACA;AACA;AACA;AACA,eAAe,0DAAU,CAAC,iEAAyB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,0DAAU,CAAC,iEAAyB;AACnD;AACA;AACA,CAAC;AACM;AACP,KAAK,sDAAa;AAClB,KAAK,sDAAa;AAClB,CAAC;AACD,2CAA2C,+/I;;;;;;;;;;;;AC/F3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAO;AACP;AACA;AACA;AACA,CAAC,8CAA8C;AAC/C;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,qBAAqB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,2CAA2C,2hvB;AACA;AACb;AACA;AACM;AACzB;AACP;AACO;AACP;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,8CAA8C;AACxC;AACP;AACA;AACA;AACA;AACA,CAAC,sBAAsB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D;AAC5D;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA,eAAe,yBAAyB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D,6DAAQ,OAAO;AACzE,uDAAuD,QAAQ,OAAO,yBAAyB;AAC/F;AACA;AACA;AACA;AACA;AACO,yFAAyF,4BAA4B,GAAG;AAC/H,SAAS,qCAAqC,EAAE,mFAAmF;AACnI,SAAS;AACT,aAAa,8BAA8B;AAC3C,aAAa,EAAE,mCAAmC,EAAE,+EAA+E,EAAE;AAC9H,0EAA0E,4BAA4B,EAAE;AAC/G;AACA,UAAU;AACV,aAAa,wBAAwB;AACrC,aAAa,EAAE,mCAAmC;AAClD,SAAS;AACF;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACO,yFAAyF,mDAAU;AAC1G;AACA;AACA;AACA;AACA;AACA;AACO,yFAAyF,mDAAU;AAC1G;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACO,8DAA8D,oEAAe;AAC7E,oEAAoE,oEAAe;AAC1F;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA,CAAC,KAAK;AACN,2CAA2C,upV;;;;;;;;;;;;AC7Q3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+C;AACT;AACE;AACmC;AAC3E;AACA;AACA;AACA;AACO;AACP,wBAAwB,0DAAW;AACnC;AACA;AACA;AACA;AACA;AACA;AACA,0FAA0F,gCAAgC;AAC1H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,yEAAwB;AAC7C,2BAA2B,qEAAoB;AAC/C,6BAA6B,mEAAmB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,4DAAY;AAClC;AACA;AACA,eAAe;AACf,eAAe,gEAAgE;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,SAAS;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,+3F;;;;;;;;;;;;AC9E3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAiF;AAC4F;AACd;AACrH;AACU;AAC7C;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,wEAAwE;AACzE;AACA;AACA;AACA;AACA;AACA,CAAC,sDAAsD;AACvD;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,8DAAwB,eAAe,8DAAwB;AAC3E;AACA;AACA;AACA,YAAY,8DAAwB;AACpC,gBAAgB,8DAAwB;AACxC,gBAAgB,8DAAwB;AACxC;AACA;AACA;AACA,YAAY,8DAAwB;AACpC,gBAAgB,8DAAwB;AACxC;AACA;AACA;AACA,YAAY,8DAAwB;AACpC,gBAAgB,8DAAwB;AACxC,gBAAgB,8DAAwB;AACxC;AACA;AACA;AACA,YAAY,8DAAwB,cAAc,8DAAwB;AAC1E;AACA;AACA;AACA,YAAY,8DAAwB;AACpC,gBAAgB,8DAAwB;AACxC,gBAAgB,8DAAwB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,kDAAkD;AAC5C;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wFAAwF,KAAK;AAC7F;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D,+BAA+B;AAC5F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD,WAAW;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,6EAA+B;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,WAAW,kEAAkE,WAAW;AAClH;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kGAAkG,KAAK;AACvG;AACA;AACA;AACA;AACA,2BAA2B,wEAAuB;AAClD;AACA;AACA,0EAA0E,SAAS;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,WAAW,uEAAuE,WAAW;AACvH;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,WAAW,+DAA+D,WAAW;AACvH,SAAS;AACT;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACO;AACP,6BAA6B,8DAAa;AAC1C;AACA,uBAAuB,8DAAa;AACpC;AACA,eAAe;AACf,eAAe;AACf;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA,QAAQ,wEAAiB;AACzB,QAAQ,2EAAoB;AAC5B,QAAQ,uGAA4B,CAAC,iGAA8B;AACnE;AACA;AACA;AACA;AACA;AACA,6BAA6B,iHAAsC,mBAAmB,iGAAmD;AACzI,qBAAqB,iEAAmB,CAAC,gDAAU;AACnD;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA,2CAA2C,2zT;;;;;;;;;;;;ACzP3C;AAAA;AAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,2CAA2C,2yB;;;;;;;;;;;;AClB3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0B;AACC;AACF;AACD;AACC;AACC;AAC1B,2CAA2C,uX;;;;;;;;;;;;ACN3C;AAAA;AAAA;AAAA;AAAoC;AACpC;AACA;AACA;AACA;AACA;AACA,mCAAmC,4DAAgB;AACnD,iBAAiB,oDAAQ,CAAC,oDAAQ,8BAA8B,oDAAQ,2BAA2B,oDAAQ;AAC3G;AACA,qBAAqB,iDAAK;AAC1B,kBAAkB,iDAAK;AACvB;AACA;AACA,4BAA4B,oDAAQ,CAAC,oDAAQ,QAAQ,oDAAQ,YAAY,oDAAQ;AACjF,2BAA2B,oDAAQ,CAAC,oDAAQ,QAAQ,oDAAQ,qBAAqB,oDAAQ;AACzF;AACA;AACA,IAAI,oDAAQ,CAAC,oDAAQ,iBAAiB,oDAAQ;AAC9C;AACA;AACA,qBAAqB,oDAAQ,CAAC,oDAAQ,kBAAkB,oDAAQ;AAChE;AACA;AACA;AACA;AACA,qBAAqB,oDAAQ;AAC7B;AACA;AACA,eAAe,iDAAK,CAAC,oDAAQ,CAAC,oDAAQ,OAAO,oDAAQ,WAAW,oDAAQ,kCAAkC,oDAAQ,CAAC,oDAAQ,OAAO,oDAAQ,WAAW,oDAAQ;AAC7J;AACA;AACA,cAAc,oDAAQ,CAAC,oDAAQ,QAAQ,oDAAQ,cAAc,EAAE;AAC/D;AACA;AACA;AACA,SAAS,oDAAQ;AACjB;AACA;AACA;AACA;AACA,CAAC;AACM;AACP,2CAA2C,+4H;;;;;;;;;;;;AC1C3C,8CAAa;;AAEb;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,SAAS,OAAO;AAChB;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C;AAC/C;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,SAAS,wCAAwC;AACjD;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,QAAQ;AACR;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,WAAW;AACX;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,eAAe;AAChC;AACA;AACA,iBAAiB,eAAe;AAChC;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB,cAAc;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,iBAAiB,YAAY;AAC7B;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,iBAAiB,gBAAgB;AACjC;AACA;AACA;AACA;AACA;AACA,mBAAmB,gBAAgB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB,gBAAgB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,gBAAgB;AACnC;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,gBAAgB;AACjC;AACA;AACA;AACA;AACA,mBAAmB,oBAAoB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,aAAa;AACpC;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,UAAU,aAAa;AACvB;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA,mBAAmB,uBAAuB;AAC1C;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;;ACr2CA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuD;AACoE;AACrD;AACtE;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,oEAAe;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,2DAAa;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,iBAAiB,uFAAyC;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,KAAK,GAAG,oCAAoC;AAC5C;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D,wBAAwB;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,2DAA2D;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iFAAiF,iEAAmB,CAAC,8EAAa,4BAA4B;AAC9I;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,4DAAc;AAC/C;AACA;AACA,uCAAuC,sBAAsB;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+FAA+F,cAAc;AAC7G;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,IAAI,2BAA2B;AACpC;AACA,gCAAgC,2BAA2B;AAC3D,kBAAkB,oEAAe;AACjC;AACA;AACA;AACA;AACA,2CAA2C,2jW;;;;;;;;;;;;ACxT3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2D;AACT;AACR;AAC1C;AACA;AACA;AACA;AACA;AACA,CAAC;AACM;AACP;AACA;AACA;AACA;AACA;AACA,CAAC,4DAA4D;AAC7D;AACA;AACA;AACA,CAAC,8BAA8B;AACxB;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,kEAAoB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,6DAAQ;AACvC;AACA;AACA;AACA;AACA,kJAAkJ,mBAAmB;AACrK;AACA;AACA;AACA;AACA;AACA,2BAA2B,8DAAS;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,MAAM;AAC1D;AACA;AACA,KAAK;AACL;AACA,YAAY,yDAAyD;AACrE;AACA;AACA;AACA;AACA,CAAC,8BAA8B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,iCAAiC,kEAAoB;AAC5D,oDAAoD,sCAAsC,GAAG,aAAa;AAC1G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,WAAW,cAAc,qCAAqC,cAAc,YAAY;AACjH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,WAAW,qDAAqD,WAAW;AACpG,qCAAqC,kEAAoB;AACzD;AACA,wCAAwC,WAAW,iEAAiE,WAAW;AAC/H,sCAAsC,WAAW,8DAA8D,WAAW;AAC1H;AACA;AACA;AACA,yBAAyB,WAAW,mDAAmD,WAAW;AAClG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,WAAW,SAAS,cAAc,iDAAiD,0CAA0C;AACtJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAiE,WAAW,uDAAuD,uCAAuC;AAC1K;AACA,mBAAmB,8DAAa;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,mDAAmD,WAAW,IAAI,yBAAyB;AAC3F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,8CAA8C,WAAW;AACrE;AACA,2CAA2C,mlT;;;;;;;;;;;;AC1Q3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAoC;AACpC,2CAA2C,+N;;;;;;;;;;;;ACD3C;AAAA;AAAA;AAAuC;AACvC;AACA;AACA;AACA;AACA;AACO;AACP;AACA,sBAAsB,0DAAK;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,+2G;;;;;;;;;;;;AC3E3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyB;AACoB;AACF;AACR;AACI;AACA;AACvC,2CAA2C,mV;;;;;;;;;;;;ACN3C;AAAA;AAAA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,26L;;;;;;;;;;;;AC9H3C;AAAA;AAAA;AACA;AACA;AACA;AACO;AACP,2CAA2C,uT;;;;;;;;;;;;ACL3C;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,CAAC,kCAAkC;AACnC;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,CAAC,0CAA0C;AAC3C,2CAA2C,++C;;;;;;;;;;;;ACnD3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgD;AACsB;AACZ;AAClB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACO,yCAAyC,gEAAW,CAAC,sEAAoB;AAChF;AACA;AACA;AACA;AACO;AACP,2CAA2C,2uV;;;;;;;;;;;;AChM3C;AAAA;AAAA;AACA;AACA;AACA;AACO;AACP,2CAA2C,uT;;;;;;;;;;;;ACL3C;AAAA;AAAA;AACA;AACA;AACA;AACO;AACP,2CAA2C,+R;;;;;;;;;;;;ACL3C;AAAA;AAAA;AACA;AACA;AACA;AACO;AACP,2CAA2C,2S;;;;;;;;;;;;ACL3C;AAAA;AAAA;AACA;AACA;AACA;AACO;AACP,2CAA2C,2S;;;;;;;;;;;;ACL3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA4B;AACA;AACL;AACE;AACA;AACzB,2CAA2C,uT;;;;;;;;;;;;ACL3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuE;AAC1B;AAC7C;AACA;AACA;AACA;AACA;AACA;AACO;AACP,uBAAuB,oEAAmB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACO,yCAAyC,gEAAW,CAAC,6DAAoB;AAChF;AACA;AACA;AACA;AACO;AACP,2CAA2C,mgC;;;;;;;;;;;;ACvB3C;AAAA;AAAA;AAAA;AAAmH;AACnH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,oDAAW;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D,wDAAe;AAC1E,6DAA6D,wDAAe;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,kGAAkG,8EAA6B;AACtI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,2EAA2E,yEAAwB;AAC1G,2CAA2C,+hd;;;;;;;;;;;;AClW3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkE;AACrB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACO;AACP,uBAAuB,oEAAmB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACO,oCAAoC,gEAAW,CAAC,wDAAe;AACtE;AACA;AACA;AACA;AACO;AACP,2CAA2C,+9B;;;;;;;;;;;;ACvB3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAoE;AACvB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACO;AACP,uBAAuB,oEAAmB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACO,sCAAsC,gEAAW,CAAC,0DAAiB;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,2CAA2C,m/B;;;;;;;;;;;;AC1B3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAoE;AACvB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACO;AACP,uBAAuB,oEAAmB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACO,sCAAsC,gEAAW,CAAC,0DAAiB;AAC1E;AACA;AACA;AACA;AACO;AACP,2CAA2C,++B;;;;;;;;;;;;ACvmS;;;;;;;;;;;;ACL3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAwL;AACxL;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,0BAA0B,wEAAmB;AAC7C,WAAW,2DAA2D,GAAG,sEAAiB;AAC1F;AACA;AACA;AACA,2BAA2B,wEAAmB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACO,kCAAkC,oEAAe;AACxD;AACA,IAAI,wEAAmB;AACvB,IAAI,0EAAqB;AACzB;AACA,IAAI,wEAAmB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,oCAAoC,oEAAe;AAC1D,IAAI,0EAAqB;AACzB;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA,qBAAqB,wEAAmB;AACxC,WAAW,6CAA6C,GAAG,sEAAiB;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,oCAAoC,oEAAe;AAC1D,IAAI,wEAAmB;AACvB,IAAI,0EAAqB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,sCAAsC,oEAAe;AAC5D,IAAI,0EAAqB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,oBAAoB,wEAAmB;AACvC;AACA,WAAW,uDAAuD,GAAG,sEAAiB;AACtF;AACA;AACA;AACA;AACA;AACA,mBAAmB,wBAAwB;AAC3C,eAAe,oBAAoB;AACnC;AACA;AACA;AACA;AACA;AACA,WAAW,yDAAyD,GAAG,sEAAiB;AACxF;AACA;AACA;AACA;AACA;AACA,mBAAmB,yBAAyB;AAC5C,eAAe,qBAAqB;AACpC;AACA;AACA;AACA;AACA;AACA,qBAAqB,wEAAmB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,qCAAqC,oEAAe;AAC3D,IAAI,wEAAmB;AACvB;AACA;AACA,IAAI,wEAAmB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,yDAAyD,6DAAQ;AACxE;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACO,qEAAqE,oEAAe,iBAAiB,oEAAe;AAC3H;AACA,IAAI,wEAAmB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACO,oEAAoE,oEAAe;AAC1F;AACA;AACA;AACA;AACA;AACA;AACA;AACO,2EAA2E,oEAAe,iBAAiB,wEAAmB;AACrI,2CAA2C,+4N;;;;;;;;;;;;ACxM3C;AAAA;AAAA;AAAA;AACA;AACO;AACP;AACA;AACA;AACA,mBAAmB,kBAAkB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,kBAAkB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,oBAAoB;AACpB;AACA,mBAAmB,kBAAkB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,uCAAuC;AACpD;AACA,iBAAiB,uCAAuC;AACxD;AACA;AACA;AACA;AACA,2CAA2C,2mH;;;;;;;;;;;;ACtD3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,iDAAiD,SAAS;AACjE;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,CAAC,kBAAkB;AACnB;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,2CAA2C,+hF;;;;;;;;;;;;ACxE3C;AAAA;AAAA;AAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,qDAAQ,OAAO;AACpD;AACA,+BAA+B,gBAAgB;AAC/C;AACA;AACA;AACA,uBAAuB,KAAK,IAAI,gBAAgB;AAChD;AACA;AACA;AACA,CAAC;AACD,2CAA2C,2lC;;;;;;;;;;;;AC3C3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA,wBAAwB,gBAAgB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,wBAAwB,gBAAgB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA,wBAAwB,gBAAgB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,wBAAwB,gBAAgB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,mnI;;;;;;;;;;;;ACrK3C;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,cAAc;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,UAAU;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,+yJ;;;;;;;;;;;;ACjG3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAsB;AACG;AACC;AACJ;AACC;AACvB,2CAA2C,mT;;;;;;;;;;;ACL3C;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;AACA,aAAa,mBAAO,CAAC,eAAQ;AAC7B,GAAG;AACH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,wCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,iBAAiB;AACpC;AACA;;AAEA;AACA;AACA;AACA,wCAAwC,QAAQ;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,wBAAwB,mBAAmB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,uBAAuB,SAAS;AAChC;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,OAAO;AACP;;AAEA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mBAAmB,iBAAiB;AACpC;AACA;;AAEA;AACA;AACA;AACA,sCAAsC,YAAY;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,uBAAuB,SAAS;AAChC;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,OAAO;AACP;;AAEA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,sCAAsC,sBAAsB;AAC5D;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,uBAAuB,SAAS;AAChC;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;;AAEA,iBAAiB,SAAS;AAC1B;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,iBAAiB;AACpqBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB,4BAA4B;AAC7C;AACA;;AAEA,iBAAiB,aAAa;AAC9B;AACA;;AAEA;AACA;AACA,KAAK;AACL,iBAAiB,aAAa;AAC9B;AACA;;AAEA;AACA;;AAEA,YAAY,eAAe;AAC3B;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,qBAAqB,gBAAgB;AACrC;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,gBAAgB;AACnC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA,mBAAmB,cAAc;AACjC;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA,mBAAmB,cAAc;AACjC;AACA;;AAEA;AACA,YAAY,cAAc;AAC1B;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,mBAAmB,iBAAiB;AACpC;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA,mBAAmB,cAAc;AACjC;AACA;AACA;AACA;AACA,UAAU,6BAA6B;AACvC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,YAAY,cAAc;AAC1B;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA,mBAAmB,cAAc;AACjC;AACA;AACA;AACA;AACA,UAAU,6BAA6B;AACvC;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,cAAc;AAC1B;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,mBAAmB,SAAS;AAC5B;AACA;AACA;AACA;AACA;AACA,oDAAoD,WAAW;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,oBAAoB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,WAAW;AAC/D;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,mBAAmB,OAAO;AAC1B;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B;AACA;AACA;AACA;;AAEA;AACA;;AAEA,mBAAmB,OAAO;AAC1B;;AAEA;AACA;;AAEA,qBAAqB,OAAO;AAC5B;AACA;;AAEA,uBAAuB,OAAO;AAC9B;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,uBAAuB,GAAG;AAC1B;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,mBAAmB,WAAW;AAC9B;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,WAAW;AAC9B;AACA;AACA;;AAEA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,mBAAmB,SAAS;AAC5B;;AAEA,kCAAkC;AAClC,sCAAsC;AACtC;;AAEA;AACA,qBAAqB,OAAO;AAC5B;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,OAAO;AAC1B;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,mBAAmB,OAAO;AAC1B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,cAAc;AACjC;AACA;;AAEA;AACA,6BAA6B,cAAc;AAC3C;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,iBAAiB,iBAAiB;AAClC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,+BAA+B,QAAQ;AACvC;AACA;;AAEA,iBAAiB,OAAO;AACxB;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,qBAAqB,OAAO;AAC5B;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA,iBAAiB,iBAAiB;AAClC;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA,6BAA6B,mCAAmC;AAChE;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,mBAAmB,+CAA+C;AAClE;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA,qBAAqB,sCAAsC;AAC3D;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,eAAe,gBAAgB;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,yBAAyB;AACnC;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,eAAe,iBAAiB;AAChC;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,qBAAqB,cAAc;AACnC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,uBAAuB,QAAQ;AAC/B;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,iCAAiC,QAAQ;AACzC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,iCAAiC,QAAQ;AACzC;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,6BAA6B,mCAAmC;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,6BAA6B,mCAAmC;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA,6BAA6B,mCAAmC;AAChE;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,6BAA6B,mCAAmC;AAChE;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,uBAAuB,0BAA0B;AACjD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,gCAAgC;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,iCAAiC,QAAQ;AACzC;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,mBAAmB,YAAY;AAC/B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,gBAAgB,kBAAkB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,gBAAgB;AACnC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB,gBAAgB;AACnC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,oBAAoB;AACzC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mBAAmB,gBAAgB;AACnC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,4BAA4B,QAAQ;AACpC;AACA,6BAA6B,QAAQ;AACrC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,CAAC,EAAE,MAA6B;;;;;;;;;;;;;ACl2GhC;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,iBAAiB,gBAAgB;AACjC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,iBAAiB,mBAAO,CAAC,eAAQ;AACjC;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;;;;;;;;;;;;AChEA,YAAY,mBAAO,CAAC,kDAAQ;AAC5B;;AAEA;;;;;;;;;;;;;ACHY;;AAEZ,aAAa,mBAAO,CAAC,0CAAM;AAC3B,aAAa,mBAAO,CAAC,wDAAa;;AAElC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACjDY;;AAEZ,iBAAiB,mBAAO,CAAC,0DAAa;AACtC,oBAAoB,mBAAO,CAAC,gDAAQ;;AAEpC;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEY;;AAEZ,aAAa,mBAAO,CAAC,oDAAW;AAChC,cAAc,mBAAO,CAAC,gDAAS;AAC/B,cAAc,mBAAO,CAAC,gDAAS;;AAE/B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,qBAAqB,mDAAmD;AACxE;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mBAAmB,UAAU;AAC7B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,YAAY;AAC7B;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA,uCAAuC,SAAS;AAChD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAe,iBAAiB;AAChC;AACA;AACA;;AAEA;AACA;AACA,aAAa,iBAAiB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gDAAgD,EAAE;AAClD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA,wBAAwB,eAAe;AACvC;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,wBAAwB,QAAQ;AAChC;AACA,qBAAqB,eAAe;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,YAAY;AAC7B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,qBAAqB,SAAS;AAC9B;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,qBAAqB,SAAS;AAC9B;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,qBAAqB,SAAS;AAC9B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,kBAAkB;AACnC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,mBAAmB,cAAc;AACjuDAAuD,OAAO;AAC9D;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA,uDAAuD,OAAO;AAC9D;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB;AAClB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,qBAAqB,QAAQ;AAC7B;AACA;AACA,GAAG;AACH;AACA,eAAe,SAAS;AACxB;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,mBAAmB,SAAS;AAC5B;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,eAAe,iBAAiB;AAChC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,YAAY;AAC7B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,iBAAiB,gBAAgB;AACjC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,gBAAgB;AACjC;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,iBAAiB,YAAY;AAC7B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;AC5vDA,aAAa,mBAAO,CAAC,wDAAa;AAClC,gBAAgB,mBAAO,CAAC,yDAAQ;AAChC,oBAAoB,mBAAO,CAAC,2EAAgB;AAC5C,eAAe,mBAAO,CAAC,6DAAU;;AAEjC;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;;;;;;AClGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;;;;;;;;;;;;;AC1GY;AACZ,eAAe,mBAAO,CAAC,6DAAU;AACjC,UAAU,mBAAO,CAAC,8CAAQ;AAC1B,gBAAgB,mBAAO,CAAC,oDAAW;AACnC,UAAU,mBAAO,CAAC,8CAAQ;AAC1B,WAAW,mBAAO,CAAC,wDAAa;;AAEhC;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;AC7BA,UAAU,mBAAO,CAAC,8CAAQ;;AAE1B;AACA;AACA;;;;;;;;;;;;;ACJY;AACZ,eAAe,mBAAO,CAAC,6DAAU;AACjC,aAAa,mBAAO,CAAC,sDAAU;AAC/B,WAAW,mBAAO,CAAC,wDAAa;AAChC,aAAa,mBAAO,CAAC,wDAAa;AAClC,UAAU,mBAAO,CAAC,0DAAiB;AACnC,gBAAgB,mBAAO,CAAC,oDAAW;;AAEnC,UAAU,mBAAO,CAAC,8CAAQ;;AAE1B;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA,iBAAiB,eAAe;AAChC;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC7DY;AACZ,eAAe,mBAAO,CAAC,6DAAU;AACjC,aAAa,mBAAO,CAAC,wDAAa;;AAElC,WAAW,mBAAO,CAAC,wDAAa;;AAEhC;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA,iBAAiB,eAAe;AAChC;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC7Ca;;AAEb;;AAEA,mBAAmB,mBAAO,CAAC,6DAAiB;AAC5C,iBAAiB,mBAAO,CAAC,uEAAkB;AAC3C,gBAAgB,mBAAO,CAAC,gDAAS;AACjC,iBAAiB,mBAAO,CAAC,6EAAkB;AAC3C,kBAAkB,mBAAO,CAAC,yEAAmB;;AAE7C;AACA,cAAc,mBAAO,CAAC,uEAAe;AACrC,iBAAiB,mBAAO,CAAC,6EAAkB;;;;;;;;;;;;;ACZ9B;;AAEb,SAAS,mBAAO,CAAC,6CAAO;AACxB,YAAY,mBAAO,CAAC,+DAAU;AAC9B;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,gBAAgB;AACjC;AACA,sCAAsC,QAAQ;AAC9C;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,OAAO;AACxB,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,8BAA8B,QAAQ;AACtC;AACA,mBAAmB,wBAAwB;AAC3C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;;AAEA;AACA,uBAAuB,QAAQ;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mBAAmB,SAAS;AAC5B;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,QAAQ;AAC3B;;AAEA;AACA;AACA,qBAAqB,SAAS;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,SAAS;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,SAAS;AAC1B;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,WAAW;AAC5B,mBAAmB,UAAU;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;;;;;;;;;;;;;ACrXa;;AAEb,YAAY,mBAAO,CAAC,+DAAU;AAC9B,SAAS,mBAAO,CAAC,6CAAO;AACxB,eAAe,mBAAO,CAAC,6DAAU;AACjC,WAAW,mBAAO,CAAC,kEAAQ;;AAE3B;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;AC/aa;;AAEb;;AAEA,aAAa,mBAAO,CAAC,kEAAQ;AAC7B,cAAc,mBAAO,CAAC,oEAAS;AAC/B,aAAa,mBAAO,CAAC,kEAAQ;AAC7B,gBAAgB,mBAAO,CAAC,wEAAW;;;;;;;;;;;;;ACPtB;;AAEb,SAAS,mBAAO,CAAC,6CAAO;AACxB,eAAe,mBAAO,CAAC,6DAAU;AACjC,WAAW,mBAAO,CAAC,kEAAQ;;AAE3B,YAAY,mBAAO,CAAC,+DAAU;;AAE9B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe;AACf,uCAAuC;AACvC,eAAe;;AAEf,qBAAqB,iBAAiB;AACtC;;AAEA,+BAA+B,QAAQ;AACvC;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;ACjLa;;AAEb,YAAY,mBAAO,CAAC,+DAAU;AAC9B,SAAS,mBAAO,CAAC,6CAAO;AACxB,eAAe,mBAAO,CAAC,6DAAU;AACjC,WAAW,mBAAO,CAAC,kEAAQ;;AAE3B;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,2DAA2D;AAC3D;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK,eAAe;AACpB,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAU;AACV;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB,mBAAmB;AACpC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,iBAAiB,WAAW;AAC5B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,SAAS;AAC5B;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;ACv6Ba;;AAEb;;AAEA,WAAW,mBAAO,CAAC,mDAAS;AAC5B,YAAY,mBAAO,CAAC,oEAAS;AAC7B,YAAY,mBAAO,CAAC,8DAAS;;AAE7B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,QAAQ,mBAAO,CAAC,8FAAyB;AACzC,CAAC;AACD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;;;;;;;;;;;;AC7MY;;AAEb,SAAS,mBAAO,CAAC,6CAAO;AACxB,eAAe,mBAAO,CAAC,4DAAW;AAClC,YAAY,mBAAO,CAAC,+DAAU;AAC9B,aAAa,mBAAO,CAAC,iEAAW;AAChC,WAAW,mBAAO,CAAC,gDAAS;AAC5B;;AAEA,cAAc,mBAAO,CAAC,6DAAO;AAC7B,gBAAgB,mBAAO,CAAC,yEAAa;;AAErC;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,eAAe;;AAEf;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA,oBAAoB,MAAM;AAC1B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,0BAA0B,2CAA2C;AACrE;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,iBAAiB,OAAO;AACxB;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AChPa;;AAEb,SAAS,mBAAO,CAAC,6CAAO;AACxB,YAAY,mBAAO,CAAC,+DAAU;AAC9B;;AAEA;AACA;AACA;AACA;;AAEA,kBAAkB,sBAAsB;AACxC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;;AAEA;AACA,YAAY;AACZ;AACA,YAAY;AACZ;AACA,YAAY;;AAEZ,UAAU;AACV;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;ACrHa;;AAEb,SAAS,mBAAO,CAAC,6CAAO;;AAExB,YAAY,mBAAO,CAAC,+DAAU;AAC9B;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,cAAc;AAC9C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACrIa;;AAEb,WAAW,mBAAO,CAAC,mDAAS;AAC5B,aAAa,mBAAO,CAAC,iEAAW;AAChC,YAAY,mBAAO,CAAC,+DAAU;AAC9B;AACA;AACA,cAAc,mBAAO,CAAC,gEAAO;AAC7B,gBAAgB,mBAAO,CAAC,4EAAa;;AAErC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,UAAU,aAAa;AACvB,UAAU,qBAAqB;AAC/B,YAAY,UAAU;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,iCAAiC;AAC9D;;AAEA;AACA,UAAU,MAAM;AAChB,UAAU,uBAAuB;AACjC,UAAU,2BAA2B;AACrC,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,sBAAsB;AACvC;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;ACrHa;;AAEb,YAAY,mBAAO,CAAC,+DAAU;AAC9B;AACA;AACA;;AAEA;AACA,UAAU,MAAM;AAChB,UAAU,OAAO;AACjB;AACA,UAAU,YAAY;AACtB,UAAU,MAAM;AAChB,UAAU,YAAY;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,6BAA6B,WAAW;AACxC;;AAEA;AACA;AACA;AACA,6BAA6B,iBAAiB;AAC9C;;AAEA;AACA;AACA;;AAEA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,CAAC;;AAED;AACA;AACA,CAAC;;AAED;AACA;AACA,CAAC;;AAED;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;;;;;;;;;;;;AC9Fa;;AAEb,SAAS,mBAAO,CAAC,6CAAO;AACxB,YAAY,mBAAO,CAAC,+DAAU;AAC9B;AACA;AACA;;AAEA;AACA,UAAU,MAAM;AAChB,UAAU,oBAAoB;AAC9B,UAAU,mBAAmB;AAC7B,UAAU,gBAAgB;AAC1B,UAAU,aAAa;AACvB,UAAU,aAAa;AACvB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,CAAC;;AAED;AACA;AACA,CAAC;;AAED;AACA;AACA,CAAC;;AAED;AACA;AACA,CAAC;;AAED;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;;;;;;;;;;;AChwBa;;AAEb;AACA,SAAS,mBAAO,CAAC,6CAAO;AACxB,gBAAgB,mBAAO,CAAC,wEAAqB;AAC7C,eAAe,mBAAO,CAAC,wFAA2B;;AAElD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA,mBAAmB,WAAW;AAC9B;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;ACtHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,sBAAsB;AACvC;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA,cAAc;AACd;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA,mBAAmB,SAAS;AAC5B;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,sBAAsB;AACvC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA,iCAAiC,QAAQ;AACzC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,OAAO;AACP;AACA,sCAAsC,QAAQ;AAC9C;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;;AAEA;AACA,QAAQ,yBAAyB;AACjC;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,gBAAgB;AACjC;AACA;AACA;AACA;;;;;;;;;;;;;AC/bY;AACZ,aAAa,mBAAO,CAAC,wDAAa;AAClC,gBAAgB,mBAAO,CAAC,yDAAQ;AAChC,eAAe,mBAAO,CAAC,6DAAU;;AAEjC;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mCAAmC,qBAAqB;AACxD;AACA;AACA;AACA;;AAEA;AACA,0CAA0C,WAAW;AACrD;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,OAAO;;AAExB;AACA;;AAEA;AACA;AACA;;AAEA;;;;;;;;;;;;AC9FA;;AAEA,aAAa,mBAAO,CAAC,8DAAc;AACnC,cAAc,mBAAO,CAAC,gEAAe;AACrC,WAAW,mBAAO,CAAC,0DAAY;AAC/B,cAAc,mBAAO,CAAC,gEAAe;AACrC,YAAY,mBAAO,CAAC,4DAAa;;AAEjC;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACda;;AAEb,YAAY,mBAAO,CAAC,yDAAS;AAC7B,aAAa,mBAAO,CAAC,wEAAqB;;AAE1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,mBAAmB,gBAAgB;AACnC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB;;AAEA;AACA;AACA;AACA,mBAAmB,oBAAoB;AACvC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,oBAAoB;AACnC;AACA;;AAEA;AACA;;;;;;;;;;;;;AC3Fa;;AAEb,YAAY,mBAAO,CAAC,yDAAS;AAC7B,aAAa,mBAAO,CAAC,wEAAqB;;AAE1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,0BAA0B,oBAAoB;AAC9C;;AAEA,aAAa,gBAAgB;AAC7B;AACA;;AAEA;AACA,aAAa,gBAAgB;AAC7B;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;AC9Ca;;AAEb,YAAY,mBAAO,CAAC,yDAAS;AAC7B,aAAa,mBAAO,CAAC,2DAAU;;AAE/B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,QAAQ;AACzjJa;;AAEb,eAAe,mBAAO,CAAC,yDAAS;AAChC,iBAAiB,mBAAO,CAAC,6DAAW;AACpC,iBAAiB,mBAAO,CAAC,6DAAW;AACpC,iBAAiB,mBAAO,CAAC,6DAAW;AACpC,iBAAiB,mBAAO,CAAC,6DAAW;;;;;;;;;;;;;ACNvB;;AAEb,YAAY,mBAAO,CAAC,0DAAU;AAC9B,aAAa,mBAAO,CAAC,4DAAW;AAChC,gBAAgB,mBAAO,CAAC,+DAAU;;AAElC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,iBAAiB,QAAQ;AACzB;;AAEA,OAAO,cAAc;AACrB;;AAEA;AACA;AACA;AACA;AACA;;AAEA,aAAa,cAAc;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACzEa;;AAEb,YAAY,mBAAO,CAAC,0DAAU;AAC9B,aAAa,mBAAO,CAAC,yDAAO;;AAE5B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;AC5Ba;;AAEb,YAAY,mBAAO,CAAC,0DAAU;AAC9B,aAAa,mBAAO,CAAC,4DAAW;AAChC,gBAAgB,mBAAO,CAAC,+DAAU;AAClC,aAAa,mBAAO,CAAC,wEAAqB;;AAE1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,iBAAiB,QAAQ;AACzB;AACA,QAAQ,cAAc;AACtB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa,cAAc;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACxGa;;AAEb,YAAY,mBAAO,CAAC,0DAAU;;AAE9B,aAAa,mBAAO,CAAC,yDAAO;;AAE5B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AClCa;;AAEb,YAAY,mBAAO,CAAC,0DAAU;AAC9B,aAAa,mBAAO,CAAC,4DAAW;AAChC,aAAa,mBAAO,CAAC,wEAAqB;;AAE1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,iBAAiB,QAAQ;AACzB;AACA,QAAQ,cAAc;AACtB,8CAA8C;AAC9C;AACA,0BAA0B;AAC1B;AACA,gDAAgD;AAChD;AACA,0BAA0B;AAC1B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,iBAAiB,cAAc;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mCAAmC;AACnC,mCAAmC;;AAEnC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mCAAmC;AACnC,mCAAmC;;AAEnC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mCAAmC;;AAEnC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,mCAAmC;;AAEnC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oCAAoC;AACpC;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oCAAoC;AACpC;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACzUa;;AAEb,YAAY,mBAAO,CAAC,0DAAU;AAC9B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;AChDa;;AAEb,aAAa,mBAAO,CAAC,wEAAqB;AAC1C,eAAe,mBAAO,CAAC,6DAAU;;AAEjC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,gBAAgB;AACrC;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,iBAAiB,gBAAgB;AACjC;AACA;AACA,GAAG;AACH,eAAe,gBAAgB;AAC/B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,gBAAgB;AACjC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,gBAAgB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,4BAA4B,gBAAgB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,wBAAwB,gBAAgB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACrRa;;AAEb,WAAW,mBAAO,CAAC,mDAAS;AAC5B,YAAY,mBAAO,CAAC,wFAA2B;AAC/C,aAAa,mBAAO,CAAC,wEAAqB;;AAE1C;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,iBAAiB,mBAAmB;AACpC;AACA;AACA;;AAEA;AACA;AACA,wCAAwC;AACxC;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AChHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,QAAQ,WAAW;;AAEnB;AACA;AACA;AACA,QAAQ,WAAW;;AAEnB;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA,QAAQ,WAAW;;AAEnB;AACA;AACA,QAAQ,UAAU;;AAElB;AACA;;;;;;;;;;;;ACnFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC1BA,iBAAiB;;AAEjB;AACA;AACA;;;;;;;;;;;;;ACJY;AACZ,eAAe,mBAAO,CAAC,6DAAU;AACjC,eAAe,mBAAO,CAAC,oDAAW;AAClC,aAAa,mBAAO,CAAC,wDAAa;;AAElC;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,iBAAiB,QAAQ;;AAEzjJA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;ACVa;;AAEb;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,gBAAgB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,gBAAgB;AACnC;AACA,GAAG;AACH,mBAAmB,gBAAgB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,gBAAgB;AACjC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACzDA,iBAAiB,mBAAO,CAAC,uDAAa;AACtC,qBAAqB,mBAAO,CAAC,6DAAY;;;;;;;;;;;;ACDzC,6EAAsB,mBAAO,CAAC,iEAAgB;AAC9C,sBAAsB,mBAAO,CAAC,yEAAoB;AAClD,WAAW,mBAAO,CAAC,yDAAQ;AAC3B,aAAa,mBAAO,CAAC,wDAAa;;AAElC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA,sBAAsB,eAAe;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,GAAG;AACH;;;;;;;;;;;;;ACnGA;AACA;AACA;AACA;AACA,CAAC;AACD;;AAEA;AACA;AACA;;;;;;;;;;;;;ACTA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,8DAA8D;AAC9D;AACA;AACA;;;;;;;;;;;;;AC3BA,UAAU,mBAAO,CAAC,0DAAiB;AACnC,gBAAgB,mBAAO,CAAC,oDAAW;AACnC,UAAU,mBAAO,CAAC,8CAAQ;;AAE1B,sBAAsB,mBAAO,CAAC,iEAAgB;AAC9C,sBAAsB,mBAAO,CAAC,yEAAoB;AAClD,aAAa,mBAAO,CAAC,wDAAa;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA,iBAAiB,eAAe;AAChC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,iBAAiB,QAAQ;AACzB;;AAEA;AACA;;AAEA,mBAAmB,gBAAgB;AACnC;AACA,qBAAqB,UAAU;AAC/B;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;;;;;;;ACvGA,+CAAa;;AAEb;AACA;AACA;AACA;AACA,oBAAoB;AACpB,CAAC;AACD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;;;;;;;;;;;;;AC3CA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,qCAAqC;;AAErC;AACA;AACA;;AAEA,2BAA2B;AAC3B;AACA;AACA;AACA,4BAA4B,UAAU;;;;;;;;;;;;;ACvLtC,uDAAY;;AAEZ;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,aAAa,mBAAO,CAAC,wDAAa;AAClC;;AAEA;AACA;AACA,CAAC;AACD;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,iBAAiB;AACjB,2BAA2B;AAC3B;AACA,6BAA6B,kBAAkB;AAC/C;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;;;;;;;;;;;;ACjDA,iBAAiB,mBAAO,CAAC,qFAAyB;;;;;;;;;;;;;ACAlD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEa;;AAEb;;AAEA,UAAU,mBAAO,CAAC,0EAAsB;AACxC;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;;AAEA;AACA,WAAW,mBAAO,CAAC,6DAAc;AACjC,gBAAgB,mBAAO,CAAC,6DAAU;AAClC;;AAEA,eAAe,mBAAO,CAAC,kFAAoB;AAC3C,eAAe,mBAAO,CAAC,kFAAoB;;AAE3C;;AAEA;AACA;AACA;AACA,iBAAiB,iBAAiB;AAClC;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;;AAEA;AACA,E;;;;;;;;;;;;AClIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEa;;AAEb;;AAEA,gBAAgB,mBAAO,CAAC,oFAAqB;;AAE7C;AACA,WAAW,mBAAO,CAAC,6DAAc;AACjC,gBAAgB,mBAAO,CAAC,6DAAU;AAClC;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,E;;;;;;;;;;;;AC9CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb;;AAEA,UAAU,mBAAO,CAAC,0EAAsB;AACxC;;AAEA;;AAEA;AACA,cAAc,mBAAO,CAAC,gDAAS;AAC/B;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,SAAS,mBAAO,CAAC,+CAAQ;;AAEzB;AACA;AACA;AACA;;AAEA;AACA,aAAa,mBAAO,CAAC,wGAA2B;AAChD;;AAEA;;AAEA,aAAa,mBAAO,CAAC,qFAAa;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,WAAW,mBAAO,CAAC,6DAAc;AACjC,gBAAgB,mBAAO,CAAC,6DAAU;AAClC;;AAEA;AACA,gBAAgB,mBAAO,CAAC,aAAM;AAC9B;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;;AAEA,iBAAiB,mBAAO,CAAC,wGAA+B;AACxD,kBAAkB,mBAAO,CAAC,kGAA4B;AACtD;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,yEAAyE,6EAA6E;AACtJ;;AAEA;AACA,qBAAqB,mBAAO,CAAC,8EAAkB;;AAE/C;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,iDAAiD,0FAA0F;;AAE3I;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,wCAAwC,mBAAO,CAAC,4EAAiB;AACjE;AACA;AACA;AACA;;AAEA;AACA,qBAAqB,mBAAO,CAAC,8EAAkB;;AAE/C;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA,kGAAkG;AAClG,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;AACA,4FAA4F;AAC5F,SAAS;AACT;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,gDAAgD;;AAEhD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,sCAAsC,mBAAO,CAAC,4EAAiB;AAC/D;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4EAA4E;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,6DAA6D;AAC7D;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,sCAAsC;;AAEtC;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD;AACxD;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,4CAA4C;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oBAAoB;;AAEpB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,SAAS;AAC5B;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA,4EAA4E;;AAE5E;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA,iBAAiB,yBAAyB;AAC1C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,mDAAmD;AACnD;AACA,mDAAmD,iEAAiE;AACpH;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC;AACA;AACA;AACA;AACA,uCAAuC;AACvC,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gCAAgC,OAAO;AACvC;AACA;AACA;AACA,C;;;;;;;;;;;;;AC1/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,YAAY;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb;;AAEA,aAAa,mBAAO,CAAC,8EAAkB;;AAEvC;AACA,WAAW,mBAAO,CAAC,6DAAc;AACjC,gBAAgB,mBAAO,CAAC,6DAAU;AAClC;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,C;;;;;;;;;;;;ACrNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEa;;AAEb;;AAEA,UAAU,mBAAO,CAAC,0EAAsB;AACxC;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,WAAW,mBAAO,CAAC,6DAAc;AACjC,gBAAgB,mBAAO,CAAC,6DAAU;AAClC;;AAEA;AACA;AACA,aAAa,mBAAO,CAAC,gEAAgB;AACrC;AACA;;AAEA;AACA,aAAa,mBAAO,CAAC,wGAA2B;AAChD;;AAEA;;AAEA,aAAa,mBAAO,CAAC,qFAAa;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,kBAAkB,mBAAO,CAAC,kGAA4B;;AAEtD;;AAEA;;AAEA;AACA,qBAAqB,mBAAO,CAAC,8EAAkB;;AAE/C;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,iDAAiD,0FAA0F;;AAE3I;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL,GAAG;AACH,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH,CAAC;AACD;AACA;AACA;AACA;;AAEA;AACA,qBAAqB,mBAAO,CAAC,8EAAkB;;AAE/C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,iCAAiC;;AAEjC;;AAEA,2CAA2C;AAC3C;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mDAAmD;AACnD;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,oDAAoD;AACpD;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,E;;;;;;;;;;;;;AC9qBa;;AAEb,iDAAiD,0CAA0C,0DAA0D,EAAE;;AAEvJ,aAAa,mBAAO,CAAC,qFAAa;AAClC,WAAW,mBAAO,CAAC,aAAM;;AAEzB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,iBAAiB;AACjB,gDAAgD;AAChD;AACA;AACA;;AAEA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,wDAAwD;AACxD;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,CAAC;;AAED;AACA;AACA,4BAA4B,sBAAsB;AAClD;AACA;AACA,C;;;;;;;;;;;;AC9Ea;;AAEb;;AAEA,UAAU,mBAAO,CAAC,0EAAsB;AACxC;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,E;;;;;;;;;;;ACzEA,iBAAiB,mBAAO,CAAC,+CAAQ;;;;;;;;;;;;ACAjC;AACA,aAAa,mBAAO,CAAC,8CAAQ;AAC7B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC7DA,iBAAiB,mBAAO,CAAC,sEAAY;;;;;;;;;;;;ACArC,2BAA2B,mBAAO,CAAC,yFAA2B;AAC9D;AACA;AACA,mBAAmB,mBAAO,CAAC,yFAA2B;AACtD,iBAAiB,mBAAO,CAAC,qFAAyB;AAClD,oBAAoB,mBAAO,CAAC,2FAA4B;AACxD,sBAAsB,mBAAO,CAAC,+FAA8B;;;;;;;;;;;;ACN5D,iBAAiB,mBAAO,CAAC,sEAAY;;;;;;;;;;;;ACArC,iBAAiB,mBAAO,CAAC,yFAA2B;;;;;;;;;;;;;ACAxC;AACZ,aAAa,mBAAO,CAAC,8CAAQ;AAC7B,eAAe,mBAAO,CAAC,6DAAU;AACjC,eAAe,mBAAO,CAAC,oDAAW;;AAElC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,iBAAiB,QAAQ;;AAEzB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK,OAAO;AACZ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;;;;;;;;;;;AClKA;AACA,aAAa,mBAAO,CAAC,8CAAQ;AAC7B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC/DA;AACA;;AAEA;AACA;AACA;;AAEA,uBAAuB;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,0CAA0C,sBAAsB,EAAE;AAClE;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,UAAU;AACV;AACA;;AAEA,KAAK;AACL;AACA;;AAEA,KAAK;AACL;AACA;;AAEA,KAAK;AACL;AACA;;AAEA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA,CAAC;;;;;;;;;;;;;ACzLD,aAAa,mBAAO,CAAC,wDAAa;;AAElC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,sBAAsB,iBAAiB;AACvC;AACA;;AAEA,mBAAmB,eAAe;AAClC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;;;;;;;;;;;AChFA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,cAAc,mBAAO,CAAC,2CAAO;AAC7B,eAAe,mBAAO,CAAC,6CAAQ;AAC/B,iBAAiB,mBAAO,CAAC,iDAAU;AACnC,iBAAiB,mBAAO,CAAC,iDAAU;AACnC,iBAAiB,mBAAO,CAAC,iDAAU;AACnC,iBAAiB,mBAAO,CAAC,iDAAU;;;;;;;;;;;;ACdnC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,mBAAO,CAAC,6DAAU;AACjC,WAAW,mBAAO,CAAC,6CAAQ;AAC3B,aAAa,mBAAO,CAAC,wDAAa;;AAElC;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,QAAQ;AACzB,QAAQ,QAAQ;;AAEhB,iBAAiB,QAAQ;AACzB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;;;;;;AC7FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,mBAAO,CAAC,6DAAU;AACjC,WAAW,mBAAO,CAAC,6CAAQ;AAC3B,aAAa,mBAAO,CAAC,wDAAa;;AAElC;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,QAAQ;AACzB,QAAQ,QAAQ;;AAEhB,iBAAiB,QAAQ;AACzB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;;;;;;AClGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,mBAAO,CAAC,6DAAU;AACjC,aAAa,mBAAO,CAAC,iDAAU;AAC/B,WAAW,mBAAO,CAAC,6CAAQ;AAC3B,aAAa,mBAAO,CAAC,wDAAa;;AAElC;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;;;;;;ACpDA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,mBAAO,CAAC,6DAAU;AACjC,WAAW,mBAAO,CAAC,6CAAQ;AAC3B,aAAa,mBAAO,CAAC,wDAAa;;AAElC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,QAAQ;AACzB,QAAQ,QAAQ;;AAEhB,iBAAiB,QAAQ;AACzB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;;;;;;ACtIA,eAAe,mBAAO,CAAC,6DAAU;AACjC,aAAa,mBAAO,CAAC,iDAAU;AAC/B,WAAW,mBAAO,CAAC,6CAAQ;AAC3B,aAAa,mBAAO,CAAC,wDAAa;;AAElC;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;;;;;;ACxDA,eAAe,mBAAO,CAAC,6DAAU;AACjC,WAAW,mBAAO,CAAC,6CAAQ;AAC3B,aAAa,mBAAO,CAAC,wDAAa;;AAEliBAAiB,QAAQ;AACzB;AACA;AACA;AACA,QAAQ,SAAS;AACjB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,iBAAiB,SAAS;AAC1B;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;;;;;;ACnQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,SAAS,mBAAO,CAAC,+CAAQ;AACzB,eAAe,mBAAO,CAAC,6DAAU;;AAEjC;AACA,kBAAkB,mBAAO,CAAC,uFAA6B;AACvD,kBAAkB,mBAAO,CAAC,uFAA6B;AACvD,gBAAgB,mBAAO,CAAC,mFAA2B;AACnD,mBAAmB,mBAAO,CAAC,iFAA8B;AACzD,qBAAqB,mBAAO,CAAC,qFAAgC;;AAE7D;AACA;;;;AAIA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;;;;;;;;;;;;AC9HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb;;AAEA,aAAa,mBAAO,CAAC,wDAAa;AAClC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,6BAA6B,sCAAsC,sCAAsC;AACzG;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,C;;;;;;;;;;;ACvSA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA,mBAAO,CAAC,iEAAc;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC9DA,yDAAW,mBAAO,CAAC,6CAAO;AAC1B,WAAW,mBAAO,CAAC,yDAAU;AAC7B;AACA,+BAA+B,mBAAO,CAAC,2DAAW;;AAElD;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS,gBAAgB,YAAY,eAAe;AACpD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,yBAAyB;AACzB,uBAAuB;AACvB,yBAAyB;AACzB,qCAAqC;;AAErnRA,iEAAmB,mBAAO,CAAC,0DAAa;;AAExC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;;;;;;;AC7DA,aAAa,mBAAO,CAAC,oDAAU;;AAE/B;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,qCAAqC;AACrC;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AC7GA,2DAAa,mBAAO,CAAC,oDAAU;AAC/B,aAAa,mBAAO,CAAC,oDAAU;;AAE/B;AACA;AACA;;AAEA;AACA,kDAAkD,EAAE;AACpD;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,+BAA+B;;AAE/B;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,WAAW,YAAY,EAAE,IAAI,EAAE;AAC7C;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,uBAAuB;AACvB,wBAAwB;AACxB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB,yBAAyB;AACzB,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEA;;;;;;;;;;;;;AC1FA,aAAa,mBAAO,CAAC,oDAAU;AAC/B,aAAa,mBAAO,CAAC,oDAAU;;AAE/B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,iBAAiB,uBAAuB;AACxC,OAAO;AACP,iBAAiB;AACjB;AACA,+EAA+E;AAC/E;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA,iCAAiC;;AAEjC;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,iBAAiB,8DAA8D;AAC/E;AACA,KAAK;AACL,iCAAiC,UAAU,6BAA6B;AACxE;;AAEA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,kCAAkC;;AAElC;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA,iCAAiC;;AAEjC;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA,iCAAiC;;AAEjC;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,sCAAsC;;AAEtC;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA,iCAAiC;;AAEjC;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,iCAAiC;;AAEjC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,YAAY,mBAAO,CAAC,kDAAS;AAC7B;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;;;;;;;;;;;ACnQA;AACA,2BAA2B,8EAA8E;AACzG,6BAA6B,oCAAoC;AACjE,8BAA8B,qCAAqC;AACnE,yBAAyB,+CAA+C;AACxE,4BAA4B,mCAAmC;AAC/D,4BAA4B,mCAAmC;AAC/D,4BAA4B,mCAAmC;AAC/D,mBAAmB;AACnB;;AAEA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEA;;;;;;;;;;;;;ACnBA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB,aAAa,SAAS;AACtB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AClEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACtBA;AACA;AACA;AACA;AACA;AACA,C;;;;;;;;;;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,uBAAuB,SAAS;AAChC;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,4CAA4C,KAAK;;AAEjD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,KAAK;AACL;;AAEA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA,mCAAmC,OAAO;AAC1C;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;;AAGA;AACA;AACA,yDAAyD;AACzD;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,SAAS;AACT;AACA;AACA,WAAW;AACX;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,mBAAO,CAAC,0EAAoB;;AAE/C;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA,WAAW,SAAS;AACpB;AACA,mBAAmB,mBAAO,CAAC,+EAAU;;AAErC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,kCAAkC;AAC7D,2BAA2B,mDAAmD;AAC9E;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC9rBA;;AAEA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;;AAEA;AACA;AACA,4CAA4C;;AAE5C;;;;;;;;;;;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;;;;;;;;;;;ACrBA,8DAAgB,mBAAO,CAAC,oDAAW;;AAEnC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9DA;AAMA;AAKA;AAKA;AAuBA;AAEA;AAMA;AAEA;;;;;;AAkLA;;;AAGO,IAAMA,aAAa,GAAG,QAAtB;AAEP;;;AAGA;;AACO,IAAMC,WAAW,GAAG,mBAApB,C,CACP;;AAEA;;;;;;;;;;AASO,SAASC,WAAT,CAAsBC,UAAtB,EAAwD;AAC3D,SAAOC,OAAO,CAACC,GAAR,CAAY,CACfC,oEAAiB,EADF,EAEfC,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","file":"web.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Sig\"] = factory();\n\telse\n\t\troot[\"Sig\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.ts\");\n","'use strict'\n// base-x encoding / decoding\n// Copyright (c) 2018 base-x contributors\n// Copyright (c) 2014-2018 The Bitcoin Core developers (base58.cpp)\n// Distributed under the MIT software license, see the accompanying\n// file LICENSE or http://www.opensource.org/licenses/mit-license.php.\n// @ts-ignore\nvar _Buffer = require('safe-buffer').Buffer\nfunction base (ALPHABET) {\n  if (ALPHABET.length >= 255) { throw new TypeError('Alphabet too long') }\n  var BASE_MAP = new Uint8Array(256)\n  BASE_MAP.fill(255)\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i)\n    var xc = x.charCodeAt(0)\n    if (BASE_MAP[xc] !== 255) { throw new TypeError(x + ' is ambiguous') }\n    BASE_MAP[xc] = i\n  }\n  var BASE = ALPHABET.length\n  var LEADER = ALPHABET.charAt(0)\n  var FACTOR = Math.log(BASE) / Math.log(256) // log(BASE) / log(256), rounded up\n  var iFACTOR = Math.log(256) / Math.log(BASE) // log(256) / log(BASE), rounded up\n  function encode (source) {\n    if (!_Buffer.isBuffer(source)) { throw new TypeError('Expected Buffer') }\n    if (source.length === 0) { return '' }\n        // Skip & count leading zeroes.\n    var zeroes = 0\n    var length = 0\n    var pbegin = 0\n    var pend = source.length\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++\n      zeroes++\n    }\n        // Allocate enough space in big-endian base58 representation.\n    var size = ((pend - pbegin) * iFACTOR + 1) >>> 0\n    var b58 = new Uint8Array(size)\n        // Process the bytes.\n    while (pbegin !== pend) {\n      var carry = source[pbegin]\n            // Apply \"b58 = b58 * 256 + ch\".\n      var i = 0\n      for (var it1 = size - 1; (carry !== 0 || i < length) && (it1 !== -1); it1--, i++) {\n        carry += (256 * b58[it1]) >>> 0\n        b58[it1] = (carry % BASE) >>> 0\n        carry = (carry / BASE) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      pbegin++\n    }\n        // Skip leading zeroes in base58 result.\n    var it2 = size - length\n    while (it2 !== size && b58[it2] === 0) {\n      it2++\n    }\n        // Translate the result into a string.\n    var str = LEADER.repeat(zeroes)\n    for (; it2 < size; ++it2) { str += ALPHABET.charAt(b58[it2]) }\n    return str\n  }\n  function decodeUnsafe (source) {\n    if (typeof source !== 'string') { throw new TypeError('Expected String') }\n    if (source.length === 0) { return _Buffer.alloc(0) }\n    var psz = 0\n        // Skip leading spaces.\n    if (source[psz] === ' ') { return }\n        // Skip and count leading '1's.\n    var zeroes = 0\n    var length = 0\n    while (source[psz] === LEADER) {\n      zeroes++\n      psz++\n    }\n        // Allocate enough space in big-endian base256 representation.\n    var size = (((source.length - psz) * FACTOR) + 1) >>> 0 // log(58) / log(256), rounded up.\n    var b256 = new Uint8Array(size)\n        // Process the characters.\n    while (source[psz]) {\n            // Decode character\n      var carry = BASE_MAP[source.charCodeAt(psz)]\n            // Invalid character\n      if (carry === 255) { return }\n      var i = 0\n      for (var it3 = size - 1; (carry !== 0 || i < length) && (it3 !== -1); it3--, i++) {\n        carry += (BASE * b256[it3]) >>> 0\n        b256[it3] = (carry % 256) >>> 0\n        carry = (carry / 256) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      psz++\n    }\n        // Skip trailing spaces.\n    if (source[psz] === ' ') { return }\n        // Skip leading zeroes in b256.\n    var it4 = size - length\n    while (it4 !== size && b256[it4] === 0) {\n      it4++\n    }\n    var vch = _Buffer.allocUnsafe(zeroes + (size - it4))\n    vch.fill(0x00, 0, zeroes)\n    var j = zeroes\n    while (it4 !== size) {\n      vch[j++] = b256[it4++]\n    }\n    return vch\n  }\n  function decode (string) {\n    var buffer = decodeUnsafe(string)\n    if (buffer) { return buffer }\n    throw new Error('Non-base' + BASE + ' character')\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  }\n}\nmodule.exports = base\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n    ))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","'use strict'\nvar ALPHABET = 'qpzry9x8gf2tvdw0s3jn54khce6mua7l'\n\n// pre-compute lookup table\nvar ALPHABET_MAP = {}\nfor (var z = 0; z < ALPHABET.length; z++) {\n  var x = ALPHABET.charAt(z)\n\n  if (ALPHABET_MAP[x] !== undefined) throw new TypeError(x + ' is ambiguous')\n  ALPHABET_MAP[x] = z\n}\n\nfunction polymodStep (pre) {\n  var b = pre >> 25\n  return ((pre & 0x1FFFFFF) << 5) ^\n    (-((b >> 0) & 1) & 0x3b6a57b2) ^\n    (-((b >> 1) & 1) & 0x26508e6d) ^\n    (-((b >> 2) & 1) & 0x1ea119fa) ^\n    (-((b >> 3) & 1) & 0x3d4233dd) ^\n    (-((b >> 4) & 1) & 0x2a1462b3)\n}\n\nfunction prefixChk (prefix) {\n  var chk = 1\n  for (var i = 0; i < prefix.length; ++i) {\n    var c = prefix.charCodeAt(i)\n    if (c < 33 || c > 126) throw new Error('Invalid prefix (' + prefix + ')')\n\n    chk = polymodStep(chk) ^ (c >> 5)\n  }\n  chk = polymodStep(chk)\n\n  for (i = 0; i < prefix.length; ++i) {\n    var v = prefix.charCodeAt(i)\n    chk = polymodStep(chk) ^ (v & 0x1f)\n  }\n  return chk\n}\n\nfunction encode (prefix, words, LIMIT) {\n  LIMIT = LIMIT || 90\n  if ((prefix.length + 7 + words.length) > LIMIT) throw new TypeError('Exceeds length limit')\n\n  prefix = prefix.toLowerCase()\n\n  // determine chk mod\n  var chk = prefixChk(prefix)\n  var result = prefix + '1'\n  for (var i = 0; i < words.length; ++i) {\n    var x = words[i]\n    if ((x >> 5) !== 0) throw new Error('Non 5-bit word')\n\n    chk = polymodStep(chk) ^ x\n    result += ALPHABET.charAt(x)\n  }\n\n  for (i = 0; i < 6; ++i) {\n    chk = polymodStep(chk)\n  }\n  chk ^= 1\n\n  for (i = 0; i < 6; ++i) {\n    var v = (chk >> ((5 - i) * 5)) & 0x1f\n    result += ALPHABET.charAt(v)\n  }\n\n  return result\n}\n\nfunction decode (str, LIMIT) {\n  LIMIT = LIMIT || 90\n  if (str.length < 8) throw new TypeError(str + ' too short')\n  if (str.length > LIMIT) throw new TypeError('Exceeds length limit')\n\n  // don't allow mixed case\n  var lowered = str.toLowerCase()\n  var uppered = str.toUpperCase()\n  if (str !== lowered && str !== uppered) throw new Error('Mixed-case string ' + str)\n  str = lowered\n\n  var split = str.lastIndexOf('1')\n  if (split === -1) throw new Error('No separator character for ' + str)\n  if (split === 0) throw new Error('Missing prefix for ' + str)\n\n  var prefix = str.slice(0, split)\n  var wordChars = str.slice(split + 1)\n  if (wordChars.length < 6) throw new Error('Data too short')\n\n  var chk = prefixChk(prefix)\n  var words = []\n  for (var i = 0; i < wordChars.length; ++i) {\n    var c = wordChars.charAt(i)\n    var v = ALPHABET_MAP[c]\n    if (v === undefined) throw new Error('Unknown character ' + c)\n    chk = polymodStep(chk) ^ v\n\n    // not in the checksum?\n    if (i + 6 >= wordChars.length) continue\n    words.push(v)\n  }\n\n  if (chk !== 1) throw new Error('Invalid checksum for ' + str)\n  return { prefix: prefix, words: words }\n}\n\nfunction convert (data, inBits, outBits, pad) {\n  var value = 0\n  var bits = 0\n  var maxV = (1 << outBits) - 1\n\n  var result = []\n  for (var i = 0; i < data.length; ++i) {\n    value = (value << inBits) | data[i]\n    bits += inBits\n\n    while (bits >= outBits) {\n      bits -= outBits\n      result.push((value >> bits) & maxV)\n    }\n  }\n\n  if (pad) {\n    if (bits > 0) {\n      result.push((value << (outBits - bits)) & maxV)\n    }\n  } else {\n    if (bits >= inBits) throw new Error('Excess padding')\n    if ((value << (outBits - bits)) & maxV) throw new Error('Non-zero padding')\n  }\n\n  return result\n}\n\nfunction toWords (bytes) {\n  return convert(bytes, 8, 5, true)\n}\n\nfunction fromWords (words) {\n  return convert(words, 5, 8, false)\n}\n\nmodule.exports = {\n  decode: decode,\n  encode: encode,\n  toWords: toWords,\n  fromWords: fromWords\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst crypto = require(\"./crypto\");\nconst bs58check = require('bs58check');\nconst ecc = require('tiny-secp256k1');\nconst typeforce = require('typeforce');\nconst wif = require('wif');\nconst UINT256_TYPE = typeforce.BufferN(32);\nconst NETWORK_TYPE = typeforce.compile({\n    wif: typeforce.UInt8,\n    bip32: {\n        public: typeforce.UInt32,\n        private: typeforce.UInt32,\n    },\n});\nconst BITCOIN = {\n    wif: 0x80,\n    bip32: {\n        public: 0x0488b21e,\n        private: 0x0488ade4,\n    },\n};\nconst HIGHEST_BIT = 0x80000000;\nconst UINT31_MAX = Math.pow(2, 31) - 1;\nfunction BIP32Path(value) {\n    return (typeforce.String(value) && value.match(/^(m\\/)?(\\d+'?\\/)*\\d+'?$/) !== null);\n}\nfunction UInt31(value) {\n    return typeforce.UInt32(value) && value <= UINT31_MAX;\n}\nclass BIP32 {\n    constructor(__D, __Q, chainCode, network, __DEPTH = 0, __INDEX = 0, __PARENT_FINGERPRINT = 0x00000000) {\n        this.__D = __D;\n        this.__Q = __Q;\n        this.chainCode = chainCode;\n        this.network = network;\n        this.__DEPTH = __DEPTH;\n        this.__INDEX = __INDEX;\n        this.__PARENT_FINGERPRINT = __PARENT_FINGERPRINT;\n        typeforce(NETWORK_TYPE, network);\n        this.lowR = false;\n    }\n    get depth() {\n        return this.__DEPTH;\n    }\n    get index() {\n        return this.__INDEX;\n    }\n    get parentFingerprint() {\n        return this.__PARENT_FINGERPRINT;\n    }\n    get publicKey() {\n        if (this.__Q === undefined)\n            this.__Q = ecc.pointFromScalar(this.__D, true);\n        return this.__Q;\n    }\n    get privateKey() {\n        return this.__D;\n    }\n    get identifier() {\n        return crypto.hash160(this.publicKey);\n    }\n    get fingerprint() {\n        return this.identifier.slice(0, 4);\n    }\n    // Private === not neutered\n    // Public === neutered\n    isNeutered() {\n        return this.__D === undefined;\n    }\n    neutered() {\n        return fromPublicKeyLocal(this.publicKey, this.chainCode, this.network, this.depth, this.index, this.parentFingerprint);\n    }\n    toBase58() {\n        const network = this.network;\n        const version = !this.isNeutered()\n            ? network.bip32.private\n            : network.bip32.public;\n        const buffer = Buffer.allocUnsafe(78);\n        // 4 bytes: version bytes\n        buffer.writeUInt32BE(version, 0);\n        // 1 byte: depth: 0x00 for master nodes, 0x01 for level-1 descendants, ....\n        buffer.writeUInt8(this.depth, 4);\n        // 4 bytes: the fingerprint of the parent's key (0x00000000 if master key)\n        buffer.writeUInt32BE(this.parentFingerprint, 5);\n        // 4 bytes: child number. This is the number i in xi = xpar/i, with xi the key being serialized.\n        // This is encoded in big endian. (0x00000000 if master key)\n        buffer.writeUInt32BE(this.index, 9);\n        // 32 bytes: the chain code\n        this.chainCode.copy(buffer, 13);\n        // 33 bytes: the public key or private key data\n        if (!this.isNeutered()) {\n            // 0x00 + k for private keys\n            buffer.writeUInt8(0, 45);\n            this.privateKey.copy(buffer, 46);\n            // 33 bytes: the public key\n        }\n        else {\n            // X9.62 encoding for public keys\n            this.publicKey.copy(buffer, 45);\n        }\n        return bs58check.encode(buffer);\n    }\n    toWIF() {\n        if (!this.privateKey)\n            throw new TypeError('Missing private key');\n        return wif.encode(this.network.wif, this.privateKey, true);\n    }\n    // https://github.com/bitcoin/bips/blob/master/bip-0032.mediawiki#child-key-derivation-ckd-functions\n    derive(index) {\n        typeforce(typeforce.UInt32, index);\n        const isHardened = index >= HIGHEST_BIT;\n        const data = Buffer.allocUnsafe(37);\n        // Hardened child\n        if (isHardened) {\n            if (this.isNeutered())\n                throw new TypeError('Missing private key for hardened child key');\n            // data = 0x00 || ser256(kpar) || ser32(index)\n            data[0] = 0x00;\n            this.privateKey.copy(data, 1);\n            data.writeUInt32BE(index, 33);\n            // Normal child\n        }\n        else {\n            // data = serP(point(kpar)) || ser32(index)\n            //      = serP(Kpar) || ser32(index)\n            this.publicKey.copy(data, 0);\n            data.writeUInt32BE(index, 33);\n        }\n        const I = crypto.hmacSHA512(this.chainCode, data);\n        const IL = I.slice(0, 32);\n        const IR = I.slice(32);\n        // if parse256(IL) >= n, proceed with the next value for i\n        if (!ecc.isPrivate(IL))\n            return this.derive(index + 1);\n        // Private parent key -> private child key\n        let hd;\n        if (!this.isNeutered()) {\n            // ki = parse256(IL) + kpar (mod n)\n            const ki = ecc.privateAdd(this.privateKey, IL);\n            // In case ki == 0, proceed with the next value for i\n            if (ki == null)\n                return this.derive(index + 1);\n            hd = fromPrivateKeyLocal(ki, IR, this.network, this.depth + 1, index, this.fingerprint.readUInt32BE(0));\n            // Public parent key -> public child key\n        }\n        else {\n            // Ki = point(parse256(IL)) + Kpar\n            //    = G*IL + Kpar\n            const Ki = ecc.pointAddScalar(this.publicKey, IL, true);\n            // In case Ki is the point at infinity, proceed with the next value for i\n            if (Ki === null)\n                return this.derive(index + 1);\n            hd = fromPublicKeyLocal(Ki, IR, this.network, this.depth + 1, index, this.fingerprint.readUInt32BE(0));\n        }\n        return hd;\n    }\n    deriveHardened(index) {\n        typeforce(UInt31, index);\n        // Only derives hardened private keys by default\n        return this.derive(index + HIGHEST_BIT);\n    }\n    derivePath(path) {\n        typeforce(BIP32Path, path);\n        let splitPath = path.split('/');\n        if (splitPath[0] === 'm') {\n            if (this.parentFingerprint)\n                throw new TypeError('Expected master, got child');\n            splitPath = splitPath.slice(1);\n        }\n        return splitPath.reduce((prevHd, indexStr) => {\n            let index;\n            if (indexStr.slice(-1) === `'`) {\n                index = parseInt(indexStr.slice(0, -1), 10);\n                return prevHd.deriveHardened(index);\n            }\n            else {\n                index = parseInt(indexStr, 10);\n                return prevHd.derive(index);\n            }\n        }, this);\n    }\n    sign(hash, lowR) {\n        if (!this.privateKey)\n            throw new Error('Missing private key');\n        if (lowR === undefined)\n            lowR = this.lowR;\n        if (lowR === false) {\n            return ecc.sign(hash, this.privateKey);\n        }\n        else {\n            let sig = ecc.sign(hash, this.privateKey);\n            const extraData = Buffer.alloc(32, 0);\n            let counter = 0;\n            // if first try is lowR, skip the loop\n            // for second try and on, add extra entropy counting up\n            while (sig[0] > 0x7f) {\n                counter++;\n                extraData.writeUIntLE(counter, 0, 6);\n                sig = ecc.signWithEntropy(hash, this.privateKey, extraData);\n            }\n            return sig;\n        }\n    }\n    verify(hash, signature) {\n        return ecc.verify(hash, this.publicKey, signature);\n    }\n}\nfunction fromBase58(inString, network) {\n    const buffer = bs58check.decode(inString);\n    if (buffer.length !== 78)\n        throw new TypeError('Invalid buffer length');\n    network = network || BITCOIN;\n    // 4 bytes: version bytes\n    const version = buffer.readUInt32BE(0);\n    if (version !== network.bip32.private && version !== network.bip32.public)\n        throw new TypeError('Invalid network version');\n    // 1 byte: depth: 0x00 for master nodes, 0x01 for level-1 descendants, ...\n    const depth = buffer[4];\n    // 4 bytes: the fingerprint of the parent's key (0x00000000 if master key)\n    const parentFingerprint = buffer.readUInt32BE(5);\n    if (depth === 0) {\n        if (parentFingerprint !== 0x00000000)\n            throw new TypeError('Invalid parent fingerprint');\n    }\n    // 4 bytes: child number. This is the number i in xi = xpar/i, with xi the key being serialized.\n    // This is encoded in MSB order. (0x00000000 if master key)\n    const index = buffer.readUInt32BE(9);\n    if (depth === 0 && index !== 0)\n        throw new TypeError('Invalid index');\n    // 32 bytes: the chain code\n    const chainCode = buffer.slice(13, 45);\n    let hd;\n    // 33 bytes: private key data (0x00 + k)\n    if (version === network.bip32.private) {\n        if (buffer.readUInt8(45) !== 0x00)\n            throw new TypeError('Invalid private key');\n        const k = buffer.slice(46, 78);\n        hd = fromPrivateKeyLocal(k, chainCode, network, depth, index, parentFingerprint);\n        // 33 bytes: public key data (0x02 + X or 0x03 + X)\n    }\n    else {\n        const X = buffer.slice(45, 78);\n        hd = fromPublicKeyLocal(X, chainCode, network, depth, index, parentFingerprint);\n    }\n    return hd;\n}\nexports.fromBase58 = fromBase58;\nfunction fromPrivateKey(privateKey, chainCode, network) {\n    return fromPrivateKeyLocal(privateKey, chainCode, network);\n}\nexports.fromPrivateKey = fromPrivateKey;\nfunction fromPrivateKeyLocal(privateKey, chainCode, network, depth, index, parentFingerprint) {\n    typeforce({\n        privateKey: UINT256_TYPE,\n        chainCode: UINT256_TYPE,\n    }, { privateKey, chainCode });\n    network = network || BITCOIN;\n    if (!ecc.isPrivate(privateKey))\n        throw new TypeError('Private key not in range [1, n)');\n    return new BIP32(privateKey, undefined, chainCode, network, depth, index, parentFingerprint);\n}\nfunction fromPublicKey(publicKey, chainCode, network) {\n    return fromPublicKeyLocal(publicKey, chainCode, network);\n}\nexports.fromPublicKey = fromPublicKey;\nfunction fromPublicKeyLocal(publicKey, chainCode, network, depth, index, parentFingerprint) {\n    typeforce({\n        publicKey: typeforce.BufferN(33),\n        chainCode: UINT256_TYPE,\n    }, { publicKey, chainCode });\n    network = network || BITCOIN;\n    // verify the X coordinate is a point on the curve\n    if (!ecc.isPoint(publicKey))\n        throw new TypeError('Point is not on the curve');\n    return new BIP32(undefined, publicKey, chainCode, network, depth, index, parentFingerprint);\n}\nfunction fromSeed(seed, network) {\n    typeforce(typeforce.Buffer, seed);\n    if (seed.length < 16)\n        throw new TypeError('Seed should be at least 128 bits');\n    if (seed.length > 64)\n        throw new TypeError('Seed should be at most 512 bits');\n    network = network || BITCOIN;\n    const I = crypto.hmacSHA512(Buffer.from('Bitcoin seed', 'utf8'), seed);\n    const IL = I.slice(0, 32);\n    const IR = I.slice(32);\n    return fromPrivateKey(IL, IR, network);\n}\nexports.fromSeed = fromSeed;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst createHash = require('create-hash');\nconst createHmac = require('create-hmac');\nfunction hash160(buffer) {\n    const sha256Hash = createHash('sha256')\n        .update(buffer)\n        .digest();\n    try {\n        return createHash('rmd160')\n            .update(sha256Hash)\n            .digest();\n    }\n    catch (err) {\n        return createHash('ripemd160')\n            .update(sha256Hash)\n            .digest();\n    }\n}\nexports.hash160 = hash160;\nfunction hmacSHA512(key, data) {\n    return createHmac('sha512', key)\n        .update(data)\n        .digest();\n}\nexports.hmacSHA512 = hmacSHA512;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar bip32_1 = require(\"./bip32\");\nexports.fromSeed = bip32_1.fromSeed;\nexports.fromBase58 = bip32_1.fromBase58;\nexports.fromPublicKey = bip32_1.fromPublicKey;\nexports.fromPrivateKey = bip32_1.fromPrivateKey;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// browserify by default only pulls in files that are hard coded in requires\n// In order of last to first in this file, the default wordlist will be chosen\n// based on what is present. (Bundles may remove wordlists they don't need)\nconst wordlists = {};\nexports.wordlists = wordlists;\nlet _default;\nexports._default = _default;\ntry {\n    exports._default = _default = require('./wordlists/chinese_simplified.json');\n    wordlists.chinese_simplified = _default;\n}\ncatch (err) { }\ntry {\n    exports._default = _default = require('./wordlists/chinese_traditional.json');\n    wordlists.chinese_traditional = _default;\n}\ncatch (err) { }\ntry {\n    exports._default = _default = require('./wordlists/korean.json');\n    wordlists.korean = _default;\n}\ncatch (err) { }\ntry {\n    exports._default = _default = require('./wordlists/french.json');\n    wordlists.french = _default;\n}\ncatch (err) { }\ntry {\n    exports._default = _default = require('./wordlists/italian.json');\n    wordlists.italian = _default;\n}\ncatch (err) { }\ntry {\n    exports._default = _default = require('./wordlists/spanish.json');\n    wordlists.spanish = _default;\n}\ncatch (err) { }\ntry {\n    exports._default = _default = require('./wordlists/japanese.json');\n    wordlists.japanese = _default;\n    wordlists.JA = _default;\n}\ncatch (err) { }\ntry {\n    exports._default = _default = require('./wordlists/english.json');\n    wordlists.english = _default;\n    wordlists.EN = _default;\n}\ncatch (err) { }\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst createHash = require(\"create-hash\");\nconst pbkdf2_1 = require(\"pbkdf2\");\nconst randomBytes = require(\"randombytes\");\nconst _wordlists_1 = require(\"./_wordlists\");\nlet DEFAULT_WORDLIST = _wordlists_1._default;\nconst INVALID_MNEMONIC = 'Invalid mnemonic';\nconst INVALID_ENTROPY = 'Invalid entropy';\nconst INVALID_CHECKSUM = 'Invalid mnemonic checksum';\nconst WORDLIST_REQUIRED = 'A wordlist is required but a default could not be found.\\n' +\n    'Please explicitly pass a 2048 word array explicitly.';\nfunction lpad(str, padString, length) {\n    while (str.length < length)\n        str = padString + str;\n    return str;\n}\nfunction binaryToByte(bin) {\n    return parseInt(bin, 2);\n}\nfunction bytesToBinary(bytes) {\n    return bytes.map(x => lpad(x.toString(2), '0', 8)).join('');\n}\nfunction deriveChecksumBits(entropyBuffer) {\n    const ENT = entropyBuffer.length * 8;\n    const CS = ENT / 32;\n    const hash = createHash('sha256')\n        .update(entropyBuffer)\n        .digest();\n    return bytesToBinary([...hash]).slice(0, CS);\n}\nfunction salt(password) {\n    return 'mnemonic' + (password || '');\n}\nfunction mnemonicToSeedSync(mnemonic, password) {\n    const mnemonicBuffer = Buffer.from((mnemonic || '').normalize('NFKD'), 'utf8');\n    const saltBuffer = Buffer.from(salt((password || '').normalize('NFKD')), 'utf8');\n    return pbkdf2_1.pbkdf2Sync(mnemonicBuffer, saltBuffer, 2048, 64, 'sha512');\n}\nexports.mnemonicToSeedSync = mnemonicToSeedSync;\nfunction mnemonicToSeed(mnemonic, password) {\n    return new Promise((resolve, reject) => {\n        try {\n            const mnemonicBuffer = Buffer.from((mnemonic || '').normalize('NFKD'), 'utf8');\n            const saltBuffer = Buffer.from(salt((password || '').normalize('NFKD')), 'utf8');\n            pbkdf2_1.pbkdf2(mnemonicBuffer, saltBuffer, 2048, 64, 'sha512', (err, data) => {\n                if (err)\n                    return reject(err);\n                else\n                    return resolve(data);\n            });\n        }\n        catch (error) {\n            return reject(error);\n        }\n    });\n}\nexports.mnemonicToSeed = mnemonicToSeed;\nfunction mnemonicToEntropy(mnemonic, wordlist) {\n    wordlist = wordlist || DEFAULT_WORDLIST;\n    if (!wordlist) {\n        throw new Error(WORDLIST_REQUIRED);\n    }\n    const words = (mnemonic || '').normalize('NFKD').split(' ');\n    if (words.length % 3 !== 0)\n        throw new Error(INVALID_MNEMONIC);\n    // convert word indices to 11 bit binary strings\n    const bits = words\n        .map(word => {\n        const index = wordlist.indexOf(word);\n        if (index === -1)\n            throw new Error(INVALID_MNEMONIC);\n        return lpad(index.toString(2), '0', 11);\n    })\n        .join('');\n    // split the binary string into ENT/CS\n    const dividerIndex = Math.floor(bits.length / 33) * 32;\n    const entropyBits = bits.slice(0, dividerIndex);\n    const checksumBits = bits.slice(dividerIndex);\n    // calculate the checksum and compare\n    const entropyBytes = entropyBits.match(/(.{1,8})/g).map(binaryToByte);\n    if (entropyBytes.length < 16)\n        throw new Error(INVALID_ENTROPY);\n    if (entropyBytes.length > 32)\n        throw new Error(INVALID_ENTROPY);\n    if (entropyBytes.length % 4 !== 0)\n        throw new Error(INVALID_ENTROPY);\n    const entropy = Buffer.from(entropyBytes);\n    const newChecksum = deriveChecksumBits(entropy);\n    if (newChecksum !== checksumBits)\n        throw new Error(INVALID_CHECKSUM);\n    return entropy.toString('hex');\n}\nexports.mnemonicToEntropy = mnemonicToEntropy;\nfunction entropyToMnemonic(entropy, wordlist) {\n    if (!Buffer.isBuffer(entropy))\n        entropy = Buffer.from(entropy, 'hex');\n    wordlist = wordlist || DEFAULT_WORDLIST;\n    if (!wordlist) {\n        throw new Error(WORDLIST_REQUIRED);\n    }\n    // 128 <= ENT <= 256\n    if (entropy.length < 16)\n        throw new TypeError(INVALID_ENTROPY);\n    if (entropy.length > 32)\n        throw new TypeError(INVALID_ENTROPY);\n    if (entropy.length % 4 !== 0)\n        throw new TypeError(INVALID_ENTROPY);\n    const entropyBits = bytesToBinary([...entropy]);\n    const checksumBits = deriveChecksumBits(entropy);\n    const bits = entropyBits + checksumBits;\n    const chunks = bits.match(/(.{1,11})/g);\n    const words = chunks.map(binary => {\n        const index = binaryToByte(binary);\n        return wordlist[index];\n    });\n    return wordlist[0] === '\\u3042\\u3044\\u3053\\u304f\\u3057\\u3093' // Japanese wordlist\n        ? words.join('\\u3000')\n        : words.join(' ');\n}\nexports.entropyToMnemonic = entropyToMnemonic;\nfunction generateMnemonic(strength, rng, wordlist) {\n    strength = strength || 128;\n    if (strength % 32 !== 0)\n        throw new TypeError(INVALID_ENTROPY);\n    rng = rng || randomBytes;\n    return entropyToMnemonic(rng(strength / 8), wordlist);\n}\nexports.generateMnemonic = generateMnemonic;\nfunction validateMnemonic(mnemonic, wordlist) {\n    try {\n        mnemonicToEntropy(mnemonic, wordlist);\n    }\n    catch (e) {\n        return false;\n    }\n    return true;\n}\nexports.validateMnemonic = validateMnemonic;\nfunction setDefaultWordlist(language) {\n    const result = _wordlists_1.wordlists[language];\n    if (result)\n        DEFAULT_WORDLIST = result;\n    else\n        throw new Error('Could not find wordlist for language \"' + language + '\"');\n}\nexports.setDefaultWordlist = setDefaultWordlist;\nfunction getDefaultWordlist() {\n    if (!DEFAULT_WORDLIST)\n        throw new Error('No Default Wordlist set');\n    return Object.keys(_wordlists_1.wordlists).filter(lang => {\n        if (lang === 'JA' || lang === 'EN')\n            return false;\n        return _wordlists_1.wordlists[lang].every((word, index) => word === DEFAULT_WORDLIST[index]);\n    })[0];\n}\nexports.getDefaultWordlist = getDefaultWordlist;\nvar _wordlists_2 = require(\"./_wordlists\");\nexports.wordlists = _wordlists_2.wordlists;\n","export * from './lib/lib';\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsY0FBYyxXQUFXLENBQUMifQ==","export * from './instruction-sets/instruction-sets';\nexport * from './templates/templates';\nexport * from './virtual-machine';\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXV0aC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9saWIvYXV0aC9hdXRoLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLGNBQWMscUNBQXFDLENBQUM7QUFFcEQsY0FBYyx1QkFBdUIsQ0FBQztBQUN0QyxjQUFjLG1CQUFtQixDQUFDIn0=","import { OpcodeDescriptionsCommon } from '../common/descriptions';\nexport var OpcodeDescriptionsUniqueBCH;\n(function (OpcodeDescriptionsUniqueBCH) {\n    OpcodeDescriptionsUniqueBCH[\"OP_CAT\"] = \"Pop the top 2 items from the stack and concatenate them, pushing the result.\";\n    OpcodeDescriptionsUniqueBCH[\"OP_SPLIT\"] = \"Pop the top item from the stack as an index (Script Number) and the next item as a byte array. Split the byte array into two stack items at the index (zero-based), pushing the results.\";\n    OpcodeDescriptionsUniqueBCH[\"OP_NUM2BIN\"] = \"Pop the top item from the stack as an item length (Script Number) and the next item as a Script Number (without encoding restrictions). Re-encode the number using a byte array of the provided length, filling any unused bytes with zeros. (If the requested length is too short to encode the number, error.)\";\n    OpcodeDescriptionsUniqueBCH[\"OP_BIN2NUM\"] = \"Pop the top item from the stack as a Script Number without encoding restrictions. Minimally-encode the number and push the result. (If the number can't be encoded in 4 bytes or less, error.)\";\n    OpcodeDescriptionsUniqueBCH[\"OP_AND\"] = \"Pop the top 2 items from the stack and perform a bitwise AND on each byte, pushing the result. If the length of the items are not equal, error.\";\n    OpcodeDescriptionsUniqueBCH[\"OP_OR\"] = \"Pop the top 2 items from the stack and perform a bitwise OR on each byte, pushing the result. If the length of the items are not equal, error.\";\n    OpcodeDescriptionsUniqueBCH[\"OP_XOR\"] = \"Pop the top 2 items from the stack and perform a bitwise XOR on each byte, pushing the result. If the length of the items are not equal, error.\";\n    OpcodeDescriptionsUniqueBCH[\"OP_DIV\"] = \"Pop the top item from the stack as a denominator (Script Number) and the next as a numerator (Script Number). Divide and push the result to the stack.\";\n    OpcodeDescriptionsUniqueBCH[\"OP_MOD\"] = \"Pop the top item from the stack as a denominator (Script Number) and the next as a numerator (Script Number). Divide and push the remainder to the stack.\";\n    OpcodeDescriptionsUniqueBCH[\"OP_CHECKDATASIG\"] = \"Pop the top 3 items from the stack. Treat the top as a public key, the second as a message, and the third as a signature. If the signature is valid, push a Script Number 1, otherwise push a Script Number 0.\";\n    OpcodeDescriptionsUniqueBCH[\"OP_CHECKDATASIGVERIFY\"] = \"Pop the top 3 items from the stack. Treat the top as a public key, the second as a message, and the third as a signature. If the signature is not valid, error. (This operation is a combination of OP_CHECKDATASIG followed by OP_VERIFY.)\";\n})(OpcodeDescriptionsUniqueBCH || (OpcodeDescriptionsUniqueBCH = {}));\n/**\n * A map of descriptions for each Bitcoin Cash opcode.\n */\n// tslint:disable-next-line:variable-name\nexport const OpcodeDescriptionsBCH = {\n    ...OpcodeDescriptionsCommon,\n    ...OpcodeDescriptionsUniqueBCH\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmNoLWRlc2NyaXB0aW9ucy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3NyYy9saWIvYXV0aC9pbnN0cnVjdGlvbi1zZXRzL2JjaC9iY2gtZGVzY3JpcHRpb25zLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSx3QkFBd0IsRUFBRSxNQUFNLHdCQUF3QixDQUFDO0FBRWxFLE1BQU0sQ0FBTixJQUFZLDJCQVlYO0FBWkQsV0FBWSwyQkFBMkI7SUFDckMsc0hBQXVGLENBQUE7SUFDdkYsb09BQXFNLENBQUE7SUFDck0sOFZBQStULENBQUE7SUFDL1QsNE9BQTZNLENBQUE7SUFDN00seUxBQTBKLENBQUE7SUFDMUosdUxBQXdKLENBQUE7SUFDeEoseUxBQTBKLENBQUE7SUFDMUosZ01BQWlLLENBQUE7SUFDakssbU1BQW9LLENBQUE7SUFDcEssaVFBQWtPLENBQUE7SUFDbE8sb1NBQXFRLENBQUE7QUFDdlEsQ0FBQyxFQVpXLDJCQUEyQixLQUEzQiwyQkFBMkIsUUFZdEM7QUFFRDs7R0FFRztBQUNILHlDQUF5QztBQUN6QyxNQUFNLENBQUMsTUFBTSxxQkFBcUIsR0FBRztJQUNuQyxHQUFHLHdCQUF3QjtJQUMzQixHQUFHLDJCQUEyQjtDQUMvQixDQUFDIn0=","export var AuthenticationErrorBCH;\n(function (AuthenticationErrorBCH) {\n    AuthenticationErrorBCH[\"exceededMaximumOperationCount\"] = \"Program exceeded the maximum operation count (201 operations).\";\n    AuthenticationErrorBCH[\"exceededMaximumStackItemLength\"] = \"Program attempted to push a stack item which exceeded the maximum stack item length (520 bytes).\";\n    AuthenticationErrorBCH[\"exceededMaximumScriptNumberLength\"] = \"Program attempted an OP_BIN2NUM operation on a byte sequence which cannot be encoded within the maximum Script Number length (4 bytes).\";\n    AuthenticationErrorBCH[\"divisionByZero\"] = \"Program attempted to divide a number by zero.\";\n    AuthenticationErrorBCH[\"insufficientLength\"] = \"Program called an OP_NUM2BIN operation with an insufficient byte length to re-encode the provided number.\";\n    AuthenticationErrorBCH[\"invalidSplitIndex\"] = \"Program called an OP_SPLIT operation with an invalid index.\";\n    AuthenticationErrorBCH[\"malformedP2shBytecode\"] = \"Redeem bytecode was malformed prior to P2SH evaluation.\";\n    AuthenticationErrorBCH[\"mismatchedBitwiseOperandLength\"] = \"Program attempted a bitwise operation on operands of different lengths.\";\n    AuthenticationErrorBCH[\"requiresPushOnly\"] = \"Unlocking bytecode may contain only push operations.\";\n})(AuthenticationErrorBCH || (AuthenticationErrorBCH = {}));\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmNoLWVycm9ycy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3NyYy9saWIvYXV0aC9pbnN0cnVjdGlvbi1zZXRzL2JjaC9iY2gtZXJyb3JzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE1BQU0sQ0FBTixJQUFZLHNCQVVYO0FBVkQsV0FBWSxzQkFBc0I7SUFDaEMsMEhBQWdHLENBQUE7SUFDaEcsNkpBQW1JLENBQUE7SUFDbkksdU1BQTZLLENBQUE7SUFDN0ssMEZBQWdFLENBQUE7SUFDaEUsMEpBQWdJLENBQUE7SUFDaEksMkdBQWlGLENBQUE7SUFDakYsMkdBQWlGLENBQUE7SUFDakYsb0lBQTBHLENBQUE7SUFDMUcsbUdBQXlFLENBQUE7QUFDM0UsQ0FBQyxFQVZXLHNCQUFzQixLQUF0QixzQkFBc0IsUUFVakMifQ==","import { conditionallyEvaluate, incrementOperationCount, mapOverOperations } from '../common/combinators';\nimport { applyError, AuthenticationErrorCommon, checkLimitsCommon, cloneAuthenticationProgramStateCommon, cloneStack, commonOperations, ConsensusCommon, createAuthenticationProgramExternalStateCommon, createAuthenticationProgramStateCommon, stackItemIsTruthy, undefinedOperation } from '../common/common';\nimport { authenticationInstructionsAreMalformed, parseBytecode } from '../instruction-sets';\nimport { AuthenticationErrorBCH } from './bch-errors';\nimport { OpcodesBCH } from './bch-opcodes';\nimport { bitcoinCashOperations } from './bch-operations';\nexport { OpcodesBCH };\nexport const isPayToScriptHash = (verificationInstructions) => verificationInstructions.length === 3 /* length */ &&\n    verificationInstructions[0].opcode ===\n        OpcodesBCH.OP_HASH160 &&\n    verificationInstructions[1].opcode ===\n        OpcodesBCH.OP_PUSHBYTES_20 &&\n    verificationInstructions[2 /* lastElement */]\n        .opcode === OpcodesBCH.OP_EQUAL;\n/**\n * Test a stack item for the SegWit Recovery Rules activated in `BCH_2019_05`.\n *\n * @param bytecode the stack item to test\n */\n// tslint:disable-next-line: cyclomatic-complexity\nexport const isWitnessProgram = (bytecode) => {\n    const correctLength = bytecode.length >= 4 /* minimumLength */ &&\n        bytecode.length <= 42 /* maximumLength */;\n    const validVersionPush = bytecode[0] === 0 /* OP_0 */ ||\n        (bytecode[0] >= 81 /* OP_1 */ && bytecode[0] <= 96 /* OP_16 */);\n    const correctLengthByte = bytecode[1] + 2 /* versionAndLengthBytes */ === bytecode.length;\n    return correctLength && validVersionPush && correctLengthByte;\n};\n/**\n * From C++ implementation:\n * Note that IsPushOnly() *does* consider OP_RESERVED to be a push-type\n * opcode, however execution of OP_RESERVED fails, so it's not relevant to\n * P2SH/BIP62 as the scriptSig would fail prior to the P2SH special\n * validation code being executed.\n */\nconst isPushOperation = (opcode) => opcode < OpcodesBCH.OP_16;\n/**\n * This library's supported versions of the BCH virtual machine. \"Strict\"\n * versions (A.K.A. `isStandard` from the C++ implementations) enable additional\n * validation which is commonly used on the P2P network before relaying\n * transactions. Transactions which fail these rules are often called\n * \"non-standard\" – the transactions can technically be included by miners in\n * valid blocks, but most network nodes will refuse to relay them.\n */\nexport var InstructionSetBCH;\n(function (InstructionSetBCH) {\n    InstructionSetBCH[\"BCH_2019_05\"] = \"BCH_2019_05\";\n    InstructionSetBCH[\"BCH_2019_05_STRICT\"] = \"BCH_2019_05_STRICT\";\n    InstructionSetBCH[\"BCH_2019_11_SPEC\"] = \"BCH_2019_11\";\n    InstructionSetBCH[\"BCH_2019_11_STRICT_SPEC\"] = \"BCH_2019_11_STRICT\";\n})(InstructionSetBCH || (InstructionSetBCH = {}));\nexport const instructionSetBCHCurrentStrict = InstructionSetBCH.BCH_2019_05_STRICT;\nexport const getFlagsForInstructionSetBCH = (instructionSet) => {\n    // tslint:disable-next-line: switch-default\n    switch (instructionSet) {\n        case InstructionSetBCH.BCH_2019_05:\n            return {\n                disallowUpgradableNops: false,\n                requireBugValueZero: false,\n                requireMinimalEncoding: false,\n                requireNullSignatureFailures: true\n            };\n        case InstructionSetBCH.BCH_2019_05_STRICT:\n            return {\n                disallowUpgradableNops: true,\n                requireBugValueZero: false,\n                requireMinimalEncoding: true,\n                requireNullSignatureFailures: true\n            };\n        case InstructionSetBCH.BCH_2019_11_SPEC:\n            return {\n                disallowUpgradableNops: false,\n                requireBugValueZero: true,\n                requireMinimalEncoding: true,\n                requireNullSignatureFailures: true\n            };\n        case InstructionSetBCH.BCH_2019_11_STRICT_SPEC:\n            return {\n                disallowUpgradableNops: true,\n                requireBugValueZero: true,\n                requireMinimalEncoding: true,\n                requireNullSignatureFailures: true\n            };\n    }\n};\n/**\n * Initialize a new instruction set for the BCH virtual machine.\n *\n * @param flags an object configuring the flags for this vm (see\n * `getFlagsForInstructionSetBCH`)\n * @param sha1 a Sha1 implementation\n * @param sha256 a Sha256 implementation\n * @param ripemd160 a Ripemd160 implementation\n * @param secp256k1 a Secp256k1 implementation\n */\n// tslint:disable-next-line: variable-name\nexport const createInstructionSetBCH = (flags, sha1, sha256, ripemd160, secp256k1) => ({\n    clone: cloneAuthenticationProgramStateCommon,\n    continue: (state) => state.error === undefined && state.ip < state.instructions.length,\n    // tslint:disable-next-line: cyclomatic-complexity\n    evaluate: (program, stateEvaluate) => {\n        const unlockingBytecode = program.spendingTransaction.inputs[program.inputIndex].unlockingBytecode;\n        const lockingBytecode = program.sourceOutput.lockingBytecode;\n        const unlockingInstructions = parseBytecode(unlockingBytecode);\n        const lockingInstructions = parseBytecode(lockingBytecode);\n        const externalState = createAuthenticationProgramExternalStateCommon(program, sha256);\n        const initialState = createAuthenticationProgramStateCommon(unlockingInstructions, [], externalState);\n        const unlockingResult = unlockingBytecode.length > ConsensusCommon.maximumBytecodeLength\n            ? applyError(AuthenticationErrorCommon.exceededMaximumBytecodeLengthUnlocking, initialState)\n            : authenticationInstructionsAreMalformed(unlockingInstructions)\n                ? applyError(AuthenticationErrorCommon.malformedUnlockingBytecode, initialState)\n                : lockingBytecode.length > ConsensusCommon.maximumBytecodeLength\n                    ? applyError(AuthenticationErrorCommon.exceededMaximumBytecodeLengthLocking, initialState)\n                    : authenticationInstructionsAreMalformed(lockingInstructions)\n                        ? applyError(AuthenticationErrorCommon.malformedLockingBytecode, initialState)\n                        : initialState.instructions.every(instruction => isPushOperation(instruction.opcode))\n                            ? stateEvaluate(initialState)\n                            : applyError(AuthenticationErrorBCH.requiresPushOnly, initialState);\n        // tslint:disable-next-line:no-if-statement\n        if (unlockingResult.error !== undefined) {\n            return unlockingResult;\n        }\n        const lockingResult = stateEvaluate(createAuthenticationProgramStateCommon(lockingInstructions, unlockingResult.stack, externalState));\n        // tslint:disable-next-line:no-if-statement\n        if (!isPayToScriptHash(lockingInstructions)) {\n            return lockingResult;\n        }\n        const p2shStack = cloneStack(unlockingResult.stack);\n        // tslint:disable-next-line: strict-boolean-expressions\n        const p2shScript = p2shStack.pop() || Uint8Array.of();\n        // tslint:disable-next-line: no-if-statement\n        if (p2shStack.length === 0 && isWitnessProgram(p2shScript)) {\n            return lockingResult;\n        }\n        const p2shInstructions = parseBytecode(p2shScript);\n        return authenticationInstructionsAreMalformed(p2shInstructions)\n            ? {\n                ...lockingResult,\n                error: AuthenticationErrorBCH.malformedP2shBytecode\n            }\n            : stateEvaluate(createAuthenticationProgramStateCommon(p2shInstructions, p2shStack, externalState));\n    },\n    operations: {\n        ...commonOperations(sha1, sha256, ripemd160, secp256k1, flags),\n        ...mapOverOperations(bitcoinCashOperations(sha256, secp256k1, flags), conditionallyEvaluate, incrementOperationCount, checkLimitsCommon)\n    },\n    ...undefinedOperation(),\n    verify: (state) => state.error === undefined &&\n        state.executionStack.length === 0 &&\n        state.stack.length === 1 &&\n        stackItemIsTruthy(state.stack[0])\n});\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmNoLWluc3RydWN0aW9uLXNldHMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9zcmMvbGliL2F1dGgvaW5zdHJ1Y3Rpb24tc2V0cy9iY2gvYmNoLWluc3RydWN0aW9uLXNldHMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUEsT0FBTyxFQUNMLHFCQUFxQixFQUNyQix1QkFBdUIsRUFDdkIsaUJBQWlCLEVBQ2xCLE1BQU0sdUJBQXVCLENBQUM7QUFDL0IsT0FBTyxFQUNMLFVBQVUsRUFDVix5QkFBeUIsRUFDekIsaUJBQWlCLEVBQ2pCLHFDQUFxQyxFQUNyQyxVQUFVLEVBQ1YsZ0JBQWdCLEVBQ2hCLGVBQWUsRUFDZiw4Q0FBOEMsRUFDOUMsc0NBQXNDLEVBQ3RDLGlCQUFpQixFQUNqQixrQkFBa0IsRUFDbkIsTUFBTSxrQkFBa0IsQ0FBQztBQUMxQixPQUFPLEVBRUwsc0NBQXNDLEVBQ3RDLGFBQWEsRUFDZCxNQUFNLHFCQUFxQixDQUFDO0FBRTdCLE9BQU8sRUFBRSxzQkFBc0IsRUFBRSxNQUFNLGNBQWMsQ0FBQztBQUN0RCxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzNDLE9BQU8sRUFBRSxxQkFBcUIsRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBTXpELE9BQU8sRUFBRSxVQUFVLEVBQUUsQ0FBQztBQU90QixNQUFNLENBQUMsTUFBTSxpQkFBaUIsR0FBRyxDQUMvQix3QkFBMkUsRUFDM0UsRUFBRSxDQUNGLHdCQUF3QixDQUFDLE1BQU0sbUJBQTJCO0lBQ3hELHdCQUF3QixDQUFDLENBQUMsQ0FBQyxDQUFDLE1BQTZCO1FBQ3pELFVBQVUsQ0FBQyxVQUFVO0lBQ3JCLHdCQUF3QixDQUFDLENBQUMsQ0FBQyxDQUFDLE1BQTZCO1FBQ3pELFVBQVUsQ0FBQyxlQUFlO0lBQzFCLHdCQUF3QixxQkFBNkI7U0FDcEQsTUFBNkIsS0FBSyxVQUFVLENBQUMsUUFBUSxDQUFDO0FBVzNEOzs7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","export var OpcodesBCH;\n(function (OpcodesBCH) {\n    /**\n     * A.K.A. `OP_FALSE` or `OP_PUSHBYTES_0`\n     */\n    OpcodesBCH[OpcodesBCH[\"OP_0\"] = 0] = \"OP_0\";\n    OpcodesBCH[OpcodesBCH[\"OP_PUSHBYTES_1\"] = 1] = \"OP_PUSHBYTES_1\";\n    OpcodesBCH[OpcodesBCH[\"OP_PUSHBYTES_2\"] = 2] = \"OP_PUSHBYTES_2\";\n    OpcodesBCH[OpcodesBCH[\"OP_PUSHBYTES_3\"] = 3] = \"OP_PUSHBYTES_3\";\n    OpcodesBCH[OpcodesBCH[\"OP_PUSHBYTES_4\"] = 4] = \"OP_PUSHBYTES_4\";\n    OpcodesBCH[OpcodesBCH[\"OP_PUSHBYTES_5\"] = 5] = \"OP_PUSHBYTES_5\";\n    OpcodesBCH[OpcodesBCH[\"OP_PUSHBYTES_6\"] = 6] = \"OP_PUSHBYTES_6\";\n    OpcodesBCH[OpcodesBCH[\"OP_PUSHBYTES_7\"] = 7] = \"OP_PUSHBYTES_7\";\n    OpcodesBCH[OpcodesBCH[\"OP_PUSHBYTES_8\"] = 8] = \"OP_PUSHBYTES_8\";\n    OpcodesBCH[OpcodesBCH[\"OP_PUSHBYTES_9\"] = 9] = \"OP_PUSHBYTES_9\";\n    OpcodesBCH[OpcodesBCH[\"OP_PUSHBYTES_10\"] = 10] = \"OP_PUSHBYTES_10\";\n    OpcodesBCH[OpcodesBCH[\"OP_PUSHBYTES_11\"] = 11] = \"OP_PUSHBYTES_11\";\n    OpcodesBCH[OpcodesBCH[\"OP_PUSHBYTES_12\"] = 12] = \"OP_PUSHBYTES_12\";\n    OpcodesBCH[OpcodesBCH[\"OP_PUSHBYTES_13\"] = 13] = \"OP_PUSHBYTES_13\";\n    OpcodesBCH[OpcodesBCH[\"OP_PUSHBYTES_14\"] = 14] = \"OP_PUSHBYTES_14\";\n    OpcodesBCH[OpcodesBCH[\"OP_PUSHBYTES_15\"] = 15] = \"OP_PUSHBYTES_15\";\n    OpcodesBCH[OpcodesBCH[\"OP_PUSHBYTES_16\"] = 16] = \"OP_PUSHBYTES_16\";\n    OpcodesBCH[OpcodesBCH[\"OP_PUSHBYTES_17\"] = 17] = \"OP_PUSHBYTES_17\";\n    OpcodesBCH[OpcodesBCH[\"OP_PUSHBYTES_18\"] = 18] = \"OP_PUSHBYTES_18\";\n    OpcodesBCH[OpcodesBCH[\"OP_PUSHBYTES_19\"] = 19] = \"OP_PUSHBYTES_19\";\n    OpcodesBCH[OpcodesBCH[\"OP_PUSHBYTES_20\"] = 20] = \"OP_PUSHBYTES_20\";\n    OpcodesBCH[OpcodesBCH[\"OP_PUSHBYTES_21\"] = 21] = \"OP_PUSHBYTES_21\";\n    OpcodesBCH[OpcodesBCH[\"OP_PUSHBYTES_22\"] = 22] = \"OP_PUSHBYTES_22\";\n    OpcodesBCH[OpcodesBCH[\"OP_PUSHBYTES_23\"] = 23] = \"OP_PUSHBYTES_23\";\n    OpcodesBCH[OpcodesBCH[\"OP_PUSHBYTES_24\"] = 24] = \"OP_PUSHBYTES_24\";\n    OpcodesBCH[OpcodesBCH[\"OP_PUSHBYTES_25\"] = 25] = \"OP_PUSHBYTES_25\";\n    OpcodesBCH[OpcodesBCH[\"OP_PUSHBYTES_26\"] = 26] = \"OP_PUSHBYTES_26\";\n    OpcodesBCH[OpcodesBCH[\"OP_PUSHBYTES_27\"] = 27] = \"OP_PUSHBYTES_27\";\n    OpcodesBCH[OpcodesBCH[\"OP_PUSHBYTES_28\"] = 28] = \"OP_PUSHBYTES_28\";\n    OpcodesBCH[OpcodesBCH[\"OP_PUSHBYTES_29\"] = 29] = \"OP_PUSHBYTES_29\";\n    OpcodesBCH[OpcodesBCH[\"OP_PUSHBYTES_30\"] = 30] = \"OP_PUSHBYTES_30\";\n    OpcodesBCH[OpcodesBCH[\"OP_PUSHBYTES_31\"] = 31] = \"OP_PUSHBYTES_31\";\n    OpcodesBCH[OpcodesBCH[\"OP_PUSHBYTES_32\"] = 32] = \"OP_PUSHBYTES_32\";\n    OpcodesBCH[OpcodesBCH[\"OP_PUSHBYTES_33\"] = 33] = \"OP_PUSHBYTES_33\";\n    OpcodesBCH[OpcodesBCH[\"OP_PUSHBYTES_34\"] = 34] = \"OP_PUSHBYTES_34\";\n    OpcodesBCH[OpcodesBCH[\"OP_PUSHBYTES_35\"] = 35] = \"OP_PUSHBYTES_35\";\n    OpcodesBCH[OpcodesBCH[\"OP_PUSHBYTES_36\"] = 36] = \"OP_PUSHBYTES_36\";\n    OpcodesBCH[OpcodesBCH[\"OP_PUSHBYTES_37\"] = 37] = \"OP_PUSHBYTES_37\";\n    OpcodesBCH[OpcodesBCH[\"OP_PUSHBYTES_38\"] = 38] = \"OP_PUSHBYTES_38\";\n    OpcodesBCH[OpcodesBCH[\"OP_PUSHBYTES_39\"] = 39] = \"OP_PUSHBYTES_39\";\n    OpcodesBCH[OpcodesBCH[\"OP_PUSHBYTES_40\"] = 40] = \"OP_PUSHBYTES_40\";\n    OpcodesBCH[OpcodesBCH[\"OP_PUSHBYTES_41\"] = 41] = \"OP_PUSHBYTES_41\";\n    OpcodesBCH[OpcodesBCH[\"OP_PUSHBYTES_42\"] = 42] = \"OP_PUSHBYTES_42\";\n    OpcodesBCH[OpcodesBCH[\"OP_PUSHBYTES_43\"] = 43] = \"OP_PUSHBYTES_43\";\n    OpcodesBCH[OpcodesBCH[\"OP_PUSHBYTES_44\"] = 44] = \"OP_PUSHBYTES_44\";\n    OpcodesBCH[OpcodesBCH[\"OP_PUSHBYTES_45\"] = 45] = \"OP_PUSHBYTES_45\";\n    OpcodesBCH[OpcodesBCH[\"OP_PUSHBYTES_46\"] = 46] = \"OP_PUSHBYTES_46\";\n    OpcodesBCH[OpcodesBCH[\"OP_PUSHBYTES_47\"] = 47] = \"OP_PUSHBYTES_47\";\n    OpcodesBCH[OpcodesBCH[\"OP_PUSHBYTES_48\"] = 48] = \"OP_PUSHBYTES_48\";\n    OpcodesBCH[OpcodesBCH[\"OP_PUSHBYTES_49\"] = 49] = \"OP_PUSHBYTES_49\";\n    OpcodesBCH[OpcodesBCH[\"OP_PUSHBYTES_50\"] = 50] = \"OP_PUSHBYTES_50\";\n    OpcodesBCH[OpcodesBCH[\"OP_PUSHBYTES_51\"] = 51] = \"OP_PUSHBYTES_51\";\n    OpcodesBCH[OpcodesBCH[\"OP_PUSHBYTES_52\"] = 52] = \"OP_PUSHBYTES_52\";\n    OpcodesBCH[OpcodesBCH[\"OP_PUSHBYTES_53\"] = 53] = \"OP_PUSHBYTES_53\";\n    OpcodesBCH[OpcodesBCH[\"OP_PUSHBYTES_54\"] = 54] = \"OP_PUSHBYTES_54\";\n    OpcodesBCH[OpcodesBCH[\"OP_PUSHBYTES_55\"] = 55] = \"OP_PUSHBYTES_55\";\n    OpcodesBCH[OpcodesBCH[\"OP_PUSHBYTES_56\"] = 56] = \"OP_PUSHBYTES_56\";\n    OpcodesBCH[OpcodesBCH[\"OP_PUSHBYTES_57\"] = 57] = \"OP_PUSHBYTES_57\";\n    OpcodesBCH[OpcodesBCH[\"OP_PUSHBYTES_58\"] = 58] = \"OP_PUSHBYTES_58\";\n    OpcodesBCH[OpcodesBCH[\"OP_PUSHBYTES_59\"] = 59] = \"OP_PUSHBYTES_59\";\n    OpcodesBCH[OpcodesBCH[\"OP_PUSHBYTES_60\"] = 60] = \"OP_PUSHBYTES_60\";\n    OpcodesBCH[OpcodesBCH[\"OP_PUSHBYTES_61\"] = 61] = \"OP_PUSHBYTES_61\";\n    OpcodesBCH[OpcodesBCH[\"OP_PUSHBYTES_62\"] = 62] = \"OP_PUSHBYTES_62\";\n    OpcodesBCH[OpcodesBCH[\"OP_PUSHBYTES_63\"] = 63] = \"OP_PUSHBYTES_63\";\n    OpcodesBCH[OpcodesBCH[\"OP_PUSHBYTES_64\"] = 64] = \"OP_PUSHBYTES_64\";\n    OpcodesBCH[OpcodesBCH[\"OP_PUSHBYTES_65\"] = 65] = \"OP_PUSHBYTES_65\";\n    OpcodesBCH[OpcodesBCH[\"OP_PUSHBYTES_66\"] = 66] = \"OP_PUSHBYTES_66\";\n    OpcodesBCH[OpcodesBCH[\"OP_PUSHBYTES_67\"] = 67] = \"OP_PUSHBYTES_67\";\n    OpcodesBCH[OpcodesBCH[\"OP_PUSHBYTES_68\"] = 68] = \"OP_PUSHBYTES_68\";\n    OpcodesBCH[OpcodesBCH[\"OP_PUSHBYTES_69\"] = 69] = \"OP_PUSHBYTES_69\";\n    OpcodesBCH[OpcodesBCH[\"OP_PUSHBYTES_70\"] = 70] = \"OP_PUSHBYTES_70\";\n    OpcodesBCH[OpcodesBCH[\"OP_PUSHBYTES_71\"] = 71] = \"OP_PUSHBYTES_71\";\n    OpcodesBCH[OpcodesBCH[\"OP_PUSHBYTES_72\"] = 72] = \"OP_PUSHBYTES_72\";\n    OpcodesBCH[OpcodesBCH[\"OP_PUSHBYTES_73\"] = 73] = \"OP_PUSHBYTES_73\";\n    OpcodesBCH[OpcodesBCH[\"OP_PUSHBYTES_74\"] = 74] = \"OP_PUSHBYTES_74\";\n    OpcodesBCH[OpcodesBCH[\"OP_PUSHBYTES_75\"] = 75] = \"OP_PUSHBYTES_75\";\n    OpcodesBCH[OpcodesBCH[\"OP_PUSHDATA_1\"] = 76] = \"OP_PUSHDATA_1\";\n    OpcodesBCH[OpcodesBCH[\"OP_PUSHDATA_2\"] = 77] = \"OP_PUSHDATA_2\";\n    OpcodesBCH[OpcodesBCH[\"OP_PUSHDATA_4\"] = 78] = \"OP_PUSHDATA_4\";\n    OpcodesBCH[OpcodesBCH[\"OP_1NEGATE\"] = 79] = \"OP_1NEGATE\";\n    OpcodesBCH[OpcodesBCH[\"OP_RESERVED\"] = 80] = \"OP_RESERVED\";\n    /**\n     * A.K.A. `OP_TRUE`\n     */\n    OpcodesBCH[OpcodesBCH[\"OP_1\"] = 81] = \"OP_1\";\n    OpcodesBCH[OpcodesBCH[\"OP_2\"] = 82] = \"OP_2\";\n    OpcodesBCH[OpcodesBCH[\"OP_3\"] = 83] = \"OP_3\";\n    OpcodesBCH[OpcodesBCH[\"OP_4\"] = 84] = \"OP_4\";\n    OpcodesBCH[OpcodesBCH[\"OP_5\"] = 85] = \"OP_5\";\n    OpcodesBCH[OpcodesBCH[\"OP_6\"] = 86] = \"OP_6\";\n    OpcodesBCH[OpcodesBCH[\"OP_7\"] = 87] = \"OP_7\";\n    OpcodesBCH[OpcodesBCH[\"OP_8\"] = 88] = \"OP_8\";\n    OpcodesBCH[OpcodesBCH[\"OP_9\"] = 89] = \"OP_9\";\n    OpcodesBCH[OpcodesBCH[\"OP_10\"] = 90] = \"OP_10\";\n    OpcodesBCH[OpcodesBCH[\"OP_11\"] = 91] = \"OP_11\";\n    OpcodesBCH[OpcodesBCH[\"OP_12\"] = 92] = \"OP_12\";\n    OpcodesBCH[OpcodesBCH[\"OP_13\"] = 93] = \"OP_13\";\n    OpcodesBCH[OpcodesBCH[\"OP_14\"] = 94] = \"OP_14\";\n    OpcodesBCH[OpcodesBCH[\"OP_15\"] = 95] = \"OP_15\";\n    OpcodesBCH[OpcodesBCH[\"OP_16\"] = 96] = \"OP_16\";\n    OpcodesBCH[OpcodesBCH[\"OP_NOP\"] = 97] = \"OP_NOP\";\n    OpcodesBCH[OpcodesBCH[\"OP_VER\"] = 98] = \"OP_VER\";\n    OpcodesBCH[OpcodesBCH[\"OP_IF\"] = 99] = \"OP_IF\";\n    OpcodesBCH[OpcodesBCH[\"OP_NOTIF\"] = 100] = \"OP_NOTIF\";\n    OpcodesBCH[OpcodesBCH[\"OP_VERIF\"] = 101] = \"OP_VERIF\";\n    OpcodesBCH[OpcodesBCH[\"OP_VERNOTIF\"] = 102] = \"OP_VERNOTIF\";\n    OpcodesBCH[OpcodesBCH[\"OP_ELSE\"] = 103] = \"OP_ELSE\";\n    OpcodesBCH[OpcodesBCH[\"OP_ENDIF\"] = 104] = \"OP_ENDIF\";\n    OpcodesBCH[OpcodesBCH[\"OP_VERIFY\"] = 105] = \"OP_VERIFY\";\n    OpcodesBCH[OpcodesBCH[\"OP_RETURN\"] = 106] = \"OP_RETURN\";\n    OpcodesBCH[OpcodesBCH[\"OP_TOALTSTACK\"] = 107] = \"OP_TOALTSTACK\";\n    OpcodesBCH[OpcodesBCH[\"OP_FROMALTSTACK\"] = 108] = \"OP_FROMALTSTACK\";\n    OpcodesBCH[OpcodesBCH[\"OP_2DROP\"] = 109] = \"OP_2DROP\";\n    OpcodesBCH[OpcodesBCH[\"OP_2DUP\"] = 110] = \"OP_2DUP\";\n    OpcodesBCH[OpcodesBCH[\"OP_3DUP\"] = 111] = \"OP_3DUP\";\n    OpcodesBCH[OpcodesBCH[\"OP_2OVER\"] = 112] = \"OP_2OVER\";\n    OpcodesBCH[OpcodesBCH[\"OP_2ROT\"] = 113] = \"OP_2ROT\";\n    OpcodesBCH[OpcodesBCH[\"OP_2SWAP\"] = 114] = \"OP_2SWAP\";\n    OpcodesBCH[OpcodesBCH[\"OP_IFDUP\"] = 115] = \"OP_IFDUP\";\n    OpcodesBCH[OpcodesBCH[\"OP_DEPTH\"] = 116] = \"OP_DEPTH\";\n    OpcodesBCH[OpcodesBCH[\"OP_DROP\"] = 117] = \"OP_DROP\";\n    OpcodesBCH[OpcodesBCH[\"OP_DUP\"] = 118] = \"OP_DUP\";\n    OpcodesBCH[OpcodesBCH[\"OP_NIP\"] = 119] = \"OP_NIP\";\n    OpcodesBCH[OpcodesBCH[\"OP_OVER\"] = 120] = \"OP_OVER\";\n    OpcodesBCH[OpcodesBCH[\"OP_PICK\"] = 121] = \"OP_PICK\";\n    OpcodesBCH[OpcodesBCH[\"OP_ROLL\"] = 122] = \"OP_ROLL\";\n    OpcodesBCH[OpcodesBCH[\"OP_ROT\"] = 123] = \"OP_ROT\";\n    OpcodesBCH[OpcodesBCH[\"OP_SWAP\"] = 124] = \"OP_SWAP\";\n    OpcodesBCH[OpcodesBCH[\"OP_TUCK\"] = 125] = \"OP_TUCK\";\n    OpcodesBCH[OpcodesBCH[\"OP_CAT\"] = 126] = \"OP_CAT\";\n    OpcodesBCH[OpcodesBCH[\"OP_SPLIT\"] = 127] = \"OP_SPLIT\";\n    OpcodesBCH[OpcodesBCH[\"OP_NUM2BIN\"] = 128] = \"OP_NUM2BIN\";\n    OpcodesBCH[OpcodesBCH[\"OP_BIN2NUM\"] = 129] = \"OP_BIN2NUM\";\n    OpcodesBCH[OpcodesBCH[\"OP_SIZE\"] = 130] = \"OP_SIZE\";\n    OpcodesBCH[OpcodesBCH[\"OP_INVERT\"] = 131] = \"OP_INVERT\";\n    OpcodesBCH[OpcodesBCH[\"OP_AND\"] = 132] = \"OP_AND\";\n    OpcodesBCH[OpcodesBCH[\"OP_OR\"] = 133] = \"OP_OR\";\n    OpcodesBCH[OpcodesBCH[\"OP_XOR\"] = 134] = \"OP_XOR\";\n    OpcodesBCH[OpcodesBCH[\"OP_EQUAL\"] = 135] = \"OP_EQUAL\";\n    OpcodesBCH[OpcodesBCH[\"OP_EQUALVERIFY\"] = 136] = \"OP_EQUALVERIFY\";\n    OpcodesBCH[OpcodesBCH[\"OP_RESERVED1\"] = 137] = \"OP_RESERVED1\";\n    OpcodesBCH[OpcodesBCH[\"OP_RESERVED2\"] = 138] = \"OP_RESERVED2\";\n    OpcodesBCH[OpcodesBCH[\"OP_1ADD\"] = 139] = \"OP_1ADD\";\n    OpcodesBCH[OpcodesBCH[\"OP_1SUB\"] = 140] = \"OP_1SUB\";\n    OpcodesBCH[OpcodesBCH[\"OP_2MUL\"] = 141] = \"OP_2MUL\";\n    OpcodesBCH[OpcodesBCH[\"OP_2DIV\"] = 142] = \"OP_2DIV\";\n    OpcodesBCH[OpcodesBCH[\"OP_NEGATE\"] = 143] = \"OP_NEGATE\";\n    OpcodesBCH[OpcodesBCH[\"OP_ABS\"] = 144] = \"OP_ABS\";\n    OpcodesBCH[OpcodesBCH[\"OP_NOT\"] = 145] = \"OP_NOT\";\n    OpcodesBCH[OpcodesBCH[\"OP_0NOTEQUAL\"] = 146] = \"OP_0NOTEQUAL\";\n    OpcodesBCH[OpcodesBCH[\"OP_ADD\"] = 147] = \"OP_ADD\";\n    OpcodesBCH[OpcodesBCH[\"OP_SUB\"] = 148] = \"OP_SUB\";\n    OpcodesBCH[OpcodesBCH[\"OP_MUL\"] = 149] = \"OP_MUL\";\n    OpcodesBCH[OpcodesBCH[\"OP_DIV\"] = 150] = \"OP_DIV\";\n    OpcodesBCH[OpcodesBCH[\"OP_MOD\"] = 151] = \"OP_MOD\";\n    OpcodesBCH[OpcodesBCH[\"OP_LSHIFT\"] = 152] = \"OP_LSHIFT\";\n    OpcodesBCH[OpcodesBCH[\"OP_RSHIFT\"] = 153] = \"OP_RSHIFT\";\n    OpcodesBCH[OpcodesBCH[\"OP_BOOLAND\"] = 154] = \"OP_BOOLAND\";\n    OpcodesBCH[OpcodesBCH[\"OP_BOOLOR\"] = 155] = \"OP_BOOLOR\";\n    OpcodesBCH[OpcodesBCH[\"OP_NUMEQUAL\"] = 156] = \"OP_NUMEQUAL\";\n    OpcodesBCH[OpcodesBCH[\"OP_NUMEQUALVERIFY\"] = 157] = \"OP_NUMEQUALVERIFY\";\n    OpcodesBCH[OpcodesBCH[\"OP_NUMNOTEQUAL\"] = 158] = \"OP_NUMNOTEQUAL\";\n    OpcodesBCH[OpcodesBCH[\"OP_LESSTHAN\"] = 159] = \"OP_LESSTHAN\";\n    OpcodesBCH[OpcodesBCH[\"OP_GREATERTHAN\"] = 160] = \"OP_GREATERTHAN\";\n    OpcodesBCH[OpcodesBCH[\"OP_LESSTHANOREQUAL\"] = 161] = \"OP_LESSTHANOREQUAL\";\n    OpcodesBCH[OpcodesBCH[\"OP_GREATERTHANOREQUAL\"] = 162] = \"OP_GREATERTHANOREQUAL\";\n    OpcodesBCH[OpcodesBCH[\"OP_MIN\"] = 163] = \"OP_MIN\";\n    OpcodesBCH[OpcodesBCH[\"OP_MAX\"] = 164] = \"OP_MAX\";\n    OpcodesBCH[OpcodesBCH[\"OP_WITHIN\"] = 165] = \"OP_WITHIN\";\n    OpcodesBCH[OpcodesBCH[\"OP_RIPEMD160\"] = 166] = \"OP_RIPEMD160\";\n    OpcodesBCH[OpcodesBCH[\"OP_SHA1\"] = 167] = \"OP_SHA1\";\n    OpcodesBCH[OpcodesBCH[\"OP_SHA256\"] = 168] = \"OP_SHA256\";\n    OpcodesBCH[OpcodesBCH[\"OP_HASH160\"] = 169] = \"OP_HASH160\";\n    OpcodesBCH[OpcodesBCH[\"OP_HASH256\"] = 170] = \"OP_HASH256\";\n    OpcodesBCH[OpcodesBCH[\"OP_CODESEPARATOR\"] = 171] = \"OP_CODESEPARATOR\";\n    OpcodesBCH[OpcodesBCH[\"OP_CHECKSIG\"] = 172] = \"OP_CHECKSIG\";\n    OpcodesBCH[OpcodesBCH[\"OP_CHECKSIGVERIFY\"] = 173] = \"OP_CHECKSIGVERIFY\";\n    OpcodesBCH[OpcodesBCH[\"OP_CHECKMULTISIG\"] = 174] = \"OP_CHECKMULTISIG\";\n    OpcodesBCH[OpcodesBCH[\"OP_CHECKMULTISIGVERIFY\"] = 175] = \"OP_CHECKMULTISIGVERIFY\";\n    OpcodesBCH[OpcodesBCH[\"OP_NOP1\"] = 176] = \"OP_NOP1\";\n    /**\n     * Previously `OP_NOP2`\n     */\n    OpcodesBCH[OpcodesBCH[\"OP_CHECKLOCKTIMEVERIFY\"] = 177] = \"OP_CHECKLOCKTIMEVERIFY\";\n    /**\n     * Previously `OP_NOP2`\n     */\n    OpcodesBCH[OpcodesBCH[\"OP_CHECKSEQUENCEVERIFY\"] = 178] = \"OP_CHECKSEQUENCEVERIFY\";\n    OpcodesBCH[OpcodesBCH[\"OP_NOP4\"] = 179] = \"OP_NOP4\";\n    OpcodesBCH[OpcodesBCH[\"OP_NOP5\"] = 180] = \"OP_NOP5\";\n    OpcodesBCH[OpcodesBCH[\"OP_NOP6\"] = 181] = \"OP_NOP6\";\n    OpcodesBCH[OpcodesBCH[\"OP_NOP7\"] = 182] = \"OP_NOP7\";\n    OpcodesBCH[OpcodesBCH[\"OP_NOP8\"] = 183] = \"OP_NOP8\";\n    OpcodesBCH[OpcodesBCH[\"OP_NOP9\"] = 184] = \"OP_NOP9\";\n    OpcodesBCH[OpcodesBCH[\"OP_NOP10\"] = 185] = \"OP_NOP10\";\n    /**\n     * Previously `OP_UNKNOWN186`\n     */\n    OpcodesBCH[OpcodesBCH[\"OP_CHECKDATASIG\"] = 186] = \"OP_CHECKDATASIG\";\n    /**\n     * Previously `OP_UNKNOWN187`\n     */\n    OpcodesBCH[OpcodesBCH[\"OP_CHECKDATASIGVERIFY\"] = 187] = \"OP_CHECKDATASIGVERIFY\";\n    /**\n     * A.K.A. `FIRST_UNDEFINED_OP_VALUE`\n     */\n    OpcodesBCH[OpcodesBCH[\"OP_UNKNOWN188\"] = 188] = \"OP_UNKNOWN188\";\n    OpcodesBCH[OpcodesBCH[\"OP_UNKNOWN189\"] = 189] = \"OP_UNKNOWN189\";\n    OpcodesBCH[OpcodesBCH[\"OP_UNKNOWN190\"] = 190] = \"OP_UNKNOWN190\";\n    OpcodesBCH[OpcodesBCH[\"OP_UNKNOWN191\"] = 191] = \"OP_UNKNOWN191\";\n    OpcodesBCH[OpcodesBCH[\"OP_UNKNOWN192\"] = 192] = \"OP_UNKNOWN192\";\n    OpcodesBCH[OpcodesBCH[\"OP_UNKNOWN193\"] = 193] = \"OP_UNKNOWN193\";\n    OpcodesBCH[OpcodesBCH[\"OP_UNKNOWN194\"] = 194] = \"OP_UNKNOWN194\";\n    OpcodesBCH[OpcodesBCH[\"OP_UNKNOWN195\"] = 195] = \"OP_UNKNOWN195\";\n    OpcodesBCH[OpcodesBCH[\"OP_UNKNOWN196\"] = 196] = \"OP_UNKNOWN196\";\n    OpcodesBCH[OpcodesBCH[\"OP_UNKNOWN197\"] = 197] = \"OP_UNKNOWN197\";\n    OpcodesBCH[OpcodesBCH[\"OP_UNKNOWN198\"] = 198] = \"OP_UNKNOWN198\";\n    OpcodesBCH[OpcodesBCH[\"OP_UNKNOWN199\"] = 199] = \"OP_UNKNOWN199\";\n    OpcodesBCH[OpcodesBCH[\"OP_UNKNOWN200\"] = 200] = \"OP_UNKNOWN200\";\n    OpcodesBCH[OpcodesBCH[\"OP_UNKNOWN201\"] = 201] = \"OP_UNKNOWN201\";\n    OpcodesBCH[OpcodesBCH[\"OP_UNKNOWN202\"] = 202] = \"OP_UNKNOWN202\";\n    OpcodesBCH[OpcodesBCH[\"OP_UNKNOWN203\"] = 203] = \"OP_UNKNOWN203\";\n    OpcodesBCH[OpcodesBCH[\"OP_UNKNOWN204\"] = 204] = \"OP_UNKNOWN204\";\n    OpcodesBCH[OpcodesBCH[\"OP_UNKNOWN205\"] = 205] = \"OP_UNKNOWN205\";\n    OpcodesBCH[OpcodesBCH[\"OP_UNKNOWN206\"] = 206] = \"OP_UNKNOWN206\";\n    OpcodesBCH[OpcodesBCH[\"OP_UNKNOWN207\"] = 207] = \"OP_UNKNOWN207\";\n    OpcodesBCH[OpcodesBCH[\"OP_UNKNOWN208\"] = 208] = \"OP_UNKNOWN208\";\n    OpcodesBCH[OpcodesBCH[\"OP_UNKNOWN209\"] = 209] = \"OP_UNKNOWN209\";\n    OpcodesBCH[OpcodesBCH[\"OP_UNKNOWN210\"] = 210] = \"OP_UNKNOWN210\";\n    OpcodesBCH[OpcodesBCH[\"OP_UNKNOWN211\"] = 211] = \"OP_UNKNOWN211\";\n    OpcodesBCH[OpcodesBCH[\"OP_UNKNOWN212\"] = 212] = \"OP_UNKNOWN212\";\n    OpcodesBCH[OpcodesBCH[\"OP_UNKNOWN213\"] = 213] = \"OP_UNKNOWN213\";\n    OpcodesBCH[OpcodesBCH[\"OP_UNKNOWN214\"] = 214] = \"OP_UNKNOWN214\";\n    OpcodesBCH[OpcodesBCH[\"OP_UNKNOWN215\"] = 215] = \"OP_UNKNOWN215\";\n    OpcodesBCH[OpcodesBCH[\"OP_UNKNOWN216\"] = 216] = \"OP_UNKNOWN216\";\n    OpcodesBCH[OpcodesBCH[\"OP_UNKNOWN217\"] = 217] = \"OP_UNKNOWN217\";\n    OpcodesBCH[OpcodesBCH[\"OP_UNKNOWN218\"] = 218] = \"OP_UNKNOWN218\";\n    OpcodesBCH[OpcodesBCH[\"OP_UNKNOWN219\"] = 219] = \"OP_UNKNOWN219\";\n    OpcodesBCH[OpcodesBCH[\"OP_UNKNOWN220\"] = 220] = \"OP_UNKNOWN220\";\n    OpcodesBCH[OpcodesBCH[\"OP_UNKNOWN221\"] = 221] = \"OP_UNKNOWN221\";\n    OpcodesBCH[OpcodesBCH[\"OP_UNKNOWN222\"] = 222] = \"OP_UNKNOWN222\";\n    OpcodesBCH[OpcodesBCH[\"OP_UNKNOWN223\"] = 223] = \"OP_UNKNOWN223\";\n    OpcodesBCH[OpcodesBCH[\"OP_UNKNOWN224\"] = 224] = \"OP_UNKNOWN224\";\n    OpcodesBCH[OpcodesBCH[\"OP_UNKNOWN225\"] = 225] = \"OP_UNKNOWN225\";\n    OpcodesBCH[OpcodesBCH[\"OP_UNKNOWN226\"] = 226] = \"OP_UNKNOWN226\";\n    OpcodesBCH[OpcodesBCH[\"OP_UNKNOWN227\"] = 227] = \"OP_UNKNOWN227\";\n    OpcodesBCH[OpcodesBCH[\"OP_UNKNOWN228\"] = 228] = \"OP_UNKNOWN228\";\n    OpcodesBCH[OpcodesBCH[\"OP_UNKNOWN229\"] = 229] = \"OP_UNKNOWN229\";\n    OpcodesBCH[OpcodesBCH[\"OP_UNKNOWN230\"] = 230] = \"OP_UNKNOWN230\";\n    OpcodesBCH[OpcodesBCH[\"OP_UNKNOWN231\"] = 231] = \"OP_UNKNOWN231\";\n    OpcodesBCH[OpcodesBCH[\"OP_UNKNOWN232\"] = 232] = \"OP_UNKNOWN232\";\n    OpcodesBCH[OpcodesBCH[\"OP_UNKNOWN233\"] = 233] = \"OP_UNKNOWN233\";\n    OpcodesBCH[OpcodesBCH[\"OP_UNKNOWN234\"] = 234] = \"OP_UNKNOWN234\";\n    OpcodesBCH[OpcodesBCH[\"OP_UNKNOWN235\"] = 235] = \"OP_UNKNOWN235\";\n    OpcodesBCH[OpcodesBCH[\"OP_UNKNOWN236\"] = 236] = \"OP_UNKNOWN236\";\n    OpcodesBCH[OpcodesBCH[\"OP_UNKNOWN237\"] = 237] = \"OP_UNKNOWN237\";\n    OpcodesBCH[OpcodesBCH[\"OP_UNKNOWN238\"] = 238] = \"OP_UNKNOWN238\";\n    OpcodesBCH[OpcodesBCH[\"OP_UNKNOWN239\"] = 239] = \"OP_UNKNOWN239\";\n    /**\n     * A.K.A. `OP_PREFIX_BEGIN`\n     */\n    OpcodesBCH[OpcodesBCH[\"OP_UNKNOWN240\"] = 240] = \"OP_UNKNOWN240\";\n    OpcodesBCH[OpcodesBCH[\"OP_UNKNOWN241\"] = 241] = \"OP_UNKNOWN241\";\n    OpcodesBCH[OpcodesBCH[\"OP_UNKNOWN242\"] = 242] = \"OP_UNKNOWN242\";\n    OpcodesBCH[OpcodesBCH[\"OP_UNKNOWN243\"] = 243] = \"OP_UNKNOWN243\";\n    OpcodesBCH[OpcodesBCH[\"OP_UNKNOWN244\"] = 244] = \"OP_UNKNOWN244\";\n    OpcodesBCH[OpcodesBCH[\"OP_UNKNOWN245\"] = 245] = \"OP_UNKNOWN245\";\n    OpcodesBCH[OpcodesBCH[\"OP_UNKNOWN246\"] = 246] = \"OP_UNKNOWN246\";\n    /**\n     * A.K.A. `OP_PREFIX_END`\n     */\n    OpcodesBCH[OpcodesBCH[\"OP_UNKNOWN247\"] = 247] = \"OP_UNKNOWN247\";\n    OpcodesBCH[OpcodesBCH[\"OP_UNKNOWN248\"] = 248] = \"OP_UNKNOWN248\";\n    OpcodesBCH[OpcodesBCH[\"OP_UNKNOWN249\"] = 249] = \"OP_UNKNOWN249\";\n    OpcodesBCH[OpcodesBCH[\"OP_UNKNOWN250\"] = 250] = \"OP_UNKNOWN250\";\n    OpcodesBCH[OpcodesBCH[\"OP_UNKNOWN251\"] = 251] = \"OP_UNKNOWN251\";\n    OpcodesBCH[OpcodesBCH[\"OP_UNKNOWN252\"] = 252] = \"OP_UNKNOWN252\";\n    OpcodesBCH[OpcodesBCH[\"OP_UNKNOWN253\"] = 253] = \"OP_UNKNOWN253\";\n    OpcodesBCH[OpcodesBCH[\"OP_UNKNOWN254\"] = 254] = \"OP_UNKNOWN254\";\n    OpcodesBCH[OpcodesBCH[\"OP_UNKNOWN255\"] = 255] = \"OP_UNKNOWN255\";\n})(OpcodesBCH || (OpcodesBCH = {}));\nexport var OpcodeAlternateNamesBCH;\n(function (OpcodeAlternateNamesBCH) {\n    /**\n     * A.K.A. `OP_0`\n     */\n    OpcodeAlternateNamesBCH[OpcodeAlternateNamesBCH[\"OP_FALSE\"] = 0] = \"OP_FALSE\";\n    /**\n     * A.K.A. `OP_0`\n     */\n    OpcodeAlternateNamesBCH[OpcodeAlternateNamesBCH[\"OP_PUSHBYTES_0\"] = 0] = \"OP_PUSHBYTES_0\";\n    /**\n     * A.K.A. `OP_1`\n     */\n    OpcodeAlternateNamesBCH[OpcodeAlternateNamesBCH[\"OP_TRUE\"] = 81] = \"OP_TRUE\";\n    /**\n     * A.K.A. `OP_CHECKLOCKTIMEVERIFY`\n     */\n    OpcodeAlternateNamesBCH[OpcodeAlternateNamesBCH[\"OP_NOP2\"] = 177] = \"OP_NOP2\";\n    /**\n     * A.K.A. `OP_CHECKSEQUENCEVERIFY`\n     */\n    OpcodeAlternateNamesBCH[OpcodeAlternateNamesBCH[\"OP_NOP3\"] = 178] = \"OP_NOP3\";\n    /**\n     * A.K.A. `OP_CHECKDATASIG`\n     */\n    OpcodeAlternateNamesBCH[OpcodeAlternateNamesBCH[\"OP_UNKNOWN186\"] = 186] = \"OP_UNKNOWN186\";\n    /**\n     * A.K.A. `OP_CHECKDATASIGVERIFY`\n     */\n    OpcodeAlternateNamesBCH[OpcodeAlternateNamesBCH[\"OP_UNKNOWN187\"] = 187] = \"OP_UNKNOWN187\";\n    /**\n     * A.K.A. `OP_UNKNOWN188`\n     */\n    OpcodeAlternateNamesBCH[OpcodeAlternateNamesBCH[\"FIRST_UNDEFINED_OP_VALUE\"] = 188] = \"FIRST_UNDEFINED_OP_VALUE\";\n    /**\n     * A.K.A. `OP_UNKNOWN240`. Some implementations have reserved opcodes\n     * `0xf0` through `0xf7` for a future range of multi-byte opcodes, though none\n     * are yet available on the network.\n     */\n    OpcodeAlternateNamesBCH[OpcodeAlternateNamesBCH[\"OP_PREFIX_BEGIN\"] = 240] = \"OP_PREFIX_BEGIN\";\n    /**\n     * A.K.A. `OP_UNKNOWN247`. Some implementations have reserved opcodes\n     * `0xf0` through `0xf7` for a future range of multi-byte opcodes, though none\n     * are yet available on the network.\n     */\n    OpcodeAlternateNamesBCH[OpcodeAlternateNamesBCH[\"OP_PREFIX_END\"] = 247] = \"OP_PREFIX_END\";\n    /**\n     * `OP_SMALLINTEGER` is used internally for template matching in the C++\n     * implementation. When found on the network, it is `OP_UNKNOWN250`.\n     */\n    OpcodeAlternateNamesBCH[OpcodeAlternateNamesBCH[\"OP_SMALLINTEGER\"] = 250] = \"OP_SMALLINTEGER\";\n    /**\n     * `OP_PUBKEYS` is used internally for template matching in the C++\n     * implementation. When found on the network, it is `OP_UNKNOWN251`.\n     */\n    OpcodeAlternateNamesBCH[OpcodeAlternateNamesBCH[\"OP_PUBKEYS\"] = 251] = \"OP_PUBKEYS\";\n    /**\n     * `OP_PUBKEYHASH` is used internally for template matching in the C++\n     * implementation. When found on the network, it is `OP_UNKNOWN253`.\n     */\n    OpcodeAlternateNamesBCH[OpcodeAlternateNamesBCH[\"OP_PUBKEYHASH\"] = 253] = \"OP_PUBKEYHASH\";\n    /**\n     * `OP_PUBKEY` is used internally for template matching in the C++\n     * implementation. When found on the network, it is `OP_UNKNOWN254`.\n     */\n    OpcodeAlternateNamesBCH[OpcodeAlternateNamesBCH[\"OP_PUBKEY\"] = 254] = \"OP_PUBKEY\";\n    /**\n     * `OP_INVALIDOPCODE` is described as such for testing in the C++\n     * implementation. When found on the network, it is `OP_UNKNOWN255`.\n     */\n    OpcodeAlternateNamesBCH[OpcodeAlternateNamesBCH[\"OP_INVALIDOPCODE\"] = 255] = \"OP_INVALIDOPCODE\";\n})(OpcodeAlternateNamesBCH || (OpcodeAlternateNamesBCH = {}));\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmNoLW9wY29kZXMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9zcmMvbGliL2F1dGgvaW5zdHJ1Y3Rpb24tc2V0cy9iY2gvYmNoLW9wY29kZXMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTSxDQUFOLElBQVksVUE0Ulg7QUE1UkQsV0FBWSxVQUFVO0lBQ3BCOztPQUVHO0lBQ0gsMkNBQVcsQ0FBQTtJQUNYLCtEQUFxQixDQUFBO0lBQ3JCLCtEQUFxQixDQUFBO0lBQ3JCLCtEQUFxQixDQUFBO0lBQ3JCLCtEQUFxQixDQUFBO0lBQ3JCLCtEQUFxQixDQUFBO0lBQ3JCLCtEQUFxQixDQUFBO0lBQ3JCLCtEQUFxQixDQUFBO0lBQ3JCLCtEQUFxQixDQUFBO0lBQ3JCLCtEQUFxQixDQUFBO0lBQ3JCLGtFQUFzQixDQUFBO0lBQ3RCLGtFQUFzQixDQUFBO0lBQ3RCLGtFQUFzQixDQUFBO0lBQ3RCLGtFQUFzQixDQUFBO0lBQ3RCLGtFQUFzQixDQUFBO0lBQ3RCLGtFQUFzQixDQUFBO0lBQ3RCLGtFQUFzQixDQUFBO0lBQ3RCLGtFQUFzQixDQUFBO0lBQ3RCLGtFQUFzQixDQUFBO0lBQ3RCLGtFQUFzQixDQUFBO0lBQ3RCLGtFQUFzQixDQUFBO0lBQ3RCLGtFQUFzQixDQUFBO0lBQ3RCLGtFQUFzQixDQUFBO0lBQ3RCLGtFQUFzQixDQUFBO0lBQ3RCLGtFQUFzQixDQUFBO0lBQ3RCLGtFQUFzQixDQUFBO0lBQ3RCLGtFQUFzQixDQUFBO0lBQ3RCLGtFQUFzQixDQUFBO0lBQ3RCLGtFQUFzQixDQUFBO0lBQ3RCLGtFQUFzQixDQUFBO0lBQ3RCLGtFQUFzQixDQUFBO0lBQ3RCLGtFQUFzQixDQUFBO0lBQ3RCLGtFQUFzQixDQUFBO0lBQ3RCLGtFQUFzQixDQUFBO0lBQ3RCLGtFQUFzQixDQUFBO0lBQ3RCLGtFQUFzQixDQUFBO0lBQ3RCLGtFQUFzQixDQUFBO0lBQ3RCLGtFQUFzQixDQUFBO0lBQ3RCLGtF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QUFvQixDQUFBO0lBQ3BCLCtEQUFvQixDQUFBO0lBQ3BCLCtEQUFvQixDQUFBO0lBQ3BCLCtEQUFvQixDQUFBO0lBQ3BCLCtEQUFvQixDQUFBO0lBQ3BCLCtEQUFvQixDQUFBO0lBQ3BCLCtEQUFvQixDQUFBO0lBQ3BCLCtEQUFvQixDQUFBO0lBQ3BCLCtEQUFvQixDQUFBO0lBQ3BCLCtEQUFvQixDQUFBO0lBQ3BCLCtEQUFvQixDQUFBO0lBQ3BCLCtEQUFvQixDQUFBO0lBQ3BCLCtEQUFvQixDQUFBO0lBQ3BCLCtEQUFvQixDQUFBO0lBQ3BCLCtEQUFvQixDQUFBO0lBQ3BCLCtEQUFvQixDQUFBO0lBQ3BCLCtEQUFvQixDQUFBO0lBQ3BCLCtEQUFvQixDQUFBO0lBQ3BCLCtEQUFvQixDQUFBO0lBQ3BCLCtEQUFvQixDQUFBO0lBQ3BCLCtEQUFvQixDQUFBO0lBQ3BCLCtEQUFvQixDQUFBO0lBQ3BCLCtEQUFvQixDQUFBO0lBQ3BCLCtEQUFvQixDQUFBO0lBQ3BCLCtEQUFvQixDQUFBO0lBQ3BCLCtEQUFvQixDQUFBO0lBQ3BCLCtEQUFvQixDQUFBO0lBQ3BCLCtEQUFvQixDQUFBO0lBQ3BCLCtEQUFvQixDQUFBO0lBQ3BCLCtEQUFvQixDQUFBO0lBQ3BCLCtEQUFvQixDQUFBO0lBQ3BCLCtEQUFvQixDQUFBO0lBQ3BCLCtEQUFvQixDQUFBO0lBQ3BCLCtEQUFvQixDQUFBO0lBQ3BCLCtEQUFvQixDQUFBO0lBQ3BCLCtEQUFvQixDQUFBO0lBQ3BCLCtEQUFvQixDQUFBO0lBQ3BCLCtEQUFvQixDQUFBO0lBQ3BCLCtEQUFvQixDQUFBO0lBQ3BCLCtEQUFvQixDQUFBO0lBQ3BCLCtEQUFvQixDQUFBO0lBQ3BCLCtEQUFvQixDQUFBO0lBQ3BCLCtEQUFvQixDQUFBO0lBQ3BCLCtEQUFvQixDQUFBO0lBQ3BCLCtEQUFvQixDQUFBO0lBQ3BCLCtEQUFvQixDQUFBO0lBQ3BCLCtEQUFvQixDQUFBO0lBQ3BCLCtEQUFvQixDQUFBO0lBQ3BCOztPQUVHO0lBQ0gsK0RBQW9CLENBQUE7SUFDcEIsK0RBQW9CLENBQUE7SUFDcEIsK0RBQW9CLENBQUE7SUFDcEIsK0RBQW9CLENBQUE7SUFDcEIsK0RBQW9CLENBQUE7SUFDcEIsK0RBQW9CLENBQUE7SUFDcEIsK0RBQW9CLENBQUE7SUFDcEI7O09BRUc7SUFDSCwrREFBb0IsQ0FBQTtJQUNwQiwrREFBb0IsQ0FBQTtJQUNwQiwrREFBb0IsQ0FBQTtJQUNwQiwrREFBb0IsQ0FBQTtJQUNwQiwrREFBb0IsQ0FBQTtJQUNwQiwrREFBb0IsQ0FBQTtJQUNwQiwrREFBb0IsQ0FBQTtJQUNwQiwrREFBb0IsQ0FBQTtJQUNwQiwrREFBb0IsQ0FBQTtBQUN0QixDQUFDLEVBNVJXLFVBQVUsS0FBVixVQUFVLFFBNFJyQjtBQUVELE1BQU0sQ0FBTixJQUFZLHVCQXNFWDtBQXRFRCxXQUFZLHVCQUF1QjtJQUNqQzs7T0FFRztJQUNILDZFQUFlLENBQUE7SUFDZjs7T0FFRztJQUNILHlGQUFxQixDQUFBO0lBQ3JCOztPQUVHO0lBQ0gsNEVBQWMsQ0FBQTtJQUNkOztPQUVHO0lBQ0gsNkVBQWMsQ0FBQTtJQUNkOztPQUVHO0lBQ0gsNkVBQWMsQ0FBQTtJQUNkOztPQUVHO0lBQ0gseUZBQW9CLENBQUE7SUFDcEI7O09BRUc7SUFDSCx5RkFBb0IsQ0FBQTtJQUNwQjs7T0FFRztJQUNILCtHQUErQixDQUFBO0lBQy9COzs7O09BSUc7SUFDSCw2RkFBc0IsQ0FBQTtJQUN0Qjs7OztPQUlHO0lBQ0gseUZBQW9CLENBQUE7SUFDcEI7OztPQUdHO0lBQ0gsNkZBQXNCLENBQUE7SUFDdEI7OztPQUdHO0lBQ0gsbUZBQWlCLENBQUE7SUFDakI7OztPQUdHO0lBQ0gseUZBQW9CLENBQUE7SUFDcEI7OztPQUdHO0lBQ0gsaUZBQWdCLENBQUE7SUFDaEI7OztPQUdHO0lBQ0gsK0ZBQXVCLENBQUE7QUFDekIsQ0FBQyxFQXRFVyx1QkFBdUIsS0FBdkIsdUJBQXVCLFFBc0VsQyJ9","import { flattenBinArray } from '../../../utils/hex';\nimport { combineOperations, pushToStack, useOneScriptNumber, useOneStackItem, useThreeStackItems, useTwoScriptNumbers, useTwoStackItems } from '../common/combinators';\nimport { ConsensusCommon } from '../common/common';\nimport { isValidPublicKeyEncoding, isValidSignatureEncodingDER } from '../common/encoding';\nimport { applyError, AuthenticationErrorCommon } from '../common/errors';\nimport { opVerify } from '../common/flow-control';\nimport { bigIntToScriptNumber, booleanToScriptNumber } from '../common/types';\nimport { AuthenticationErrorBCH } from './bch-errors';\nimport { OpcodesBCH } from './bch-opcodes';\nimport { ConsensusBCH } from './bch-types';\nexport const opCat = () => (state) => useTwoStackItems(state, (nextState, a, b) => a.length + b.length > ConsensusCommon.maximumStackItemLength\n    ? applyError(AuthenticationErrorBCH.exceededMaximumStackItemLength, nextState)\n    : pushToStack(nextState, flattenBinArray([a, b])));\nexport const opSplit = (flags) => (state) => useOneScriptNumber(state, (nextState, value) => {\n    const index = Number(value);\n    return useOneStackItem(nextState, (finalState, item) => index < 0 || index > item.length\n        ? applyError(AuthenticationErrorBCH.invalidSplitIndex, finalState)\n        : pushToStack(finalState, item.slice(0, index), item.slice(index)));\n}, flags.requireMinimalEncoding);\nvar Constants;\n(function (Constants) {\n    Constants[Constants[\"positiveSign\"] = 0] = \"positiveSign\";\n    Constants[Constants[\"negativeSign\"] = 128] = \"negativeSign\";\n})(Constants || (Constants = {}));\nexport const padMinimallyEncodedScriptNumber = (scriptNumber, length) => {\n    // tslint:disable-next-line: no-let\n    let signBit = Constants.positiveSign;\n    // tslint:disable-next-line: no-if-statement\n    if (scriptNumber.length > 0) {\n        // tslint:disable-next-line: no-expression-statement no-bitwise\n        signBit = scriptNumber[scriptNumber.length - 1] & Constants.negativeSign;\n        // tslint:disable-next-line: no-expression-statement no-bitwise no-object-mutation\n        scriptNumber[scriptNumber.length - 1] &= Constants.negativeSign - 1;\n    }\n    const result = Array.from(scriptNumber);\n    while (result.length < length - 1) {\n        // tslint:disable-next-line: no-expression-statement\n        result.push(0);\n    }\n    // tslint:disable-next-line: no-expression-statement\n    result.push(signBit);\n    return Uint8Array.from(result);\n};\nexport const opNum2Bin = () => (state) => useOneScriptNumber(state, (nextState, value) => {\n    const targetLength = Number(value);\n    return targetLength > ConsensusCommon.maximumStackItemLength\n        ? applyError(AuthenticationErrorBCH.exceededMaximumStackItemLength, nextState)\n        : useOneScriptNumber(nextState, (finalState, target) => {\n            const minimallyEncoded = bigIntToScriptNumber(target);\n            return minimallyEncoded.length > targetLength\n                ? applyError(AuthenticationErrorBCH.insufficientLength, finalState)\n                : minimallyEncoded.length === targetLength\n                    ? pushToStack(finalState, minimallyEncoded)\n                    : pushToStack(finalState, padMinimallyEncodedScriptNumber(minimallyEncoded, targetLength));\n        }, false, ConsensusCommon.maximumStackItemLength);\n}, true);\nexport const opBin2Num = () => (state) => useOneScriptNumber(state, (nextState, target) => {\n    const minimallyEncoded = bigIntToScriptNumber(target);\n    return minimallyEncoded.length > ConsensusCommon.maximumScriptNumberLength\n        ? applyError(AuthenticationErrorBCH.exceededMaximumScriptNumberLength, nextState)\n        : pushToStack(nextState, minimallyEncoded);\n}, false, ConsensusCommon.maximumStackItemLength);\nexport const bitwiseOperation = (combine) => (state) => useTwoStackItems(state, (nextState, a, b) => a.length !== b.length\n    ? applyError(AuthenticationErrorBCH.mismatchedBitwiseOperandLength, nextState)\n    : // tslint:disable-next-line: no-bitwise\n        pushToStack(nextState, combine(a, b)));\nexport const opAnd = () => bitwiseOperation((a, b) => a.map((v, i) => v & b[i]));\nexport const opOr = () => bitwiseOperation((a, b) => a.map((v, i) => v | b[i]));\nexport const opXor = () => bitwiseOperation((a, b) => a.map((v, i) => v ^ b[i]));\nexport const opDiv = (flags) => (state) => useTwoScriptNumbers(state, (nextState, a, b) => b === BigInt(0)\n    ? applyError(AuthenticationErrorBCH.divisionByZero, nextState)\n    : pushToStack(nextState, bigIntToScriptNumber(a / b)), flags.requireMinimalEncoding);\nexport const opMod = (flags) => (state) => useTwoScriptNumbers(state, (nextState, a, b) => b === BigInt(0)\n    ? applyError(AuthenticationErrorBCH.divisionByZero, nextState)\n    : pushToStack(nextState, bigIntToScriptNumber(a % b)), flags.requireMinimalEncoding);\n/**\n * Validate the encoding of a raw signature – a signature without a signing\n * serialization type byte (A.K.A. \"sighash\" byte).\n *\n * @param signature the raw signature\n */\nexport const isValidSignatureEncodingBCHRaw = (signature) => signature.length === 0 ||\n    signature.length === ConsensusBCH.schnorrSignatureLength ||\n    isValidSignatureEncodingDER(signature);\nexport const opCheckDataSig = (sha256, secp256k1) => (state) => \n// tslint:disable-next-line: cyclomatic-complexity\nuseThreeStackItems(state, (nextState, signature, message, publicKey) => {\n    // tslint:disable-next-line:no-if-statement\n    if (!isValidSignatureEncodingBCHRaw(signature)) {\n        return applyError(AuthenticationErrorCommon.invalidSignatureEncoding, nextState);\n    }\n    // tslint:disable-next-line:no-if-statement\n    if (!isValidPublicKeyEncoding(publicKey)) {\n        return applyError(AuthenticationErrorCommon.invalidPublicKeyEncoding, nextState);\n    }\n    const digest = sha256.hash(message);\n    const useSchnorr = signature.length === ConsensusBCH.schnorrSignatureLength;\n    const success = useSchnorr\n        ? secp256k1.verifySignatureSchnorr(signature, publicKey, digest)\n        : secp256k1.verifySignatureDERLowS(signature, publicKey, digest);\n    return !success && signature.length !== 0\n        ? applyError(AuthenticationErrorCommon.nonNullSignatureFailure, nextState)\n        : pushToStack(nextState, booleanToScriptNumber(success));\n});\nexport const opCheckDataSigVerify = (sha256, secp256k1) => combineOperations(opCheckDataSig(sha256, secp256k1), opVerify());\nexport const bitcoinCashOperations = (sha256, secp256k1, flags) => ({\n    [OpcodesBCH.OP_CAT]: opCat(),\n    [OpcodesBCH.OP_SPLIT]: opSplit(flags),\n    [OpcodesBCH.OP_NUM2BIN]: opNum2Bin(),\n    [OpcodesBCH.OP_BIN2NUM]: opBin2Num(),\n    [OpcodesBCH.OP_AND]: opAnd(),\n    [OpcodesBCH.OP_OR]: opOr(),\n    [OpcodesBCH.OP_XOR]: opXor(),\n    [OpcodesBCH.OP_DIV]: opDiv(flags),\n    [OpcodesBCH.OP_MOD]: opMod(flags),\n    [OpcodesBCH.OP_CHECKDATASIG]: opCheckDataSig(sha256, secp256k1),\n    [OpcodesBCH.OP_CHECKDATASIGVERIFY]: opCheckDataSigVerify(sha256, secp256k1)\n});\n//# sourceMappingURL=data:application/json;base64,","import { getBitcoinTransactionId, serializeTransaction } from '../../../transaction';\nimport { hexToBin, swapEndianness } from '../../../utils/utils';\nexport var ConsensusBCH;\n(function (ConsensusBCH) {\n    ConsensusBCH[ConsensusBCH[\"schnorrSignatureLength\"] = 64] = \"schnorrSignatureLength\";\n})(ConsensusBCH || (ConsensusBCH = {}));\nexport const createTestAuthenticationProgramBCH = (unlockingBytecode, lockingBytecode, sha256, satoshis = BigInt(0)) => {\n    const testFundingTransaction = {\n        inputs: [\n            {\n                outpointIndex: 0xffffffff,\n                outpointTransactionHash: hexToBin('0000000000000000000000000000000000000000000000000000000000000000'),\n                sequenceNumber: 0xffffffff,\n                unlockingBytecode: Uint8Array.of(0, 0)\n            }\n        ],\n        locktime: 0,\n        outputs: [{ lockingBytecode, satoshis }],\n        version: 1\n    };\n    const testSpendingTransaction = {\n        inputs: [\n            {\n                outpointIndex: 0,\n                outpointTransactionHash: hexToBin(swapEndianness(getBitcoinTransactionId(serializeTransaction(testFundingTransaction), sha256))),\n                sequenceNumber: 0xffffffff,\n                unlockingBytecode\n            }\n        ],\n        locktime: 0,\n        outputs: [{ lockingBytecode: Uint8Array.of(), satoshis }],\n        version: 1\n    };\n    return {\n        inputIndex: 0,\n        sourceOutput: testFundingTransaction.outputs[0],\n        spendingTransaction: testSpendingTransaction\n    };\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmNoLXR5cGVzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vc3JjL2xpYi9hdXRoL2luc3RydWN0aW9uLXNldHMvYmNoL2JjaC10eXBlcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQSxPQUFPLEVBQ0wsdUJBQXVCLEVBQ3ZCLG9CQUFvQixFQUVyQixNQUFNLHNCQUFzQixDQUFDO0FBQzlCLE9BQU8sRUFBRSxRQUFRLEVBQUUsY0FBYyxFQUFFLE1BQU0sc0JBQXNCLENBQUM7QUFTaEUsTUFBTSxDQUFOLElBQVksWUFFWDtBQUZELFdBQVksWUFBWTtJQUN0QixvRkFBMkIsQ0FBQTtBQUM3QixDQUFDLEVBRlcsWUFBWSxLQUFaLFlBQVksUUFFdkI7QUFXRCxNQUFNLENBQUMsTUFBTSxrQ0FBa0MsR0FBRyxDQUNoRCxpQkFBNkIsRUFDN0IsZUFBMkIsRUFDM0IsTUFBYyxFQUNkLFFBQVEsR0FBRyxNQUFNLENBQUMsQ0FBQyxDQUFDLEVBQ3BCLEVBQUU7SUFDRixNQUFNLHNCQUFzQixHQUFnQjtRQUMxQyxNQUFNLEVBQUU7WUFDTjtnQkFDRSxhQUFhLEVBQUUsVUFBVTtnQkFDekIsdUJBQXVCLEVBQUUsUUFBUSxDQUMvQixrRUFBa0UsQ0FDbkU7Z0JBQ0QsY0FBYyxFQUFFLFVBQVU7Z0JBQzFCLGlCQUFpQixFQUFFLFVBQVUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQzthQUN2QztTQUNGO1FBQ0QsUUFBUSxFQUFFLENBQUM7UUFDWCxPQUFPLEVBQUUsQ0FBQyxFQUFFLGVBQWUsRUFBRSxRQUFRLEVBQUUsQ0FBQztRQUN4QyxPQUFPLEVBQUUsQ0FBQztLQUNYLENBQUM7SUFDRixNQUFNLHVCQUF1QixHQUFnQjtRQUMzQyxNQUFNLEVBQUU7WUFDTjtnQkFDRSxhQUFhLEVBQUUsQ0FBQztnQkFDaEIsdUJBQXVCLEVBQUUsUUFBUSxDQUMvQixjQUFjLENBQ1osdUJBQXVCLENBQ3JCLG9CQUFvQixDQUFDLHNCQUFzQixDQUFDLEVBQzVDLE1BQU0sQ0FDUCxDQUNGLENBQ0Y7Z0JBQ0QsY0FBYyxFQUFFLFVBQVU7Z0JBQzFCLGlCQUFpQjthQUNsQjtTQUNGO1FBQ0QsUUFBUSxFQUFFLENBQUM7UUFDWCxPQUFPLEVBQUUsQ0FBQyxFQUFFLGVBQWUsRUFBRSxVQUFVLENBQUMsRUFBRSxFQUFFLEVBQUUsUUFBUSxFQUFFLENBQUM7UUFDekQsT0FBTyxFQUFFLENBQUM7S0FDWCxDQUFDO0lBQ0YsT0FBTztRQUNMLFVBQVUsRUFBRSxDQUFDO1FBQ2IsWUFBWSxFQUFFLHNCQUFzQixDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUM7UUFDL0MsbUJBQW1CLEVBQUUsdUJBQXVCO0tBQzdDLENBQUM7QUFDSixDQUFDLENBQUMifQ==","import { instantiateRipemd160, instantiateSecp256k1, instantiateSha1, instantiateSha256 } from '../../../crypto/crypto';\nimport { createAuthenticationVirtualMachine } from '../../virtual-machine';\nimport { createInstructionSetBCH, getFlagsForInstructionSetBCH, instructionSetBCHCurrentStrict } from './bch-instruction-sets';\nexport * from './bch-descriptions';\nexport * from './bch-errors';\nexport * from './bch-instruction-sets';\nexport * from './bch-opcodes';\nexport * from './bch-operations';\nexport * from './bch-types';\n/**\n * Initialize a virtual machine using the provided BCH instruction set.\n *\n * @param instructionSet the VM version to instantiate – by default, the current\n * \"strict\" VM is used (`instructionSetBCHCurrentStrict`)\n */\n// tslint:disable-next-line: variable-name\nexport const instantiateVirtualMachineBCH = async (instructionSet = instructionSetBCHCurrentStrict) => {\n    const [sha1, sha256, ripemd160, secp256k1] = await Promise.all([\n        instantiateSha1(),\n        instantiateSha256(),\n        instantiateRipemd160(),\n        instantiateSecp256k1()\n    ]);\n    return createAuthenticationVirtualMachine(createInstructionSetBCH(getFlagsForInstructionSetBCH(instructionSet), sha1, sha256, ripemd160, secp256k1));\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmNoLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vc3JjL2xpYi9hdXRoL2luc3RydWN0aW9uLXNldHMvYmNoL2JjaC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQ0wsb0JBQW9CLEVBQ3BCLG9CQUFvQixFQUNwQixlQUFlLEVBQ2YsaUJBQWlCLEVBQ2xCLE1BQU0sd0JBQXdCLENBQUM7QUFDaEMsT0FBTyxFQUFFLGtDQUFrQyxFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUFFM0UsT0FBTyxFQUNMLHVCQUF1QixFQUN2Qiw0QkFBNEIsRUFDNUIsOEJBQThCLEVBQy9CLE1BQU0sd0JBQXdCLENBQUM7QUFFaEMsY0FBYyxvQkFBb0IsQ0FBQztBQUNuQyxjQUFjLGNBQWMsQ0FBQztBQUM3QixjQUFjLHdCQUF3QixDQUFDO0FBQ3ZDLGNBQWMsZUFBZSxDQUFDO0FBQzlCLGNBQWMsa0JBQWtCLENBQUM7QUFDakMsY0FBYyxhQUFhLENBQUM7QUFFNUI7Ozs7O0dBS0c7QUFDSCwwQ0FBMEM7QUFDMUMsTUFBTSxDQUFDLE1BQU0sNEJBQTRCLEdBQUcsS0FBSyxFQUMvQyxjQUFjLEdBQUcsOEJBQThCLEVBQy9DLEVBQUU7SUFDRixNQUFNLENBQUMsSUFBSSxFQUFFLE1BQU0sRUFBRSxTQUFTLEVBQUUsU0FBUyxDQUFDLEdBQUcsTUFBTSxPQUFPLENBQUMsR0FBRyxDQUFDO1FBQzdELGVBQWUsRUFBRTtRQUNqQixpQkFBaUIsRUFBRTtRQUNuQixvQkFBb0IsRUFBRTtRQUN0QixvQkFBb0IsRUFBRTtLQUN2QixDQUFDLENBQUM7SUFDSCxPQUFPLGtDQUFrQyxDQUN2Qyx1QkFBdUIsQ0FDckIsNEJBQTRCLENBQUMsY0FBYyxDQUFDLEVBQzVDLElBQUksRUFDSixNQUFNLEVBQ04sU0FBUyxFQUNULFNBQVMsQ0FDVixDQUNGLENBQUM7QUFDSixDQUFDLENBQUMifQ==","export var OpcodesBTC;\n(function (OpcodesBTC) {\n    OpcodesBTC[OpcodesBTC[\"OP_0\"] = 0] = \"OP_0\";\n    OpcodesBTC[OpcodesBTC[\"OP_PUSHBYTES_1\"] = 1] = \"OP_PUSHBYTES_1\";\n    OpcodesBTC[OpcodesBTC[\"OP_PUSHBYTES_2\"] = 2] = \"OP_PUSHBYTES_2\";\n    OpcodesBTC[OpcodesBTC[\"OP_PUSHBYTES_3\"] = 3] = \"OP_PUSHBYTES_3\";\n    OpcodesBTC[OpcodesBTC[\"OP_PUSHBYTES_4\"] = 4] = \"OP_PUSHBYTES_4\";\n    OpcodesBTC[OpcodesBTC[\"OP_PUSHBYTES_5\"] = 5] = \"OP_PUSHBYTES_5\";\n    OpcodesBTC[OpcodesBTC[\"OP_PUSHBYTES_6\"] = 6] = \"OP_PUSHBYTES_6\";\n    OpcodesBTC[OpcodesBTC[\"OP_PUSHBYTES_7\"] = 7] = \"OP_PUSHBYTES_7\";\n    OpcodesBTC[OpcodesBTC[\"OP_PUSHBYTES_8\"] = 8] = \"OP_PUSHBYTES_8\";\n    OpcodesBTC[OpcodesBTC[\"OP_PUSHBYTES_9\"] = 9] = \"OP_PUSHBYTES_9\";\n    OpcodesBTC[OpcodesBTC[\"OP_PUSHBYTES_10\"] = 10] = \"OP_PUSHBYTES_10\";\n    OpcodesBTC[OpcodesBTC[\"OP_PUSHBYTES_11\"] = 11] = \"OP_PUSHBYTES_11\";\n    OpcodesBTC[OpcodesBTC[\"OP_PUSHBYTES_12\"] = 12] = \"OP_PUSHBYTES_12\";\n    OpcodesBTC[OpcodesBTC[\"OP_PUSHBYTES_13\"] = 13] = \"OP_PUSHBYTES_13\";\n    OpcodesBTC[OpcodesBTC[\"OP_PUSHBYTES_14\"] = 14] = \"OP_PUSHBYTES_14\";\n    OpcodesBTC[OpcodesBTC[\"OP_PUSHBYTES_15\"] = 15] = \"OP_PUSHBYTES_15\";\n    OpcodesBTC[OpcodesBTC[\"OP_PUSHBYTES_16\"] = 16] = \"OP_PUSHBYTES_16\";\n    OpcodesBTC[OpcodesBTC[\"OP_PUSHBYTES_17\"] = 17] = \"OP_PUSHBYTES_17\";\n    OpcodesBTC[OpcodesBTC[\"OP_PUSHBYTES_18\"] = 18] = \"OP_PUSHBYTES_18\";\n    OpcodesBTC[OpcodesBTC[\"OP_PUSHBYTES_19\"] = 19] = \"OP_PUSHBYTES_19\";\n    OpcodesBTC[OpcodesBTC[\"OP_PUSHBYTES_20\"] = 20] = \"OP_PUSHBYTES_20\";\n    OpcodesBTC[OpcodesBTC[\"OP_PUSHBYTES_21\"] = 21] = \"OP_PUSHBYTES_21\";\n    OpcodesBTC[OpcodesBTC[\"OP_PUSHBYTES_22\"] = 22] = \"OP_PUSHBYTES_22\";\n    OpcodesBTC[OpcodesBTC[\"OP_PUSHBYTES_23\"] = 23] = \"OP_PUSHBYTES_23\";\n    OpcodesBTC[OpcodesBTC[\"OP_PUSHBYTES_24\"] = 24] = \"OP_PUSHBYTES_24\";\n    OpcodesBTC[OpcodesBTC[\"OP_PUSHBYTES_25\"] = 25] = \"OP_PUSHBYTES_25\";\n    OpcodesBTC[OpcodesBTC[\"OP_PUSHBYTES_26\"] = 26] = \"OP_PUSHBYTES_26\";\n    OpcodesBTC[OpcodesBTC[\"OP_PUSHBYTES_27\"] = 27] = \"OP_PUSHBYTES_27\";\n    OpcodesBTC[OpcodesBTC[\"OP_PUSHBYTES_28\"] = 28] = \"OP_PUSHBYTES_28\";\n    OpcodesBTC[OpcodesBTC[\"OP_PUSHBYTES_29\"] = 29] = \"OP_PUSHBYTES_29\";\n    OpcodesBTC[OpcodesBTC[\"OP_PUSHBYTES_30\"] = 30] = \"OP_PUSHBYTES_30\";\n    OpcodesBTC[OpcodesBTC[\"OP_PUSHBYTES_31\"] = 31] = \"OP_PUSHBYTES_31\";\n    OpcodesBTC[OpcodesBTC[\"OP_PUSHBYTES_32\"] = 32] = \"OP_PUSHBYTES_32\";\n    OpcodesBTC[OpcodesBTC[\"OP_PUSHBYTES_33\"] = 33] = \"OP_PUSHBYTES_33\";\n    OpcodesBTC[OpcodesBTC[\"OP_PUSHBYTES_34\"] = 34] = \"OP_PUSHBYTES_34\";\n    OpcodesBTC[OpcodesBTC[\"OP_PUSHBYTES_35\"] = 35] = \"OP_PUSHBYTES_35\";\n    OpcodesBTC[OpcodesBTC[\"OP_PUSHBYTES_36\"] = 36] = \"OP_PUSHBYTES_36\";\n    OpcodesBTC[OpcodesBTC[\"OP_PUSHBYTES_37\"] = 37] = \"OP_PUSHBYTES_37\";\n    OpcodesBTC[OpcodesBTC[\"OP_PUSHBYTES_38\"] = 38] = \"OP_PUSHBYTES_38\";\n    OpcodesBTC[OpcodesBTC[\"OP_PUSHBYTES_39\"] = 39] = \"OP_PUSHBYTES_39\";\n    OpcodesBTC[OpcodesBTC[\"OP_PUSHBYTES_40\"] = 40] = \"OP_PUSHBYTES_40\";\n    OpcodesBTC[OpcodesBTC[\"OP_PUSHBYTES_41\"] = 41] = \"OP_PUSHBYTES_41\";\n    OpcodesBTC[OpcodesBTC[\"OP_PUSHBYTES_42\"] = 42] = \"OP_PUSHBYTES_42\";\n    OpcodesBTC[OpcodesBTC[\"OP_PUSHBYTES_43\"] = 43] = \"OP_PUSHBYTES_43\";\n    OpcodesBTC[OpcodesBTC[\"OP_PUSHBYTES_44\"] = 44] = \"OP_PUSHBYTES_44\";\n    OpcodesBTC[OpcodesBTC[\"OP_PUSHBYTES_45\"] = 45] = \"OP_PUSHBYTES_45\";\n    OpcodesBTC[OpcodesBTC[\"OP_PUSHBYTES_46\"] = 46] = \"OP_PUSHBYTES_46\";\n    OpcodesBTC[OpcodesBTC[\"OP_PUSHBYTES_47\"] = 47] = \"OP_PUSHBYTES_47\";\n    OpcodesBTC[OpcodesBTC[\"OP_PUSHBYTES_48\"] = 48] = \"OP_PUSHBYTES_48\";\n    OpcodesBTC[OpcodesBTC[\"OP_PUSHBYTES_49\"] = 49] = \"OP_PUSHBYTES_49\";\n    OpcodesBTC[OpcodesBTC[\"OP_PUSHBYTES_50\"] = 50] = \"OP_PUSHBYTES_50\";\n    OpcodesBTC[OpcodesBTC[\"OP_PUSHBYTES_51\"] = 51] = \"OP_PUSHBYTES_51\";\n    OpcodesBTC[OpcodesBTC[\"OP_PUSHBYTES_52\"] = 52] = \"OP_PUSHBYTES_52\";\n    OpcodesBTC[OpcodesBTC[\"OP_PUSHBYTES_53\"] = 53] = \"OP_PUSHBYTES_53\";\n    OpcodesBTC[OpcodesBTC[\"OP_PUSHBYTES_54\"] = 54] = \"OP_PUSHBYTES_54\";\n    OpcodesBTC[OpcodesBTC[\"OP_PUSHBYTES_55\"] = 55] = \"OP_PUSHBYTES_55\";\n    OpcodesBTC[OpcodesBTC[\"OP_PUSHBYTES_56\"] = 56] = \"OP_PUSHBYTES_56\";\n    OpcodesBTC[OpcodesBTC[\"OP_PUSHBYTES_57\"] = 57] = \"OP_PUSHBYTES_57\";\n    OpcodesBTC[OpcodesBTC[\"OP_PUSHBYTES_58\"] = 58] = \"OP_PUSHBYTES_58\";\n    OpcodesBTC[OpcodesBTC[\"OP_PUSHBYTES_59\"] = 59] = \"OP_PUSHBYTES_59\";\n    OpcodesBTC[OpcodesBTC[\"OP_PUSHBYTES_60\"] = 60] = \"OP_PUSHBYTES_60\";\n    OpcodesBTC[OpcodesBTC[\"OP_PUSHBYTES_61\"] = 61] = \"OP_PUSHBYTES_61\";\n    OpcodesBTC[OpcodesBTC[\"OP_PUSHBYTES_62\"] = 62] = \"OP_PUSHBYTES_62\";\n    OpcodesBTC[OpcodesBTC[\"OP_PUSHBYTES_63\"] = 63] = \"OP_PUSHBYTES_63\";\n    OpcodesBTC[OpcodesBTC[\"OP_PUSHBYTES_64\"] = 64] = \"OP_PUSHBYTES_64\";\n    OpcodesBTC[OpcodesBTC[\"OP_PUSHBYTES_65\"] = 65] = \"OP_PUSHBYTES_65\";\n    OpcodesBTC[OpcodesBTC[\"OP_PUSHBYTES_66\"] = 66] = \"OP_PUSHBYTES_66\";\n    OpcodesBTC[OpcodesBTC[\"OP_PUSHBYTES_67\"] = 67] = \"OP_PUSHBYTES_67\";\n    OpcodesBTC[OpcodesBTC[\"OP_PUSHBYTES_68\"] = 68] = \"OP_PUSHBYTES_68\";\n    OpcodesBTC[OpcodesBTC[\"OP_PUSHBYTES_69\"] = 69] = \"OP_PUSHBYTES_69\";\n    OpcodesBTC[OpcodesBTC[\"OP_PUSHBYTES_70\"] = 70] = \"OP_PUSHBYTES_70\";\n    OpcodesBTC[OpcodesBTC[\"OP_PUSHBYTES_71\"] = 71] = \"OP_PUSHBYTES_71\";\n    OpcodesBTC[OpcodesBTC[\"OP_PUSHBYTES_72\"] = 72] = \"OP_PUSHBYTES_72\";\n    OpcodesBTC[OpcodesBTC[\"OP_PUSHBYTES_73\"] = 73] = \"OP_PUSHBYTES_73\";\n    OpcodesBTC[OpcodesBTC[\"OP_PUSHBYTES_74\"] = 74] = \"OP_PUSHBYTES_74\";\n    OpcodesBTC[OpcodesBTC[\"OP_PUSHBYTES_75\"] = 75] = \"OP_PUSHBYTES_75\";\n    OpcodesBTC[OpcodesBTC[\"OP_PUSHDATA1\"] = 76] = \"OP_PUSHDATA1\";\n    OpcodesBTC[OpcodesBTC[\"OP_PUSHDATA2\"] = 77] = \"OP_PUSHDATA2\";\n    OpcodesBTC[OpcodesBTC[\"OP_PUSHDATA4\"] = 78] = \"OP_PUSHDATA4\";\n    OpcodesBTC[OpcodesBTC[\"OP_1NEGATE\"] = 79] = \"OP_1NEGATE\";\n    OpcodesBTC[OpcodesBTC[\"OP_RESERVED\"] = 80] = \"OP_RESERVED\";\n    OpcodesBTC[OpcodesBTC[\"OP_1\"] = 81] = \"OP_1\";\n    OpcodesBTC[OpcodesBTC[\"OP_2\"] = 82] = \"OP_2\";\n    OpcodesBTC[OpcodesBTC[\"OP_3\"] = 83] = \"OP_3\";\n    OpcodesBTC[OpcodesBTC[\"OP_4\"] = 84] = \"OP_4\";\n    OpcodesBTC[OpcodesBTC[\"OP_5\"] = 85] = \"OP_5\";\n    OpcodesBTC[OpcodesBTC[\"OP_6\"] = 86] = \"OP_6\";\n    OpcodesBTC[OpcodesBTC[\"OP_7\"] = 87] = \"OP_7\";\n    OpcodesBTC[OpcodesBTC[\"OP_8\"] = 88] = \"OP_8\";\n    OpcodesBTC[OpcodesBTC[\"OP_9\"] = 89] = \"OP_9\";\n    OpcodesBTC[OpcodesBTC[\"OP_10\"] = 90] = \"OP_10\";\n    OpcodesBTC[OpcodesBTC[\"OP_11\"] = 91] = \"OP_11\";\n    OpcodesBTC[OpcodesBTC[\"OP_12\"] = 92] = \"OP_12\";\n    OpcodesBTC[OpcodesBTC[\"OP_13\"] = 93] = \"OP_13\";\n    OpcodesBTC[OpcodesBTC[\"OP_14\"] = 94] = \"OP_14\";\n    OpcodesBTC[OpcodesBTC[\"OP_15\"] = 95] = \"OP_15\";\n    OpcodesBTC[OpcodesBTC[\"OP_16\"] = 96] = \"OP_16\";\n    OpcodesBTC[OpcodesBTC[\"OP_NOP\"] = 97] = \"OP_NOP\";\n    OpcodesBTC[OpcodesBTC[\"OP_VER\"] = 98] = \"OP_VER\";\n    OpcodesBTC[OpcodesBTC[\"OP_IF\"] = 99] = \"OP_IF\";\n    OpcodesBTC[OpcodesBTC[\"OP_NOTIF\"] = 100] = \"OP_NOTIF\";\n    OpcodesBTC[OpcodesBTC[\"OP_VERIF\"] = 101] = \"OP_VERIF\";\n    OpcodesBTC[OpcodesBTC[\"OP_VERNOTIF\"] = 102] = \"OP_VERNOTIF\";\n    OpcodesBTC[OpcodesBTC[\"OP_ELSE\"] = 103] = \"OP_ELSE\";\n    OpcodesBTC[OpcodesBTC[\"OP_ENDIF\"] = 104] = \"OP_ENDIF\";\n    OpcodesBTC[OpcodesBTC[\"OP_VERIFY\"] = 105] = \"OP_VERIFY\";\n    OpcodesBTC[OpcodesBTC[\"OP_RETURN\"] = 106] = \"OP_RETURN\";\n    OpcodesBTC[OpcodesBTC[\"OP_TOALTSTACK\"] = 107] = \"OP_TOALTSTACK\";\n    OpcodesBTC[OpcodesBTC[\"OP_FROMALTSTACK\"] = 108] = \"OP_FROMALTSTACK\";\n    OpcodesBTC[OpcodesBTC[\"OP_2DROP\"] = 109] = \"OP_2DROP\";\n    OpcodesBTC[OpcodesBTC[\"OP_2DUP\"] = 110] = \"OP_2DUP\";\n    OpcodesBTC[OpcodesBTC[\"OP_3DUP\"] = 111] = \"OP_3DUP\";\n    OpcodesBTC[OpcodesBTC[\"OP_2OVER\"] = 112] = \"OP_2OVER\";\n    OpcodesBTC[OpcodesBTC[\"OP_2ROT\"] = 113] = \"OP_2ROT\";\n    OpcodesBTC[OpcodesBTC[\"OP_2SWAP\"] = 114] = \"OP_2SWAP\";\n    OpcodesBTC[OpcodesBTC[\"OP_IFDUP\"] = 115] = \"OP_IFDUP\";\n    OpcodesBTC[OpcodesBTC[\"OP_DEPTH\"] = 116] = \"OP_DEPTH\";\n    OpcodesBTC[OpcodesBTC[\"OP_DROP\"] = 117] = \"OP_DROP\";\n    OpcodesBTC[OpcodesBTC[\"OP_DUP\"] = 118] = \"OP_DUP\";\n    OpcodesBTC[OpcodesBTC[\"OP_NIP\"] = 119] = \"OP_NIP\";\n    OpcodesBTC[OpcodesBTC[\"OP_OVER\"] = 120] = \"OP_OVER\";\n    OpcodesBTC[OpcodesBTC[\"OP_PICK\"] = 121] = \"OP_PICK\";\n    OpcodesBTC[OpcodesBTC[\"OP_ROLL\"] = 122] = \"OP_ROLL\";\n    OpcodesBTC[OpcodesBTC[\"OP_ROT\"] = 123] = \"OP_ROT\";\n    OpcodesBTC[OpcodesBTC[\"OP_SWAP\"] = 124] = \"OP_SWAP\";\n    OpcodesBTC[OpcodesBTC[\"OP_TUCK\"] = 125] = \"OP_TUCK\";\n    OpcodesBTC[OpcodesBTC[\"OP_CAT\"] = 126] = \"OP_CAT\";\n    OpcodesBTC[OpcodesBTC[\"OP_SUBSTR\"] = 127] = \"OP_SUBSTR\";\n    OpcodesBTC[OpcodesBTC[\"OP_LEFT\"] = 128] = \"OP_LEFT\";\n    OpcodesBTC[OpcodesBTC[\"OP_RIGHT\"] = 129] = \"OP_RIGHT\";\n    OpcodesBTC[OpcodesBTC[\"OP_SIZE\"] = 130] = \"OP_SIZE\";\n    OpcodesBTC[OpcodesBTC[\"OP_INVERT\"] = 131] = \"OP_INVERT\";\n    OpcodesBTC[OpcodesBTC[\"OP_AND\"] = 132] = \"OP_AND\";\n    OpcodesBTC[OpcodesBTC[\"OP_OR\"] = 133] = \"OP_OR\";\n    OpcodesBTC[OpcodesBTC[\"OP_XOR\"] = 134] = \"OP_XOR\";\n    OpcodesBTC[OpcodesBTC[\"OP_EQUAL\"] = 135] = \"OP_EQUAL\";\n    OpcodesBTC[OpcodesBTC[\"OP_EQUALVERIFY\"] = 136] = \"OP_EQUALVERIFY\";\n    OpcodesBTC[OpcodesBTC[\"OP_RESERVED1\"] = 137] = \"OP_RESERVED1\";\n    OpcodesBTC[OpcodesBTC[\"OP_RESERVED2\"] = 138] = \"OP_RESERVED2\";\n    OpcodesBTC[OpcodesBTC[\"OP_1ADD\"] = 139] = \"OP_1ADD\";\n    OpcodesBTC[OpcodesBTC[\"OP_1SUB\"] = 140] = \"OP_1SUB\";\n    OpcodesBTC[OpcodesBTC[\"OP_2MUL\"] = 141] = \"OP_2MUL\";\n    OpcodesBTC[OpcodesBTC[\"OP_2DIV\"] = 142] = \"OP_2DIV\";\n    OpcodesBTC[OpcodesBTC[\"OP_NEGATE\"] = 143] = \"OP_NEGATE\";\n    OpcodesBTC[OpcodesBTC[\"OP_ABS\"] = 144] = \"OP_ABS\";\n    OpcodesBTC[OpcodesBTC[\"OP_NOT\"] = 145] = \"OP_NOT\";\n    OpcodesBTC[OpcodesBTC[\"OP_0NOTEQUAL\"] = 146] = \"OP_0NOTEQUAL\";\n    OpcodesBTC[OpcodesBTC[\"OP_ADD\"] = 147] = \"OP_ADD\";\n    OpcodesBTC[OpcodesBTC[\"OP_SUB\"] = 148] = \"OP_SUB\";\n    OpcodesBTC[OpcodesBTC[\"OP_MUL\"] = 149] = \"OP_MUL\";\n    OpcodesBTC[OpcodesBTC[\"OP_DIV\"] = 150] = \"OP_DIV\";\n    OpcodesBTC[OpcodesBTC[\"OP_MOD\"] = 151] = \"OP_MOD\";\n    OpcodesBTC[OpcodesBTC[\"OP_LSHIFT\"] = 152] = \"OP_LSHIFT\";\n    OpcodesBTC[OpcodesBTC[\"OP_RSHIFT\"] = 153] = \"OP_RSHIFT\";\n    OpcodesBTC[OpcodesBTC[\"OP_BOOLAND\"] = 154] = \"OP_BOOLAND\";\n    OpcodesBTC[OpcodesBTC[\"OP_BOOLOR\"] = 155] = \"OP_BOOLOR\";\n    OpcodesBTC[OpcodesBTC[\"OP_NUMEQUAL\"] = 156] = \"OP_NUMEQUAL\";\n    OpcodesBTC[OpcodesBTC[\"OP_NUMEQUALVERIFY\"] = 157] = \"OP_NUMEQUALVERIFY\";\n    OpcodesBTC[OpcodesBTC[\"OP_NUMNOTEQUAL\"] = 158] = \"OP_NUMNOTEQUAL\";\n    OpcodesBTC[OpcodesBTC[\"OP_LESSTHAN\"] = 159] = \"OP_LESSTHAN\";\n    OpcodesBTC[OpcodesBTC[\"OP_GREATERTHAN\"] = 160] = \"OP_GREATERTHAN\";\n    OpcodesBTC[OpcodesBTC[\"OP_LESSTHANOREQUAL\"] = 161] = \"OP_LESSTHANOREQUAL\";\n    OpcodesBTC[OpcodesBTC[\"OP_GREATERTHANOREQUAL\"] = 162] = \"OP_GREATERTHANOREQUAL\";\n    OpcodesBTC[OpcodesBTC[\"OP_MIN\"] = 163] = \"OP_MIN\";\n    OpcodesBTC[OpcodesBTC[\"OP_MAX\"] = 164] = \"OP_MAX\";\n    OpcodesBTC[OpcodesBTC[\"OP_WITHIN\"] = 165] = \"OP_WITHIN\";\n    OpcodesBTC[OpcodesBTC[\"OP_RIPEMD160\"] = 166] = \"OP_RIPEMD160\";\n    OpcodesBTC[OpcodesBTC[\"OP_SHA1\"] = 167] = \"OP_SHA1\";\n    OpcodesBTC[OpcodesBTC[\"OP_SHA256\"] = 168] = \"OP_SHA256\";\n    OpcodesBTC[OpcodesBTC[\"OP_HASH160\"] = 169] = \"OP_HASH160\";\n    OpcodesBTC[OpcodesBTC[\"OP_HASH256\"] = 170] = \"OP_HASH256\";\n    OpcodesBTC[OpcodesBTC[\"OP_CODESEPARATOR\"] = 171] = \"OP_CODESEPARATOR\";\n    OpcodesBTC[OpcodesBTC[\"OP_CHECKSIG\"] = 172] = \"OP_CHECKSIG\";\n    OpcodesBTC[OpcodesBTC[\"OP_CHECKSIGVERIFY\"] = 173] = \"OP_CHECKSIGVERIFY\";\n    OpcodesBTC[OpcodesBTC[\"OP_CHECKMULTISIG\"] = 174] = \"OP_CHECKMULTISIG\";\n    OpcodesBTC[OpcodesBTC[\"OP_CHECKMULTISIGVERIFY\"] = 175] = \"OP_CHECKMULTISIGVERIFY\";\n    OpcodesBTC[OpcodesBTC[\"OP_NOP1\"] = 176] = \"OP_NOP1\";\n    OpcodesBTC[OpcodesBTC[\"OP_CHECKLOCKTIMEVERIFY\"] = 177] = \"OP_CHECKLOCKTIMEVERIFY\";\n    OpcodesBTC[OpcodesBTC[\"OP_CHECKSEQUENCEVERIFY\"] = 178] = \"OP_CHECKSEQUENCEVERIFY\";\n    OpcodesBTC[OpcodesBTC[\"OP_NOP4\"] = 179] = \"OP_NOP4\";\n    OpcodesBTC[OpcodesBTC[\"OP_NOP5\"] = 180] = \"OP_NOP5\";\n    OpcodesBTC[OpcodesBTC[\"OP_NOP6\"] = 181] = \"OP_NOP6\";\n    OpcodesBTC[OpcodesBTC[\"OP_NOP7\"] = 182] = \"OP_NOP7\";\n    OpcodesBTC[OpcodesBTC[\"OP_NOP8\"] = 183] = \"OP_NOP8\";\n    OpcodesBTC[OpcodesBTC[\"OP_NOP9\"] = 184] = \"OP_NOP9\";\n    OpcodesBTC[OpcodesBTC[\"OP_NOP10\"] = 185] = \"OP_NOP10\";\n    OpcodesBTC[OpcodesBTC[\"OP_UNKNOWN186\"] = 186] = \"OP_UNKNOWN186\";\n    OpcodesBTC[OpcodesBTC[\"OP_UNKNOWN187\"] = 187] = \"OP_UNKNOWN187\";\n    OpcodesBTC[OpcodesBTC[\"OP_UNKNOWN188\"] = 188] = \"OP_UNKNOWN188\";\n    OpcodesBTC[OpcodesBTC[\"OP_UNKNOWN189\"] = 189] = \"OP_UNKNOWN189\";\n    OpcodesBTC[OpcodesBTC[\"OP_UNKNOWN190\"] = 190] = \"OP_UNKNOWN190\";\n    OpcodesBTC[OpcodesBTC[\"OP_UNKNOWN191\"] = 191] = \"OP_UNKNOWN191\";\n    OpcodesBTC[OpcodesBTC[\"OP_UNKNOWN192\"] = 192] = \"OP_UNKNOWN192\";\n    OpcodesBTC[OpcodesBTC[\"OP_UNKNOWN193\"] = 193] = \"OP_UNKNOWN193\";\n    OpcodesBTC[OpcodesBTC[\"OP_UNKNOWN194\"] = 194] = \"OP_UNKNOWN194\";\n    OpcodesBTC[OpcodesBTC[\"OP_UNKNOWN195\"] = 195] = \"OP_UNKNOWN195\";\n    OpcodesBTC[OpcodesBTC[\"OP_UNKNOWN196\"] = 196] = \"OP_UNKNOWN196\";\n    OpcodesBTC[OpcodesBTC[\"OP_UNKNOWN197\"] = 197] = \"OP_UNKNOWN197\";\n    OpcodesBTC[OpcodesBTC[\"OP_UNKNOWN198\"] = 198] = \"OP_UNKNOWN198\";\n    OpcodesBTC[OpcodesBTC[\"OP_UNKNOWN199\"] = 199] = \"OP_UNKNOWN199\";\n    OpcodesBTC[OpcodesBTC[\"OP_UNKNOWN200\"] = 200] = \"OP_UNKNOWN200\";\n    OpcodesBTC[OpcodesBTC[\"OP_UNKNOWN201\"] = 201] = \"OP_UNKNOWN201\";\n    OpcodesBTC[OpcodesBTC[\"OP_UNKNOWN202\"] = 202] = \"OP_UNKNOWN202\";\n    OpcodesBTC[OpcodesBTC[\"OP_UNKNOWN203\"] = 203] = \"OP_UNKNOWN203\";\n    OpcodesBTC[OpcodesBTC[\"OP_UNKNOWN204\"] = 204] = \"OP_UNKNOWN204\";\n    OpcodesBTC[OpcodesBTC[\"OP_UNKNOWN205\"] = 205] = \"OP_UNKNOWN205\";\n    OpcodesBTC[OpcodesBTC[\"OP_UNKNOWN206\"] = 206] = \"OP_UNKNOWN206\";\n    OpcodesBTC[OpcodesBTC[\"OP_UNKNOWN207\"] = 207] = \"OP_UNKNOWN207\";\n    OpcodesBTC[OpcodesBTC[\"OP_UNKNOWN208\"] = 208] = \"OP_UNKNOWN208\";\n    OpcodesBTC[OpcodesBTC[\"OP_UNKNOWN209\"] = 209] = \"OP_UNKNOWN209\";\n    OpcodesBTC[OpcodesBTC[\"OP_UNKNOWN210\"] = 210] = \"OP_UNKNOWN210\";\n    OpcodesBTC[OpcodesBTC[\"OP_UNKNOWN211\"] = 211] = \"OP_UNKNOWN211\";\n    OpcodesBTC[OpcodesBTC[\"OP_UNKNOWN212\"] = 212] = \"OP_UNKNOWN212\";\n    OpcodesBTC[OpcodesBTC[\"OP_UNKNOWN213\"] = 213] = \"OP_UNKNOWN213\";\n    OpcodesBTC[OpcodesBTC[\"OP_UNKNOWN214\"] = 214] = \"OP_UNKNOWN214\";\n    OpcodesBTC[OpcodesBTC[\"OP_UNKNOWN215\"] = 215] = \"OP_UNKNOWN215\";\n    OpcodesBTC[OpcodesBTC[\"OP_UNKNOWN216\"] = 216] = \"OP_UNKNOWN216\";\n    OpcodesBTC[OpcodesBTC[\"OP_UNKNOWN217\"] = 217] = \"OP_UNKNOWN217\";\n    OpcodesBTC[OpcodesBTC[\"OP_UNKNOWN218\"] = 218] = \"OP_UNKNOWN218\";\n    OpcodesBTC[OpcodesBTC[\"OP_UNKNOWN219\"] = 219] = \"OP_UNKNOWN219\";\n    OpcodesBTC[OpcodesBTC[\"OP_UNKNOWN220\"] = 220] = \"OP_UNKNOWN220\";\n    OpcodesBTC[OpcodesBTC[\"OP_UNKNOWN221\"] = 221] = \"OP_UNKNOWN221\";\n    OpcodesBTC[OpcodesBTC[\"OP_UNKNOWN222\"] = 222] = \"OP_UNKNOWN222\";\n    OpcodesBTC[OpcodesBTC[\"OP_UNKNOWN223\"] = 223] = \"OP_UNKNOWN223\";\n    OpcodesBTC[OpcodesBTC[\"OP_UNKNOWN224\"] = 224] = \"OP_UNKNOWN224\";\n    OpcodesBTC[OpcodesBTC[\"OP_UNKNOWN225\"] = 225] = \"OP_UNKNOWN225\";\n    OpcodesBTC[OpcodesBTC[\"OP_UNKNOWN226\"] = 226] = \"OP_UNKNOWN226\";\n    OpcodesBTC[OpcodesBTC[\"OP_UNKNOWN227\"] = 227] = \"OP_UNKNOWN227\";\n    OpcodesBTC[OpcodesBTC[\"OP_UNKNOWN228\"] = 228] = \"OP_UNKNOWN228\";\n    OpcodesBTC[OpcodesBTC[\"OP_UNKNOWN229\"] = 229] = \"OP_UNKNOWN229\";\n    OpcodesBTC[OpcodesBTC[\"OP_UNKNOWN230\"] = 230] = \"OP_UNKNOWN230\";\n    OpcodesBTC[OpcodesBTC[\"OP_UNKNOWN231\"] = 231] = \"OP_UNKNOWN231\";\n    OpcodesBTC[OpcodesBTC[\"OP_UNKNOWN232\"] = 232] = \"OP_UNKNOWN232\";\n    OpcodesBTC[OpcodesBTC[\"OP_UNKNOWN233\"] = 233] = \"OP_UNKNOWN233\";\n    OpcodesBTC[OpcodesBTC[\"OP_UNKNOWN234\"] = 234] = \"OP_UNKNOWN234\";\n    OpcodesBTC[OpcodesBTC[\"OP_UNKNOWN235\"] = 235] = \"OP_UNKNOWN235\";\n    OpcodesBTC[OpcodesBTC[\"OP_UNKNOWN236\"] = 236] = \"OP_UNKNOWN236\";\n    OpcodesBTC[OpcodesBTC[\"OP_UNKNOWN237\"] = 237] = \"OP_UNKNOWN237\";\n    OpcodesBTC[OpcodesBTC[\"OP_UNKNOWN238\"] = 238] = \"OP_UNKNOWN238\";\n    OpcodesBTC[OpcodesBTC[\"OP_UNKNOWN239\"] = 239] = \"OP_UNKNOWN239\";\n    OpcodesBTC[OpcodesBTC[\"OP_UNKNOWN240\"] = 240] = \"OP_UNKNOWN240\";\n    OpcodesBTC[OpcodesBTC[\"OP_UNKNOWN241\"] = 241] = \"OP_UNKNOWN241\";\n    OpcodesBTC[OpcodesBTC[\"OP_UNKNOWN242\"] = 242] = \"OP_UNKNOWN242\";\n    OpcodesBTC[OpcodesBTC[\"OP_UNKNOWN243\"] = 243] = \"OP_UNKNOWN243\";\n    OpcodesBTC[OpcodesBTC[\"OP_UNKNOWN244\"] = 244] = \"OP_UNKNOWN244\";\n    OpcodesBTC[OpcodesBTC[\"OP_UNKNOWN245\"] = 245] = \"OP_UNKNOWN245\";\n    OpcodesBTC[OpcodesBTC[\"OP_UNKNOWN246\"] = 246] = \"OP_UNKNOWN246\";\n    OpcodesBTC[OpcodesBTC[\"OP_UNKNOWN247\"] = 247] = \"OP_UNKNOWN247\";\n    OpcodesBTC[OpcodesBTC[\"OP_UNKNOWN248\"] = 248] = \"OP_UNKNOWN248\";\n    OpcodesBTC[OpcodesBTC[\"OP_UNKNOWN249\"] = 249] = \"OP_UNKNOWN249\";\n    /**\n     * Used internally in the C++ implementation.\n     */\n    OpcodesBTC[OpcodesBTC[\"OP_SMALLINTEGER\"] = 250] = \"OP_SMALLINTEGER\";\n    /**\n     * Used internally in the C++ implementation.\n     */\n    OpcodesBTC[OpcodesBTC[\"OP_PUBKEYS\"] = 251] = \"OP_PUBKEYS\";\n    OpcodesBTC[OpcodesBTC[\"OP_UNKNOWN252\"] = 252] = \"OP_UNKNOWN252\";\n    /**\n     * Used internally in the C++ implementation.\n     */\n    OpcodesBTC[OpcodesBTC[\"OP_PUBKEYHASH\"] = 253] = \"OP_PUBKEYHASH\";\n    /**\n     * Used internally in the C++ implementation.\n     */\n    OpcodesBTC[OpcodesBTC[\"OP_PUBKEY\"] = 254] = \"OP_PUBKEY\";\n    /**\n     * Used internally in the C++ implementation.\n     */\n    OpcodesBTC[OpcodesBTC[\"OP_INVALIDOPCODE\"] = 255] = \"OP_INVALIDOPCODE\";\n})(OpcodesBTC || (OpcodesBTC = {}));\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnRjLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vc3JjL2xpYi9hdXRoL2luc3RydWN0aW9uLXNldHMvYnRjL2J0Yy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFVQSxNQUFNLENBQU4sSUFBWSxVQWdSWDtBQWhSRCxXQUFZLFVBQVU7SUFDcEIsMkNBQVcsQ0FBQTtJQUNYLCtEQUFxQixDQUFBO0lBQ3JCLCtEQUFxQixDQUFBO0lBQ3JCLCtEQUFxQixDQUFBO0lBQ3JCLCtEQUFxQixDQUFBO0lBQ3JCLCtEQUFxQixDQUFBO0lBQ3JCLCtEQUFxQixDQUFBO0lBQ3JCLCtEQUFxQixDQUFBO0lBQ3JCLCtEQUFxQixDQUFBO0lBQ3JCLCtEQUFxQixDQUFBO0lBQ3JCLGtFQUFzQixDQUFBO0lBQ3RCLGtFQUFzQixDQUFBO0lBQ3RCLGtFQUFzQixDQUFBO0lBQ3RCLGtFQUFzQixDQUFBO0lBQ3RCLGtFQUFzQixDQUFBO0lBQ3RCLGtFQUFzQixDQUFBO0lBQ3RCLGtFQUFzQixDQUFBO0lBQ3RCLGtFQUFzQixDQUFBO0lBQ3RCLGtFQUFzQixDQUFBO0lBQ3RCLGtFQUFzQixDQUFBO0lBQ3RCLGtFQUFzQixDQUFBO0lBQ3RCLGtFQUFzQixDQUFBO0lBQ3RCLGtFQUFzQixDQUFBO0lBQ3RCLGtFQUFzQixDQUFBO0lBQ3RCLGtFQUFzQixDQUFBO0lBQ3RCLGtFQUFzQixDQUFBO0lBQ3RCLGtFQUFzQixDQUFBO0lBQ3RCLGtFQUFzQixDQUFBO0lBQ3RCLGtFQUFzQixDQUFBO0lBQ3RCLGtFQUFzQixDQUFBO0lBQ3RCLGtFQUFzQixDQUFBO0lBQ3RCLGtFQUFzQixDQUFBO0lBQ3RCLGtFQUFzQixDQUFBO0lBQ3RCLGtFQUFzQixDQUFBO0lBQ3RCLGtFQUFzQixDQUFBO0lBQ3RCLGtFQUFzQixDQUFBO0lBQ3RCLGtFQUFzQixDQUFBO0lBQ3RCLGtFQUFzQixDQUFBO0lBQ3RCLGtFQUFzQixDQUFBO0lBQ3RCLGtFQUFzQixDQUFBO0lBQ3RCLGtFQUFzQixDQUFBO0lBQ3RCLGtFQUFzQixDQUFBO0lBQ3RCLGtFQUFzQixDQUFBO0lBQ3RCLGtFQUFzQixDQUFBO0lBQ3RCLGtFQUFzQixDQUFBO0lBQ3RCLGtFQUFzQixDQUFBO0lBQ3RCLGtFQUFzQixDQUFBO0lBQ3RCLGtFQUFzQixDQUFBO0lBQ3RCLGtFQUFzQixDQUFBO0lBQ3RCLGtFQUFzQixDQUFBO0lBQ3RCLGtFQUFzQixDQUFBO0lBQ3RCLGtFQUFzQixDQUFBO0lBQ3RCLGtFQUFzQixDQUFBO0lBQ3RCLGtFQUFzQixDQUFBO0lBQ3RCLGtFQUFzQixDQUFBO0lBQ3RCLGtFQUFzQixDQUFBO0lBQ3RCLGtFQUFzQixDQUFBO0lBQ3RCLGtFQUFzQixDQUFBO0lBQ3RCLGtFQUFzQixDQUFBO0lBQ3RCLGtFQUFzQixDQUFBO0lBQ3RCLGtFQUFzQixDQUFBO0lBQ3RCLGtFQUFzQixDQUFBO0lBQ3RCLGtFQUFzQixDQUFBO0lBQ3RCLGtFQUFzQixDQUFBO0lBQ3RCLGtFQUFzQixDQUFBO0lBQ3RCLGtFQUFzQixDQUFBO0lBQ3RCLGtFQUFzQixDQUFBO0lBQ3RCLGtFQUFzQixDQUFBO0lBQ3RCLGtFQUFzQixDQUFBO0lBQ3RCLGtFQUFzQixDQUFBO0lBQ3RCLGtFQUFzQixDQUFBO0lBQ3RCLGtFQUFzQixDQUFBO0lBQ3RCLGtFQUFzQixDQUFBO0lBQ3RCLGtFQUFzQixDQUFBO0lBQ3RCLGtFQUFzQixDQUFBO0lBQ3RCLGtFQUFzQixDQUFBO0lBQ3RCLDREQUFtQixDQUFBO0lBQ25CLDREQUFtQixDQUFBO0lBQ25CLDREQUFtQixDQUFBO0lBQ25CLHdEQUFpQixDQUFBO0lBQ2pCLDBEQUFrQixDQUFBO0lBQ2xCLDRDQUFXLENBQUE7SUFDWCw0Q0FBVyxDQUFBO0lBQ1gsNENBQVcsQ0FBQTtJQUNYLDRDQUFXLENBQUE7SUFDWCw0Q0FBVyxDQUFBO0lBQ1gsNENBQVcsQ0FBQTtJQUNYLDRDQUFXLENBQUE7SUFDWCw0Q0FBVyxDQUFBO0lBQ1gsNENBQVcsQ0FBQTtJQUNYLDhDQUFZLENBQUE7SUFDWiw4Q0FBWSxDQUFBO0lBQ1osOENBQVksQ0FBQTtJQUNaLDhDQUFZLENBQUE7SUFDWiw4Q0FBWSxDQUFBO0lBQ1osOENBQVksQ0FBQTtJQUNaLDhDQUFZLENBQUE7SUFDWixnREFBYSxDQUFBO0lBQ2IsZ0RBQWEsQ0FBQTtJQUNiLDhDQUFZLENBQUE7SUFDWixxREFBZSxDQUFBO0lBQ2YscURBQWUsQ0FBQTtJQUNmLDJEQUFrQixDQUFBO0lBQ2xCLG1EQUFjLENBQUE7SUFDZCxxREFBZSxDQUFBO0lBQ2YsdURBQWdCLENBQUE7SUFDaEIsdURBQWdCLENBQUE7SUFDaEIsK0RBQW9CLENBQUE7SUFDcEIsbUVBQXNCLENBQUE7SUFDdEIscURBQWUsQ0FBQTtJQUNmLG1EQUFjLENBQUE7SUFDZCxtREFBYyxDQUFBO0lBQ2QscURBQWUsQ0FBQTtJQUNmLG1EQUFjLENBQUE7SUFDZCxxREFBZSxDQUFBO0lBQ2YscURBQWUsQ0FBQTtJQUNmLHFEQUFlLENBQUE7SUFDZixtREFBYyxDQUFBO0lBQ2QsaURBQWEsQ0FBQTtJQUNiLGlEQUFhLENBQUE7SUFDYixtREFBYyxDQUFBO0lBQ2QsbURBQWMsQ0FBQTtJQUNkLG1EQUFjLENBQUE7SUFDZCxpREFBYSxDQUFBO0lBQ2IsbURBQWMsQ0FBQTtJQUNkLG1EQUFjLENBQUE7SUFDZCxpREFBYSxDQUFBO0lBQ2IsdURBQWdCLENBQUE7SUFDaEIsbURBQWMsQ0FBQTtJQUNkLHFEQUFlLENBQUE7SUFDZixtREFBYyxDQUFBO0lBQ2QsdURBQWdCLENBQUE7SUFDaEIsaURBQWEsQ0FBQTtJQUNiLCtDQUFZLENBQUE7SUFDWixpREFBYSxDQUFBO0lBQ2IscURBQWUsQ0FBQTtJQUNmLGlFQUFxQixDQUFBO0lBQ3JCLDZEQUFtQixDQUFBO0lBQ25CLDZEQUFtQixDQUFBO0lBQ25CLG1EQUFjLENBQUE7SUFDZCxtREFBYyxDQUFBO0lBQ2QsbURBQWMsQ0FBQTtJQUNkLG1EQUFjLENBQUE7SUFDZCx1REFBZ0IsQ0FBQTtJQUNoQixpREFBYSxDQUFBO0lBQ2IsaURBQWEsQ0FBQTtJQUNiLDZEQUFtQixDQUFBO0lBQ25CLGlEQUFhLENBQUE7SUFDYixpREFBYSxDQUFBO0lBQ2IsaURBQWEsQ0FBQTtJQUNiLGlEQUFhLENBQUE7SUFDYixpREFBYSxDQUFBO0lBQ2IsdURBQWdCLENBQUE7SUFDaEIsdURBQWdCLENBQUE7SUFDaEIseURBQWlCLENBQUE7SUFDakIsdURBQWdCLENBQUE7SUFDaEIsMkRBQWtCLENBQUE7SUFDbEIsdUVBQXdCLENBQUE7SUFDeEIsaUVBQXFCLENBQUE7SUFDckIsMkRBQWtCLENBQUE7SUFDbEIsaUVBQXFCLENBQUE7SUFDckIseUVBQXlCLENBQUE7SUFDekIsK0VBQTRCLENBQUE7SUFDNUIsaURBQWEsQ0FBQTtJQUNiLGlEQUFhLENBQUE7SUFDYix1REFBZ0IsQ0FBQTtJQUNoQiw2REFBbUIsQ0FBQTtJQUNuQixtREFBYyxDQUFBO0lBQ2QsdURBQWdCLENBQUE7SUFDaEIseURBQWlCLENBQUE7SUFDakIseURBQWlCLENBQUE7SUFDakIscUVBQXVCLENBQUE7SUFDdkIsMkRBQWtCLENBQUE7SUFDbEIsdUVBQXdCLENBQUE7SUFDeEIscUVBQXVCLENBQUE7SUFDdkIsaUZBQTZCLENBQUE7SUFDN0IsbURBQWMsQ0FBQTtJQUNkLGlGQUE2QixDQUFBO0lBQzdCLGlGQUE2QixDQUFBO0lBQzdCLG1EQUFjLENBQUE7SUFDZCxtREFBYyxDQUFBO0lBQ2QsbURBQWMsQ0FBQTtJQUNkLG1EQUFjLENBQUE7SUFDZCxtREFBYyxDQUFBO0lBQ2QsbURBQWMsQ0FBQTtJQUNkLHFEQUFlLENBQUE7SUFDZiwrREFBb0IsQ0FBQTtJQUNwQiwrREFBb0IsQ0FBQTtJQUNwQiwrREFBb0IsQ0FBQTtJQUNwQiwrREFBb0IsQ0FBQTtJQUNwQiwrREFBb0IsQ0FBQTtJQUNwQiwrREFBb0IsQ0FBQTtJQUNwQiwrREFBb0IsQ0FBQTtJQUNwQiwrREFBb0IsQ0FBQTtJQUNwQiwrREFBb0IsQ0FBQTtJQUNwQiwrREFBb0IsQ0FBQTtJQUNwQiwrREFBb0IsQ0FBQTtJQUNwQiwrREFBb0IsQ0FBQTtJQUNwQiwrREFBb0IsQ0FBQTtJQUNwQiwrREFBb0IsQ0FBQTtJQUNwQiwrREFBb0IsQ0FBQTtJQUNwQiwrREFBb0IsQ0FBQTtJQUNwQiwrREFBb0IsQ0FBQTtJQUNwQiwrREFBb0IsQ0FBQTtJQUNwQiwrREFBb0IsQ0FBQTtJQUNwQiwrREFBb0IsQ0FBQTtJQUNwQiwrREFBb0IsQ0FBQTtJQUNwQiwrREFBb0IsQ0FBQTtJQUNwQiwrREFBb0IsQ0FBQTtJQUNwQiwrREFBb0IsQ0FBQTtJQUNwQiwrREFBb0IsQ0FBQTtJQUNwQiwrREFBb0IsQ0FBQTtJQUNwQiwrREFBb0IsQ0FBQTtJQUNwQiwrREFBb0IsQ0FBQTtJQUNwQiwrREFBb0IsQ0FBQTtJQUNwQiwrREFBb0IsQ0FBQTtJQUNwQiwrREFBb0IsQ0FBQTtJQUNwQiwrREFBb0IsQ0FBQTtJQUNwQiwrREFBb0IsQ0FBQTtJQUNwQiwrREFBb0IsQ0FBQTtJQUNwQiwrREFBb0IsQ0FBQTtJQUNwQiwrREFBb0IsQ0FBQTtJQUNwQiwrREFBb0IsQ0FBQTtJQUNwQiwrREFBb0IsQ0FBQTtJQUNwQiwrREFBb0IsQ0FBQTtJQUNwQiwrREFBb0IsQ0FBQTtJQUNwQiwrREFBb0IsQ0FBQTtJQUNwQiwrREFBb0IsQ0FBQTtJQUNwQiwrREFBb0IsQ0FBQTtJQUNwQiwrREFBb0IsQ0FBQTtJQUNwQiwrREFBb0IsQ0FBQTtJQUNwQiwrREFBb0IsQ0FBQTtJQUNwQiwrREFBb0IsQ0FBQTtJQUNwQiwrREFBb0IsQ0FBQTtJQUNwQiwrREFBb0IsQ0FBQTtJQUNwQiwrREFBb0IsQ0FBQTtJQUNwQiwrREFBb0IsQ0FBQTtJQUNwQiwrREFBb0IsQ0FBQTtJQUNwQiwrREFBb0IsQ0FBQTtJQUNwQiwrREFBb0IsQ0FBQTtJQUNwQiwrREFBb0IsQ0FBQTtJQUNwQiwrREFBb0IsQ0FBQTtJQUNwQiwrREFBb0IsQ0FBQTtJQUNwQiwrREFBb0IsQ0FBQTtJQUNwQiwrREFBb0IsQ0FBQTtJQUNwQiwrREFBb0IsQ0FBQTtJQUNwQiwrREFBb0IsQ0FBQTtJQUNwQiwrREFBb0IsQ0FBQTtJQUNwQiwrREFBb0IsQ0FBQTtJQUNwQiwrREFBb0IsQ0FBQTtJQUNwQjs7T0FFRztJQUNILG1FQUFzQixDQUFBO0lBQ3RCOztPQUVHO0lBQ0gseURBQWlCLENBQUE7SUFDakIsK0RBQW9CLENBQUE7SUFDcEI7O09BRUc7SUFDSCwrREFBb0IsQ0FBQTtJQUNwQjs7T0FFRztJQUNILHVEQUFnQixDQUFBO0lBQ2hCOztPQUVHO0lBQ0gscUVBQXVCLENBQUE7QUFDekIsQ0FBQyxFQWhSVyxVQUFVLEtBQVYsVUFBVSxRQWdSckIifQ==","import { combineOperations, pushToStack, useOneScriptNumber, useThreeScriptNumbers, useTwoScriptNumbers } from './combinators';\nimport { opVerify } from './flow-control';\nimport { OpcodesCommon } from './opcodes';\nimport { bigIntToScriptNumber, booleanToScriptNumber } from './types';\nexport const op1Add = (flags) => (state) => useOneScriptNumber(state, (nextState, value) => \n// tslint:disable-next-line: restrict-plus-operands\npushToStack(nextState, bigIntToScriptNumber(value + BigInt(1))), flags.requireMinimalEncoding);\nexport const op1Sub = (flags) => (state) => useOneScriptNumber(state, (nextState, value) => pushToStack(nextState, bigIntToScriptNumber(value - BigInt(1))), flags.requireMinimalEncoding);\nexport const opNegate = (flags) => (state) => useOneScriptNumber(state, (nextState, value) => pushToStack(nextState, bigIntToScriptNumber(-value)), flags.requireMinimalEncoding);\nexport const opAbs = (flags) => (state) => useOneScriptNumber(state, (nextState, value) => pushToStack(nextState, bigIntToScriptNumber(value < 0 ? -value : value)), flags.requireMinimalEncoding);\nexport const opNot = (flags) => (state) => useOneScriptNumber(state, (nextState, value) => pushToStack(nextState, value === BigInt(0)\n    ? bigIntToScriptNumber(BigInt(1))\n    : bigIntToScriptNumber(BigInt(0))), flags.requireMinimalEncoding);\nexport const op0NotEqual = (flags) => (state) => useOneScriptNumber(state, (nextState, value) => pushToStack(nextState, value !== BigInt(0)\n    ? bigIntToScriptNumber(BigInt(1))\n    : bigIntToScriptNumber(BigInt(0))), flags.requireMinimalEncoding);\nexport const opAdd = (flags) => (state) => useTwoScriptNumbers(state, (nextState, firstValue, secondValue) => \n// tslint:disable-next-line: restrict-plus-operands\npushToStack(nextState, bigIntToScriptNumber(firstValue + secondValue)), flags.requireMinimalEncoding);\nexport const opSub = (flags) => (state) => useTwoScriptNumbers(state, (nextState, firstValue, secondValue) => pushToStack(nextState, bigIntToScriptNumber(firstValue - secondValue)), flags.requireMinimalEncoding);\nexport const opBoolAnd = (flags) => (state) => useTwoScriptNumbers(state, (nextState, firstValue, secondValue) => pushToStack(nextState, booleanToScriptNumber(firstValue !== BigInt(0) && secondValue !== BigInt(0))), flags.requireMinimalEncoding);\nexport const opBoolOr = (flags) => (state) => useTwoScriptNumbers(state, (nextState, firstValue, secondValue) => pushToStack(nextState, booleanToScriptNumber(firstValue !== BigInt(0) || secondValue !== BigInt(0))), flags.requireMinimalEncoding);\nexport const opNumEqual = (flags) => (state) => useTwoScriptNumbers(state, (nextState, firstValue, secondValue) => pushToStack(nextState, booleanToScriptNumber(firstValue === secondValue)), flags.requireMinimalEncoding);\nexport const opNumEqualVerify = (flags) => combineOperations(opNumEqual(flags), opVerify());\nexport const opNumNotEqual = (flags) => (state) => useTwoScriptNumbers(state, (nextState, firstValue, secondValue) => pushToStack(nextState, booleanToScriptNumber(firstValue !== secondValue)), flags.requireMinimalEncoding);\nexport const opLessThan = (flags) => (state) => useTwoScriptNumbers(state, (nextState, firstValue, secondValue) => pushToStack(nextState, booleanToScriptNumber(firstValue < secondValue)), flags.requireMinimalEncoding);\nexport const opLessThanOrEqual = (flags) => (state) => useTwoScriptNumbers(state, (nextState, firstValue, secondValue) => pushToStack(nextState, booleanToScriptNumber(firstValue <= secondValue)), flags.requireMinimalEncoding);\nexport const opGreaterThan = (flags) => (state) => useTwoScriptNumbers(state, (nextState, firstValue, secondValue) => pushToStack(nextState, booleanToScriptNumber(firstValue > secondValue)), flags.requireMinimalEncoding);\nexport const opGreaterThanOrEqual = (flags) => (state) => useTwoScriptNumbers(state, (nextState, firstValue, secondValue) => pushToStack(nextState, booleanToScriptNumber(firstValue >= secondValue)), flags.requireMinimalEncoding);\nexport const opMin = (flags) => (state) => useTwoScriptNumbers(state, (nextState, firstValue, secondValue) => pushToStack(nextState, bigIntToScriptNumber(firstValue < secondValue ? firstValue : secondValue)), flags.requireMinimalEncoding);\nexport const opMax = (flags) => (state) => useTwoScriptNumbers(state, (nextState, firstValue, secondValue) => pushToStack(nextState, bigIntToScriptNumber(firstValue > secondValue ? firstValue : secondValue)), flags.requireMinimalEncoding);\nexport const opWithin = (flags) => (state) => useThreeScriptNumbers(state, (nextState, firstValue, secondValue, thirdValue) => pushToStack(nextState, booleanToScriptNumber(secondValue <= firstValue && firstValue < thirdValue)), flags.requireMinimalEncoding);\nexport const arithmeticOperations = (flags) => ({\n    [OpcodesCommon.OP_1ADD]: op1Add(flags),\n    [OpcodesCommon.OP_1SUB]: op1Sub(flags),\n    [OpcodesCommon.OP_NEGATE]: opNegate(flags),\n    [OpcodesCommon.OP_ABS]: opAbs(flags),\n    [OpcodesCommon.OP_NOT]: opNot(flags),\n    [OpcodesCommon.OP_0NOTEQUAL]: op0NotEqual(flags),\n    [OpcodesCommon.OP_ADD]: opAdd(flags),\n    [OpcodesCommon.OP_SUB]: opSub(flags),\n    [OpcodesCommon.OP_BOOLAND]: opBoolAnd(flags),\n    [OpcodesCommon.OP_BOOLOR]: opBoolOr(flags),\n    [OpcodesCommon.OP_NUMEQUAL]: opNumEqual(flags),\n    [OpcodesCommon.OP_NUMEQUALVERIFY]: opNumEqualVerify(flags),\n    [OpcodesCommon.OP_NUMNOTEQUAL]: opNumNotEqual(flags),\n    [OpcodesCommon.OP_LESSTHAN]: opLessThan(flags),\n    [OpcodesCommon.OP_LESSTHANOREQUAL]: opLessThanOrEqual(flags),\n    [OpcodesCommon.OP_GREATERTHAN]: opGreaterThan(flags),\n    [OpcodesCommon.OP_GREATERTHANOREQUAL]: opGreaterThanOrEqual(flags),\n    [OpcodesCommon.OP_MIN]: opMin(flags),\n    [OpcodesCommon.OP_MAX]: opMax(flags),\n    [OpcodesCommon.OP_WITHIN]: opWithin(flags)\n});\n//# sourceMappingURL=data:application/json;base64,","import { combineOperations, pushToStack, useTwoStackItems } from './combinators';\nimport { opVerify } from './flow-control';\nimport { OpcodesCommon } from './opcodes';\nimport { booleanToScriptNumber } from './types';\nconst areEqual = (a, b) => {\n    // tslint:disable-next-line:no-if-statement\n    if (a.length !== b.length) {\n        return false;\n    }\n    // tslint:disable-next-line:no-let\n    for (let i = 0; i < a.length; i++) {\n        // tslint:disable-next-line:no-if-statement\n        if (a[i] !== b[i]) {\n            return false;\n        }\n    }\n    return true;\n};\nexport const opEqual = () => (state) => useTwoStackItems(state, (nextState, element1, element2) => pushToStack(nextState, booleanToScriptNumber(areEqual(element1, element2))));\nexport const opEqualVerify = () => combineOperations(opEqual(), opVerify());\nexport const bitwiseOperations = () => ({\n    [OpcodesCommon.OP_EQUAL]: opEqual(),\n    [OpcodesCommon.OP_EQUALVERIFY]: opEqualVerify()\n});\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYml0d2lzZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3NyYy9saWIvYXV0aC9pbnN0cnVjdGlvbi1zZXRzL2NvbW1vbi9iaXR3aXNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQU9BLE9BQU8sRUFDTCxpQkFBaUIsRUFDakIsV0FBVyxFQUNYLGdCQUFnQixFQUNqQixNQUFNLGVBQWUsQ0FBQztBQUN2QixPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFDMUMsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLFdBQVcsQ0FBQztBQUMxQyxPQUFPLEVBQUUscUJBQXFCLEVBQUUsTUFBTSxTQUFTLENBQUM7QUFFaEQsTUFBTSxRQUFRLEdBQUcsQ0FBQyxDQUFhLEVBQUUsQ0FBYSxFQUFFLEVBQUU7SUFDaEQsMkNBQTJDO0lBQzNDLElBQUksQ0FBQyxDQUFDLE1BQU0sS0FBSyxDQUFDLENBQUMsTUFBTSxFQUFFO1FBQ3pCLE9BQU8sS0FBSyxDQUFDO0tBQ2Q7SUFDRCxrQ0FBa0M7SUFDbEMsS0FBSyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLENBQUMsQ0FBQyxNQUFNLEVBQUUsQ0FBQyxFQUFFLEVBQUU7UUFDakMsMkNBQTJDO1FBQzNDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBRTtZQUNqQixPQUFPLEtBQUssQ0FBQztTQUNkO0tBQ0Y7SUFDRCxPQUFPLElBQUksQ0FBQztBQUNkLENBQUMsQ0FBQztBQUVGLE1BQU0sQ0FBQyxNQUFNLE9BQU8sR0FBRyxHQUdELEVBQUUsQ0FBQyxDQUFDLEtBQVksRUFBRSxFQUFFLENBQ3hDLGdCQUFnQixDQUFDLEtBQUssRUFBRSxDQUFDLFNBQVMsRUFBRSxRQUFRLEVBQUUsUUFBUSxFQUFFLEVBQUUsQ0FDeEQsV0FBVyxDQUFDLFNBQVMsRUFBRSxxQkFBcUIsQ0FBQyxRQUFRLENBQUMsUUFBUSxFQUFFLFFBQVEsQ0FBQyxDQUFDLENBQUMsQ0FDNUUsQ0FBQztBQUVKLE1BQU0sQ0FBQyxNQUFNLGFBQWEsR0FBRyxHQUdQLEVBQUUsQ0FDdEIsaUJBQWlCLENBQUMsT0FBTyxFQUFpQixFQUFFLFFBQVEsRUFBaUIsQ0FBQyxDQUFDO0FBRXpFLE1BQU0sQ0FBQyxNQUFNLGlCQUFpQixHQUFHLEdBSTdCLEVBQUUsQ0FBQyxDQUFDO0lBQ04sQ0FBQyxhQUFhLENBQUMsUUFBUSxDQUFDLEVBQUUsT0FBTyxFQUFpQjtJQUNsRCxDQUFDLGFBQWEsQ0FBQyxjQUFjLENBQUMsRUFBRSxhQUFhLEVBQWlCO0NBQy9ELENBQUMsQ0FBQyJ9","import { isScriptNumberError, parseBytesAsScriptNumber } from './common';\nimport { applyError, AuthenticationErrorCommon } from './errors';\nexport const incrementOperationCount = (operation) => (state) => {\n    const nextState = operation(state);\n    // tslint:disable-next-line:no-object-mutation no-expression-statement\n    nextState.operationCount += 1;\n    return nextState;\n};\nexport const conditionallyEvaluate = (operation) => (state) => state.executionStack.every(item => item) ? operation(state) : state;\n/**\n * Map a function over each operation in an `InstructionSet.operations` object,\n * assigning the result to the same `opcode` in the resulting object.\n * @param operations an operations map from an `InstructionSet`\n * @param combinator a function to apply to each operation\n */\nexport const mapOverOperations = (operations, ...combinators) => Object.keys(operations).reduce((result, operation) => ({\n    ...result,\n    [operation]: combinators.reduce((op, combinator) => combinator(op), operations[parseInt(operation, 10)])\n}), {});\n/**\n * Pop one stack item off of `state.stack` and provide that item to `operation`.\n */\nexport const useOneStackItem = (state, operation) => {\n    const item = state.stack.pop();\n    // tslint:disable-next-line:no-if-statement\n    if (!item) {\n        return applyError(AuthenticationErrorCommon.emptyStack, state);\n    }\n    return operation(state, item);\n};\nexport const useTwoStackItems = (state, operation) => useOneStackItem(state, (nextState, valueTwo) => useOneStackItem(nextState, (lastState, valueTop) => operation(lastState, valueTop, valueTwo)));\nexport const useThreeStackItems = (state, operation) => useOneStackItem(state, (nextState, valueThree) => useTwoStackItems(nextState, (lastState, valueTop, valueTwo) => operation(lastState, valueTop, valueTwo, valueThree)));\nexport const useFourStackItems = (state, operation) => useTwoStackItems(state, (nextState, valueThree, valueFour) => useTwoStackItems(nextState, (lastState, valueTop, valueTwo) => operation(lastState, valueTop, valueTwo, valueThree, valueFour)));\nexport const useSixStackItems = (state, operation) => useFourStackItems(state, (nextState, valueThree, valueFour, valueFive, valueSix) => useTwoStackItems(nextState, (lastState, valueTop, valueTwo) => operation(lastState, valueTop, valueTwo, valueThree, valueFour, valueFive, valueSix)));\nexport const useOneScriptNumber = (state, operation, requireMinimalEncoding, maximumScriptNumberByteLength = 4) => useOneStackItem(state, (nextState, item) => {\n    const value = parseBytesAsScriptNumber(item, requireMinimalEncoding, maximumScriptNumberByteLength);\n    // tslint:disable-next-line: no-if-statement\n    if (isScriptNumberError(value)) {\n        return applyError(AuthenticationErrorCommon.invalidScriptNumber, state);\n    }\n    return operation(nextState, value);\n});\nexport const useTwoScriptNumbers = (state, operation, requireMinimalEncoding, maximumScriptNumberByteLength = 4) => useOneScriptNumber(state, (nextState, secondValue) => useOneScriptNumber(nextState, (lastState, firstValue) => operation(lastState, firstValue, secondValue), requireMinimalEncoding, maximumScriptNumberByteLength), requireMinimalEncoding, maximumScriptNumberByteLength);\nexport const useThreeScriptNumbers = (state, operation, requireMinimalEncoding, maximumScriptNumberByteLength = 4) => useTwoScriptNumbers(state, (nextState, secondValue, thirdValue) => useOneScriptNumber(nextState, (lastState, firstValue) => operation(lastState, firstValue, secondValue, thirdValue), requireMinimalEncoding, maximumScriptNumberByteLength), requireMinimalEncoding, maximumScriptNumberByteLength);\n/**\n * Return the provided state with the provided value pushed to its stack.\n * @param state the state to update and return\n * @param data the value to push to the stack\n */\nexport const pushToStack = (state, ...data) => {\n    // tslint:disable-next-line:no-expression-statement\n    state.stack.push(...data);\n    return state;\n};\n// TODO: if firstOperation errors, secondOperation might overwrite the error\nexport const combineOperations = (firstOperation, secondOperation) => (state) => secondOperation(firstOperation(state));\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tYmluYXRvcnMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9zcmMvbGliL2F1dGgvaW5zdHJ1Y3Rpb24tc2V0cy9jb21tb24vY29tYmluYXRvcnMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBTUEsT0FBTyxFQUFFLG1CQUFtQixFQUFFLHdCQUF3QixFQUFFLE1BQU0sVUFBVSxDQUFDO0FBQ3pFLE9BQU8sRUFBRSxVQUFVLEVBQUUseUJBQXlCLEVBQUUsTUFBTSxVQUFVLENBQUM7QUFFakUsTUFBTSxDQUFDLE1BQU0sdUJBQXVCLEdBQUcsQ0FHckMsU0FBMkIsRUFDVCxFQUFFLENBQUMsQ0FBQyxLQUFZLEVBQUUsRUFBRTtJQUN0QyxNQUFNLFNBQVMsR0FBRyxTQUFTLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDbkMsc0VBQXNFO0lBQ3RFLFNBQVMsQ0FBQyxjQUFjLElBQUksQ0FBQyxDQUFDO0lBQzlCLE9BQU8sU0FBUyxDQUFDO0FBQ25CLENBQUMsQ0FBQztBQUVGLE1BQU0sQ0FBQyxNQUFNLHFCQUFxQixHQUFHLENBQ25DLFNBQTJCLEVBQ1QsRUFBRSxDQUFDLENBQUMsS0FBWSxFQUFFLEVBQUUsQ0FDdEMsS0FBSyxDQUFDLGNBQWMsQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsU0FBUyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUM7QUFFdEU7Ozs7O0dBS0c7QUFDSCxNQUFNLENBQUMsTUFBTSxpQkFBaUIsR0FBRyxDQUMvQixVQUFpRCxFQUNqRCxHQUFHLFdBQXFFLEVBQ3hFLEVBQUUsQ0FDRixNQUFNLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxDQUFDLE1BQU0sQ0FHNUIsQ0FBQyxNQUFNLEVBQUUsU0FBUyxFQUFFLEVBQUUsQ0FBQyxDQUFDO0lBQ3RCLEdBQUcsTUFBTTtJQUNULENBQUMsU0FBUyxDQUFDLEVBQUUsV0FBVyxDQUFDLE1BQU0sQ0FDN0IsQ0FBQyxFQUFFLEVBQUUsVUFBVSxFQUFFLEVBQUUsQ0FBQyxVQUFVLENBQUMsRUFBRSxDQUFDLEVBQ2xDLFVBQVUsQ0FBQyxRQUFRLENBQUMsU0FBUyxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQ3BDO0NBQ0YsQ0FBQyxFQUNGLEVBQUUsQ0FDSCxDQUFDO0FBRUo7O0dBRUc7QUFDSCxNQUFNLENBQUMsTUFBTSxlQUFlLEdBQUcsQ0FJN0IsS0FBWSxFQUNaLFNBQXlELEVBQ3pELEVBQUU7SUFDRixNQUFNLElBQUksR0FBRyxLQUFLLENBQUMsS0FBSyxDQUFDLEdBQUcsRUFBRSxDQUFDO0lBQy9CLDJDQUEyQztJQUMzQyxJQUFJLENBQUMsSUFBSSxFQUFFO1FBQ1QsT0FBTyxVQUFVLENBQ2YseUJBQXlCLENBQUMsVUFBVSxFQUNwQyxLQUFLLENBQ04sQ0FBQztLQUNIO0lBQ0QsT0FBTyxTQUFTLENBQUMsS0FBSyxFQUFFLElBQUksQ0FBQyxDQUFDO0FBQ2hDLENBQUMsQ0FBQztBQUVGLE1BQU0sQ0FBQyxNQUFNLGdCQUFnQixHQUFHLENBSTlCLEtBQVksRUFDWixTQUlVLEVBQ1YsRUFBRSxDQUNGLGVBQWUsQ0FBQyxLQUFLLEVBQUUsQ0FBQyxTQUFTLEVBQUUsUUFBUSxFQUFFLEVBQUUsQ0FDN0MsZUFBZSxDQUFDLFNBQVMsRUFBRSxDQUFDLFNBQVMsRUFBRSxRQUFRLEVBQUUsRUFBRSxDQUNqRCxTQUFTLENBQUMsU0FBUyxFQUFFLFFBQVEsRUFBRSxRQUFRLENBQUMsQ0FDekMsQ0FDRixDQUFDO0FBRUosTUFBTSxDQUFDLE1BQU0sa0JBQWtCLEdBQUcsQ0FJaEMsS0FBWSxFQUNaLFNBS1UsRUFDVixFQUFFLENBQ0YsZUFBZSxDQUFDLEtBQUssRUFBRSxDQUFDLFNBQVMsRUFBRSxVQUFVLEVBQUUsRUFBRSxDQUMvQyxnQkFBZ0IsQ0FBQyxTQUFTLEVBQUUsQ0FBQyxTQUFTLEVBQUUsUUFBUSxFQUFFLFFBQVEsRUFBRSxFQUFFLENBQzVELFNBQVMsQ0FBQyxTQUFTLEVBQUUsUUFBUSxFQUFFLFFBQVEsRUFBRSxVQUFVLENBQUMsQ0FDckQsQ0FDRixDQUFDO0FBRUosTUFBTSxDQUFDLE1BQU0saUJBQWlCLEdBQUcsQ0FJL0IsS0FBWSxFQUNaLFNBTVUsRUFDVixFQUFFLENBQ0YsZ0JBQWdCLENBQUMsS0FBSyxFQUFFLENBQUMsU0FBUyxFQUFFLFVBQVUsRUFBRSxTQUFTLEVBQUUsRUFBRSxDQUMzRCxnQkFBZ0IsQ0FBQyxTQUFTLEVBQUUsQ0FBQyxTQUFTLEVBQUUsUUFBUSxFQUFFLFFBQVEsRUFBRSxFQUFFLENBQzVELFNBQVMsQ0FBQyxTQUFTLEVBQUUsUUFBUSxFQUFFLFFBQVEsRUFBRSxVQUFVLEVBQUUsU0FBUyxDQUFDLENBQ2hFLENBQ0YsQ0FBQztBQUVKLE1BQU0sQ0FBQyxNQUFNLGdCQUFnQixHQUFHLENBSTlCLEtBQVksRUFDWixTQVFVLEVBQ1YsRUFBRSxDQUNGLGlCQUFpQixDQUNmLEtBQUssRUFDTCxDQUFDLFNBQVMsRUFBRSxVQUFVLEVBQUUsU0FBUyxFQUFFLFNBQVMsRUFBRSxRQUFRLEVBQUUsRUFBRSxDQUN4RCxnQkFBZ0IsQ0FBQyxTQUFTLEVBQUUsQ0FBQyxTQUFTLEVBQUUsUUFBUSxFQUFFLFFBQVEsRUFBRSxFQUFFLENBQzVELFNBQVMsQ0FDUCxTQUFTLEVBQ1QsUUFBUSxFQUNSLFFBQVEsRUFDUixVQUFVLEVBQ1YsU0FBUyxFQUNULFNBQVMsRUFDVCxRQUFRLENBQ1QsQ0FDRixDQUNKLENBQUM7QUFFSixNQUFNLENBQUMsTUFBTSxrQkFBa0IsR0FBRyxDQUloQyxLQUFZLEVBQ1osU0FBcUQsRUFDckQsc0JBQStCLEVBQy9CLDZCQUE2QixHQUFHLENBQUMsRUFDakMsRUFBRSxDQUNGLGVBQWUsQ0FBQyxLQUFLLEVBQUUsQ0FBQyxTQUFTLEVBQUUsSUFBSSxFQUFFLEVBQUU7SUFDekMsTUFBTSxLQUFLLEdBQUcsd0JBQXdCLENBQ3BDLElBQUksRUFDSixzQkFBc0IsRUFDdEIsNkJBQTZCLENBQzlCLENBQUM7SUFDRiw0Q0FBNEM7SUFDNUMsSUFBSSxtQkFBbUIsQ0FBQyxLQUFLLENBQUMsRUFBRTtRQUM5QixPQUFPLFVBQVUsQ0FDZix5QkFBeUIsQ0FBQyxtQkFBbUIsRUFDN0MsS0FBSyxDQUNOLENBQUM7S0FDSDtJQUNELE9BQU8sU0FBUyxDQUFDLFNBQVMsRUFBRSxLQUFLLENBQUMsQ0FBQztBQUNyQyxDQUFDLENBQUMsQ0FBQztBQUVMLE1BQU0sQ0FBQyxNQUFNLG1CQUFtQixHQUFHLENBSWpDLEtBQVksRUFDWixTQUlVLEVBQ1Ysc0JBQStCLEVBQy9CLDZCQUE2QixHQUFHLENBQUMsRUFDakMsRUFBRSxDQUNGLGtCQUFrQixDQUNoQixLQUFLLEVBQ0wsQ0FBQyxTQUFTLEVBQUUsV0FBVyxFQUFFLEVBQUUsQ0FDekIsa0JBQWtCLENBQ2hCLFNBQVMsRUFDVCxDQUFDLFNBQVMsRUFBRSxVQUFVLEVBQUUsRUFBRSxDQUN4QixTQUFTLENBQUMsU0FBUyxFQUFFLFVBQVUsRUFBRSxXQUFXLENBQUMsRUFDL0Msc0JBQXNCLEVBQ3RCLDZCQUE2QixDQUM5QixFQUNILHNCQUFzQixFQUN0Qiw2QkFBNkIsQ0FDOUIsQ0FBQztBQUVKLE1BQU0sQ0FBQyxNQUFNLHFCQUFxQixHQUFHLENBSW5DLEtBQVksRUFDWixTQUtVLEVBQ1Ysc0JBQStCLEVBQy9CLDZCQUE2QixHQUFHLENBQUMsRUFDakMsRUFBRSxDQUNGLG1CQUFtQixDQUNqQixLQUFLLEVBQ0wsQ0FBQyxTQUFTLEVBQUUsV0FBVyxFQUFFLFVBQVUsRUFBRSxFQUFFLENBQ3JDLGtCQUFrQixDQUNoQixTQUFTLEVBQ1QsQ0FBQyxTQUFTLEVBQUUsVUFBVSxFQUFFLEVBQUUsQ0FDeEIsU0FBUyxDQUFDLFNBQVMsRUFBRSxVQUFVLEVBQUUsV0FBVyxFQUFFLFVBQVUsQ0FBQyxFQUMzRCxzQkFBc0IsRUFDdEIsNkJBQTZCLENBQzlCLEVBQ0gsc0JBQXNCLEVBQ3RCLDZCQUE2QixDQUM5QixDQUFDO0FBRUo7Ozs7R0FJRztBQUNILE1BQU0sQ0FBQyxNQUFNLFdBQVcsR0FBRyxDQUN6QixLQUFZLEVBQ1osR0FBRyxJQUFrQixFQUNyQixFQUFFO0lBQ0YsbURBQW1EO0lBQ25ELEtBQUssQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLEdBQUcsSUFBSSxDQUFDLENBQUM7SUFDMUIsT0FBTyxLQUFLLENBQUM7QUFDZixDQUFDLENBQUM7QUFFRiw0RUFBNEU7QUFDNUUsTUFBTSxDQUFDLE1BQU0saUJBQWlCLEdBQUcsQ0FDL0IsY0FBZ0MsRUFDaEMsZUFBaUMsRUFDakMsRUFBRSxDQUFDLENBQUMsS0FBWSxFQUFFLEVBQUUsQ0FBQyxlQUFlLENBQUMsY0FBYyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMifQ==","import { getOutpointsHash, getOutputHash, getOutputsHash, getSequenceNumbersHash } from '../../../transaction';\nimport { arithmeticOperations } from './arithmetic';\nimport { bitwiseOperations } from './bitwise';\nimport { conditionallyEvaluate, incrementOperationCount, mapOverOperations } from './combinators';\nimport { cryptoOperations } from './crypto';\nimport { applyError, AuthenticationErrorCommon } from './errors';\nimport { conditionalFlowControlOperations, reservedOperation, unconditionalFlowControlOperations } from './flow-control';\nimport { disabledOperations, nonOperations } from './nop';\nimport { OpcodesCommon } from './opcodes';\nimport { pushNumberOperations, pushOperations } from './push';\nimport { spliceOperations } from './splice';\nimport { stackOperations } from './stack';\nimport { timeOperations } from './time';\nexport * from './arithmetic';\nexport * from './bitwise';\nexport * from './combinators';\nexport * from './crypto';\nexport * from './descriptions';\nexport * from './encoding';\nexport * from './errors';\nexport * from './flow-control';\nexport * from './nop';\nexport * from './opcodes';\nexport * from './push';\nexport * from './signing-serialization';\nexport * from './splice';\nexport * from './stack';\nexport * from './time';\nexport * from './types';\nexport var ConsensusCommon;\n(function (ConsensusCommon) {\n    /**\n     * A.K.A. `MAX_SCRIPT_ELEMENT_SIZE`\n     */\n    ConsensusCommon[ConsensusCommon[\"maximumStackItemLength\"] = 520] = \"maximumStackItemLength\";\n    ConsensusCommon[ConsensusCommon[\"maximumScriptNumberLength\"] = 4] = \"maximumScriptNumberLength\";\n    /**\n     * A.K.A. `MAX_OPS_PER_SCRIPT`\n     */\n    ConsensusCommon[ConsensusCommon[\"maximumOperationCount\"] = 201] = \"maximumOperationCount\";\n    /**\n     * A.K.A. `MAX_SCRIPT_SIZE`\n     */\n    ConsensusCommon[ConsensusCommon[\"maximumBytecodeLength\"] = 10000] = \"maximumBytecodeLength\";\n    /**\n     * A.K.A. `MAX_STACK_SIZE`\n     */\n    ConsensusCommon[ConsensusCommon[\"maximumStackDepth\"] = 1000] = \"maximumStackDepth\";\n})(ConsensusCommon || (ConsensusCommon = {}));\nexport const undefinedOperation = () => ({\n    undefined: conditionallyEvaluate((state) => applyError(AuthenticationErrorCommon.unknownOpcode, state))\n});\nexport const checkLimitsCommon = (operation) => (state) => {\n    const nextState = operation(state);\n    return nextState.stack.length + nextState.alternateStack.length >\n        ConsensusCommon.maximumStackDepth\n        ? applyError(AuthenticationErrorCommon.exceededMaximumStackDepth, nextState)\n        : nextState.operationCount > ConsensusCommon.maximumOperationCount\n            ? applyError(AuthenticationErrorCommon.exceededMaximumOperationCount, nextState)\n            : nextState;\n};\nexport const commonOperations = (sha1, sha256, ripemd160, secp256k1, flags) => {\n    const unconditionalOperations = {\n        ...disabledOperations(),\n        ...pushOperations(flags),\n        ...mapOverOperations(unconditionalFlowControlOperations(flags), incrementOperationCount)\n    };\n    const conditionalOperations = mapOverOperations({\n        ...pushNumberOperations(),\n        [OpcodesCommon.OP_RESERVED]: reservedOperation()\n    }, conditionallyEvaluate);\n    const incrementingOperations = mapOverOperations({\n        ...arithmeticOperations(flags),\n        ...bitwiseOperations(),\n        ...cryptoOperations(sha1, sha256, ripemd160, secp256k1, flags),\n        ...conditionalFlowControlOperations(),\n        ...stackOperations(flags),\n        ...spliceOperations(),\n        ...timeOperations(flags),\n        ...nonOperations(flags)\n    }, conditionallyEvaluate, incrementOperationCount);\n    return mapOverOperations({\n        ...unconditionalOperations,\n        ...incrementingOperations,\n        ...conditionalOperations\n    }, checkLimitsCommon);\n};\nexport const cloneStack = (stack) => stack.reduce((newStack, element) => {\n    // tslint:disable-next-line:no-expression-statement\n    newStack.push(element.slice());\n    return newStack;\n}, []);\nexport const createAuthenticationProgramInternalStateCommon = (instructions, stack = []) => ({\n    alternateStack: [],\n    executionStack: [],\n    instructions,\n    ip: 0,\n    lastCodeSeparator: -1,\n    operationCount: 0,\n    signatureOperationsCount: 0,\n    stack\n});\nexport const createAuthenticationProgramExternalStateCommon = (program, sha256) => ({\n    hashCorrespondingOutput: () => program.inputIndex < program.spendingTransaction.outputs.length\n        ? getOutputHash(program.spendingTransaction.outputs[program.inputIndex], sha256)\n        : new Uint8Array(32 /* length */).fill(0),\n    hashTransactionOutpoints: () => getOutpointsHash(program.spendingTransaction.inputs, sha256),\n    hashTransactionOutputs: () => getOutputsHash(program.spendingTransaction.outputs, sha256),\n    hashTransactionSequenceNumbers: () => getSequenceNumbersHash(program.spendingTransaction.inputs, sha256),\n    locktime: program.spendingTransaction.locktime,\n    outpointIndex: program.spendingTransaction.inputs[program.inputIndex].outpointIndex,\n    outpointTransactionHash: program.spendingTransaction.inputs[program.inputIndex]\n        .outpointTransactionHash,\n    outputValue: program.sourceOutput.satoshis,\n    sequenceNumber: program.spendingTransaction.inputs[program.inputIndex].sequenceNumber,\n    version: program.spendingTransaction.version\n});\nexport const createAuthenticationProgramStateCommon = (instructions, stack, externalState) => ({\n    ...createAuthenticationProgramInternalStateCommon(instructions, stack),\n    ...externalState\n});\nexport const cloneAuthenticationProgramStateCommon = (state) => ({\n    ...(state.error !== undefined ? { error: state.error } : {}),\n    alternateStack: state.alternateStack.slice(),\n    executionStack: state.executionStack.slice(),\n    hashCorrespondingOutput: state.hashCorrespondingOutput,\n    hashTransactionOutpoints: state.hashTransactionOutpoints,\n    hashTransactionOutputs: state.hashTransactionOutputs,\n    hashTransactionSequenceNumbers: state.hashTransactionSequenceNumbers,\n    instructions: state.instructions.slice(),\n    ip: state.ip,\n    lastCodeSeparator: state.lastCodeSeparator,\n    locktime: state.locktime,\n    operationCount: state.operationCount,\n    outpointIndex: state.outpointIndex,\n    outpointTransactionHash: state.outpointTransactionHash.slice(),\n    outputValue: state.outputValue,\n    sequenceNumber: state.sequenceNumber,\n    signatureOperationsCount: state.signatureOperationsCount,\n    stack: state.stack.slice(),\n    version: state.version\n});\n/**\n * This is a meaningless but complete `CommonExternalProgramState`, useful for\n * testing and debugging.\n */\nexport const createAuthenticationProgramExternalStateCommonEmpty = () => ({\n    hashCorrespondingOutput: () => new Uint8Array(32 /* length */).fill(1 /* hashCorrespondingOutput */),\n    hashTransactionOutpoints: () => new Uint8Array(32 /* length */).fill(2 /* hashTransactionOutpoints */),\n    hashTransactionOutputs: () => new Uint8Array(32 /* length */).fill(3 /* hashTransactionOutputs */),\n    hashTransactionSequenceNumbers: () => new Uint8Array(32 /* length */).fill(4 /* hashTransactionSequenceNumbers */),\n    locktime: 0,\n    outpointIndex: 0,\n    outpointTransactionHash: new Uint8Array(32 /* length */).fill(5 /* outpointTransactionHash */),\n    outputValue: BigInt(0),\n    sequenceNumber: 0,\n    version: 0\n});\n/**\n * Create an \"empty\" CommonProgramState, suitable for testing a VM/compiler.\n */\nexport const createAuthenticationProgramStateCommonEmpty = (instructions, stack = []) => ({\n    ...createAuthenticationProgramInternalStateCommon(instructions, stack),\n    ...createAuthenticationProgramExternalStateCommonEmpty()\n});\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tbW9uLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vc3JjL2xpYi9hdXRoL2luc3RydWN0aW9uLXNldHMvY29tbW9uL2NvbW1vbi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQ0wsZ0JBQWdCLEVBQ2hCLGFBQWEsRUFDYixjQUFjLEVBQ2Qsc0JBQXNCLEVBQ3ZCLE1BQU0sc0JBQXNCLENBQUM7QUFjOUIsT0FBTyxFQUFFLG9CQUFvQixFQUFFLE1BQU0sY0FBYyxDQUFDO0FBQ3BELE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLFdBQVcsQ0FBQztBQUM5QyxPQUFPLEVBQ0wscUJBQXFCLEVBQ3JCLHVCQUF1QixFQUN2QixpQkFBaUIsRUFDbEIsTUFBTSxlQUFlLENBQUM7QUFDdkIsT0FBTyxFQUFFLGdCQUFnQixFQUFzQyxNQUFNLFVBQVUsQ0FBQztBQUNoRixPQUFPLEVBQUUsVUFBVSxFQUFFLHlCQUF5QixFQUFFLE1BQU0sVUFBVSxDQUFDO0FBQ2pFLE9BQU8sRUFDTCxnQ0FBZ0MsRUFDaEMsaUJBQWlCLEVBQ2pCLGtDQUFrQyxFQUNuQyxNQUFNLGdCQUFnQixDQUFDO0FBQ3hCLE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxhQUFhLEVBQUUsTUFBTSxPQUFPLENBQUM7QUFDMUQsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLFdBQVcsQ0FBQztBQUMxQyxPQUFPLEVBQUUsb0JBQW9CLEVBQUUsY0FBYyxFQUFFLE1BQU0sUUFBUSxDQUFDO0FBQzlELE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLFVBQVUsQ0FBQztBQUM1QyxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sU0FBUyxDQUFDO0FBQzFDLE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSxRQUFRLENBQUM7QUFFeEMsY0FBYyxjQUFjLENBQUM7QUFDN0IsY0FBYyxXQUFXLENBQUM7QUFDMUIsY0FBYyxlQUFlLENBQUM7QUFDOUIsY0FBYyxVQUFVLENBQUM7QUFDekIsY0FBYyxnQkFBZ0IsQ0FBQztBQUMvQixjQUFjLFlBQVksQ0FBQztBQUMzQixjQUFjLFVBQVUsQ0FBQztBQUN6QixjQUFjLGdCQUFnQixDQUFDO0FBQy9CLGNBQWMsT0FBTyxDQUFDO0FBQ3RCLGNBQWMsV0FBVyxDQUFDO0FBQzFCLGNBQWMsUUFBUSxDQUFDO0FBQ3ZCLGNBQWMseUJBQXlCLENBQUM7QUFDeEMsY0FBYyxVQUFVLENBQUM7QUFDekIsY0FBYyxTQUFTLENBQUM7QUFDeEIsY0FBYyxRQUFRLENBQUM7QUFDdkIsY0FBYyxTQUFTLENBQUM7QUFFeEIsTUFBTSxDQUFOLElBQVksZUFrQlg7QUFsQkQsV0FBWSxlQUFlO0lBQ3pCOztPQUVHO0lBQ0gsMkZBQTRCLENBQUE7SUFDNUIsK0ZBQTZCLENBQUE7SUFDN0I7O09BRUc7SUFDSCx5RkFBMkIsQ0FBQTtJQUMzQjs7T0FFRztJQUNILDJGQUE2QixDQUFBO0lBQzdCOztPQUVHO0lBQ0gsa0ZBQXdCLENBQUE7QUFDMUIsQ0FBQyxFQWxCVyxlQUFlLEtBQWYsZUFBZSxRQWtCMUI7QUFFRCxNQUFNLENBQUMsTUFBTSxrQkFBa0IsR0FBRyxHQUc5QixFQUFFLENBQUMsQ0FBQztJQUNOLFNBQVMsRUFBRSxxQkFBcUIsQ0FBQyxDQUFDLEtBQVksRUFBRSxFQUFFLENBQ2hELFVBQVUsQ0FBZ0IseUJBQXlCLENBQUMsYUFBYSxFQUFFLEtBQUssQ0FBQyxDQUMxRTtDQUNGLENBQUMsQ0FBQztBQUVILE1BQU0sQ0FBQyxNQUFNLGlCQUFpQixHQUFHLENBTS9CLFNBQTJCLEVBQ1QsRUFBRSxDQUFDLENBQUMsS0FBWSxFQUFFLEVBQUU7SUFDdEMsTUFBTSxTQUFTLEdBQUcsU0FBUyxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQ25DLE9BQU8sU0FBUyxDQUFDLEtBQUssQ0FBQyxNQUFNLEdBQUcsU0FBUyxDQUFDLGNBQWMsQ0FBQyxNQUFNO1FBQzdELGVBQWUsQ0FBQyxpQkFBaUI7UUFDakMsQ0FBQyxDQUFDLFVBQVUsQ0FDUix5QkFBeUIsQ0FBQyx5QkFBeUIsRUFDbkQsU0FBUyxDQUNWO1FBQ0gsQ0FBQyxDQUFDLFNBQVMsQ0FBQyxjQUFjLEdBQUcsZUFBZSxDQUFDLHFCQUFxQjtZQUNsRSxDQUFDLENBQUMsVUFBVSxDQUNSLHlCQUF5QixDQUFDLDZCQUE2QixFQUN2RCxTQUFTLENBQ1Y7WUFDSCxDQUFDLENBQUMsU0FBUyxDQUFDO0FBQ2hCLENBQUMsQ0FBQztBQUVGLE1BQU0sQ0FBQyxNQUFNLGdCQUFnQixHQUFHLENBSzlCLElBQVUsRUFDVixNQUFjLEVBQ2QsU0FBb0IsRUFDcEIsU0FBb0IsRUFDcEIsS0FLQyxFQUNpRCxFQUFFO0lBQ3BELE1BQU0sdUJBQXVCLEdBQUc7UUFDOUIsR0FBRyxrQkFBa0IsRUFBaUI7UUFDdEMsR0FBRyxjQUFjLENBQXlCLEtBQUssQ0FBQztRQUNoRCxHQUFHLGlCQUFpQixDQUNsQixrQ0FBa0MsQ0FBeUIsS0FBSyxDQUFDLEVBQ2pFLHVCQUF1QixDQUN4QjtLQUNGLENBQUM7SUFDRixNQUFNLHFCQUFxQixHQUFHLGlCQUFpQixDQUM3QztRQUNFLEdBQUcsb0JBQW9CLEVBQWtCO1FBQ3pDLENBQUMsYUFBYSxDQUFDLFdBQVcsQ0FBQyxFQUFFLGlCQUFpQixFQUFpQjtLQUNoRSxFQUNELHFCQUFxQixDQUN0QixDQUFDO0lBQ0YsTUFBTSxzQkFBc0IsR0FBRyxpQkFBaUIsQ0FDOUM7UUFDRSxHQUFHLG9CQUFvQixDQUF5QixLQUFLLENBQUM7UUFDdEQsR0FBRyxpQkFBaUIsRUFBMEI7UUFDOUMsR0FBRyxnQkFBZ0IsQ0FDakIsSUFBSSxFQUNKLE1BQU0sRUFDTixTQUFTLEVBQ1QsU0FBUyxFQUNULEtBQUssQ0FDTjtRQUNELEdBQUcsZ0NBQWdDLEVBQTBCO1FBQzdELEdBQUcsZUFBZSxDQUFnQixLQUFLLENBQUM7UUFDeEMsR0FBRyxnQkFBZ0IsRUFBaUI7UUFDcEMsR0FBRyxjQUFjLENBQXlCLEtBQUssQ0FBQztRQUNoRCxHQUFHLGFBQWEsQ0FBUSxLQUFLLENBQUM7S0FDL0IsRUFDRCxxQkFBcUIsRUFDckIsdUJBQXVCLENBQ3hCLENBQUM7SUFFRixPQUFPLGlCQUFpQixDQUN0QjtRQUNFLEdBQUcsdUJBQXVCO1FBQzFCLEdBQUcsc0JBQXNCO1FBQ3pCLEdBQUcscUJBQXFCO0tBQ3pCLEVBQ0QsaUJBQWlCLENBQ2xCLENBQUM7QUFDSixDQUFDLENBQUM7QUFFRixNQUFNLENBQUMsTUFBTSxVQUFVLEdBQUcsQ0FBQyxLQUEwQyxFQUFFLEVBQUUsQ0FDdkUsS0FBSyxDQUFDLE1BQU0sQ0FBZSxDQUFDLFFBQVEsRUFBRSxPQUFPLEVBQUUsRUFBRTtJQUMvQyxtREFBbUQ7SUFDbkQsUUFBUSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsS0FBSyxFQUFFLENBQUMsQ0FBQztJQUMvQixPQUFPLFFBQVEsQ0FBQztBQUNsQixDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUM7QUFFVCxNQUFNLENBQUMsTUFBTSw4Q0FBOEMsR0FBRyxDQUM1RCxZQUErRCxFQUMvRCxRQUFzQixFQUFFLEVBQ21DLEVBQUUsQ0FBQyxDQUFDO0lBQy9ELGNBQWMsRUFBRSxFQUFFO0lBQ2xCLGNBQWMsRUFBRSxFQUFFO0lBQ2xCLFlBQVk7SUFDWixFQUFFLEVBQUUsQ0FBQztJQUNMLGlCQUFpQixFQUFFLENBQUMsQ0FBQztJQUNyQixjQUFjLEVBQUUsQ0FBQztJQUNqQix3QkFBd0IsRUFBRSxDQUFDO0lBQzNCLEtBQUs7Q0FDTixDQUFDLENBQUM7QUFXSCxNQUFNLENBQUMsTUFBTSw4Q0FBOEMsR0FBRyxDQUM1RCxPQUFvQyxFQUNwQyxNQUFjLEVBQzRCLEVBQUUsQ0FBQyxDQUFDO0lBQzlDLHVCQUF1QixFQUFFLEdBQUcsRUFBRSxDQUM1QixPQUFPLENBQUMsVUFBVSxHQUFHLE9BQU8sQ0FBQyxtQkFBbUIsQ0FBQyxPQUFPLENBQUMsTUFBTTtRQUM3RCxDQUFDLENBQUMsYUFBYSxDQUNYLE9BQU8sQ0FBQyxtQkFBbUIsQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLFVBQVUsQ0FBQyxFQUN2RCxNQUFNLENBQ1A7UUFDSCxDQUFDLENBQUMsSUFBSSxVQUFVLGlCQUFhLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQztJQUN6Qyx3QkFBd0IsRUFBRSxHQUFHLEVBQUUsQ0FDN0IsZ0JBQWdCLENBQUMsT0FBTyxDQUFDLG1CQUFtQixDQUFDLE1BQU0sRUFBRSxNQUFNLENBQUM7SUFDOUQsc0JBQXNCLEVBQUUsR0FBRyxFQUFFLENBQzNCLGNBQWMsQ0FBQyxPQUFPLENBQUMsbUJBQW1CLENBQUMsT0FBTyxFQUFFLE1BQU0sQ0FBQztJQUM3RCw4QkFBOEIsRUFBRSxHQUFHLEVBQUUsQ0FDbkMsc0JBQXNCLENBQUMsT0FBTyxDQUFDLG1CQUFtQixDQUFDLE1BQU0sRUFBRSxNQUFNLENBQUM7SUFDcEUsUUFBUSxFQUFFLE9BQU8sQ0FBQyxtQkFBbUIsQ0FBQyxRQUFRO0lBQzlDLGFBQWEsRUFDWCxPQUFPLENBQUMsbUJBQW1CLENBQUMsTUFBTSxDQUFDLE9BQU8sQ0FBQyxVQUFVLENBQUMsQ0FBQyxhQUFhO0lBQ3RFLHVCQUF1QixFQUNyQixPQUFPLENBQUMsbUJBQW1CLENBQUMsTUFBTSxDQUFDLE9BQU8sQ0FBQyxVQUFVLENBQUM7U0FDbkQsdUJBQXVCO0lBQzVCLFdBQVcsRUFBRSxPQUFPLENBQUMsWUFBWSxDQUFDLFFBQVE7SUFDMUMsY0FBYyxFQUNaLE9BQU8sQ0FBQyxtQkFBbUIsQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUFDLFVBQVUsQ0FBQyxDQUFDLGNBQWM7SUFDdkUsT0FBTyxFQUFFLE9BQU8sQ0FBQyxtQkFBbUIsQ0FBQyxPQUFPO0NBQzdDLENBQUMsQ0FBQztBQUVILE1BQU0sQ0FBQyxNQUFNLHNDQUFzQyxHQUFHLENBQ3BELFlBQStELEVBQy9ELEtBQW1CLEVBQ25CLGFBQXVELEVBQ0osRUFBRSxDQUFDLENBQUM7SUFDdkQsR0FBRyw4Q0FBOEMsQ0FDL0MsWUFBWSxFQUNaLEtBQUssQ0FDTjtJQUNELEdBQUcsYUFBYTtDQUNqQixDQUFDLENBQUM7QUFFSCxNQUFNLENBQUMsTUFBTSxxQ0FBcUMsR0FBRyxDQUtuRCxLQUFZLEVBQ1osRUFBRSxDQUFDLENBQUM7SUFDSixHQUFHLENBQUMsS0FBSyxDQUFDLEtBQUssS0FBSyxTQUFTLENBQUMsQ0FBQyxDQUFDLEVBQUUsS0FBSyxFQUFFLEtBQUssQ0FBQyxLQUFLLEVBQUUsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDO0lBQzVELGNBQWMsRUFBRSxLQUFLLENBQUMsY0FBYyxDQUFDLEtBQUssRUFBRTtJQUM1QyxjQUFjLEVBQUUsS0FBSyxDQUFDLGNBQWMsQ0FBQyxLQUFLLEVBQUU7SUFDNUMsdUJBQXVCLEVBQUUsS0FBSyxDQUFDLHVCQUF1QjtJQUN0RCx3QkFBd0IsRUFBRSxLQUFLLENBQUMsd0JBQXdCO0lBQ3hELHNCQUFzQixFQUFFLEtBQUssQ0FBQyxzQkFBc0I7SUFDcEQsOEJBQThCLEVBQUUsS0FBSyxDQUFDLDhCQUE4QjtJQUNwRSxZQUFZLEVBQUUsS0FBSyxDQUFDLFlBQVksQ0FBQyxLQUFLLEVBQUU7SUFDeEMsRUFBRSxFQUFFLEtBQUssQ0FBQyxFQUFFO0lBQ1osaUJBQWlCLEVBQUUsS0FBSyxDQUFDLGlCQUFpQjtJQUMxQyxRQUFRLEVBQUUsS0FBSyxDQUFDLFFBQVE7SUFDeEIsY0FBYyxFQUFFLEtBQUssQ0FBQyxjQUFjO0lBQ3BDLGFBQWEsRUFBRSxLQUFLLENBQUMsYUFBYTtJQUNsQyx1QkFBdUIsRUFBRSxLQUFLLENBQUMsdUJBQXVCLENBQUMsS0FBSyxFQUFFO0lBQzlELFdBQVcsRUFBRSxLQUFLLENBQUMsV0FBVztJQUM5QixjQUFjLEVBQUUsS0FBSyxDQUFDLGNBQWM7SUFDcEMsd0JBQXdCLEVBQUUsS0FBSyxDQUFDLHdCQUF3QjtJQUN4RCxLQUFLLEVBQUUsS0FBSyxDQUFDLEtBQUssQ0FBQyxLQUFLLEVBQUU7SUFDMUIsT0FBTyxFQUFFLEtBQUssQ0FBQyxPQUFPO0NBQ3ZCLENBQUMsQ0FBQztBQUVIOzs7R0FHRztBQUNILE1BQU0sQ0FBQyxNQUFNLG1EQUFtRCxHQUFHLEdBQUcsRUFBRSxDQUFDLENBQUM7SUFDeEUsdUJBQXVCLEVBQUUsR0FBRyxFQUFFLENBQzVCLElBQUksVUFBVSxpQkFBYSxDQUFDLElBQUksaUNBQThCO0lBQ2hFLHdCQUF3QixFQUFFLEdBQUcsRUFBRSxDQUM3QixJQUFJLFVBQVUsaUJBQWEsQ0FBQyxJQUFJLGtDQUErQjtJQUNqRSxzQkFBc0IsRUFBRSxHQUFHLEVBQUUsQ0FDM0IsSUFBSSxVQUFVLGlCQUFhLENBQUMsSUFBSSxnQ0FBNkI7SUFDL0QsOEJBQThCLEVBQUUsR0FBRyxFQUFFLENBQ25DLElBQUksVUFBVSxpQkFBYSxDQUFDLElBQUksd0NBQXFDO0lBQ3ZFLFFBQVEsRUFBRSxDQUFDO0lBQ1gsYUFBYSxFQUFFLENBQUM7SUFDaEIsdUJBQXVCLEVBQUUsSUFBSSxVQUFVLGlCQUFhLENBQUMsSUFBSSxpQ0FFeEQ7SUFDRCxXQUFXLEVBQUUsTUFBTSxDQUFDLENBQUMsQ0FBQztJQUN0QixjQUFjLEVBQUUsQ0FBQztJQUNqQixPQUFPLEVBQUUsQ0FBQztDQUNYLENBQUMsQ0FBQztBQUVIOztHQUVHO0FBQ0gsTUFBTSxDQUFDLE1BQU0sMkNBQTJDLEdBQUcsQ0FDekQsWUFBK0QsRUFDL0QsUUFBc0IsRUFBRSxFQUMyQixFQUFFLENBQUMsQ0FBQztJQUN2RCxHQUFHLDhDQUE4QyxDQUFDLFlBQVksRUFBRSxLQUFLLENBQUM7SUFDdEUsR0FBRyxtREFBbUQsRUFBRTtDQUN6RCxDQUFDLENBQUMifQ==","import { ConsensusBCH, serializeAuthenticationInstructions } from '../instruction-sets';\nimport { combineOperations, pushToStack, useOneScriptNumber, useOneStackItem, useTwoStackItems } from './combinators';\nimport { booleanToScriptNumber, ConsensusCommon } from './common';\nimport { decodeBitcoinSignature, isValidPublicKeyEncoding, isValidSignatureEncodingBCHTransaction } from './encoding';\nimport { applyError, AuthenticationErrorCommon } from './errors';\nimport { opVerify } from './flow-control';\nimport { OpcodesCommon } from './opcodes';\nimport { generateSigningSerializationBCH } from './signing-serialization';\nexport const opRipemd160 = (ripemd160) => (state) => useOneStackItem(state, (nextState, value) => pushToStack(nextState, ripemd160.hash(value)));\nexport const opSha1 = (sha1) => (state) => useOneStackItem(state, (nextState, value) => pushToStack(nextState, sha1.hash(value)));\nexport const opSha256 = (sha256) => (state) => useOneStackItem(state, (nextState, value) => pushToStack(nextState, sha256.hash(value)));\nexport const opHash160 = (sha256, ripemd160) => (state) => useOneStackItem(state, (nextState, value) => pushToStack(nextState, ripemd160.hash(sha256.hash(value))));\nexport const opHash256 = (sha256) => (state) => useOneStackItem(state, (nextState, value) => pushToStack(nextState, sha256.hash(sha256.hash(value))));\nexport const opCodeSeparator = () => (state) => {\n    // tslint:disable-next-line: no-expression-statement no-object-mutation\n    state.lastCodeSeparator = state.ip;\n    return state;\n};\nexport const opCheckSig = (sha256, secp256k1, flags) => (s) => \n// tslint:disable-next-line: cyclomatic-complexity\nuseTwoStackItems(s, (state, bitcoinEncodedSignature, publicKey) => {\n    // tslint:disable-next-line:no-if-statement\n    if (!isValidPublicKeyEncoding(publicKey)) {\n        return applyError(AuthenticationErrorCommon.invalidPublicKeyEncoding, state);\n    }\n    // tslint:disable-next-line:no-if-statement\n    if (!isValidSignatureEncodingBCHTransaction(bitcoinEncodedSignature)) {\n        return applyError(AuthenticationErrorCommon.invalidSignatureEncoding, state);\n    }\n    const coveredBytecode = serializeAuthenticationInstructions(state.instructions).subarray(state.lastCodeSeparator + 1);\n    const { signingSerializationType, signature } = decodeBitcoinSignature(bitcoinEncodedSignature);\n    const serialization = generateSigningSerializationBCH(state.version, state.hashTransactionOutpoints, state.hashTransactionSequenceNumbers, state.outpointTransactionHash, state.outpointIndex, coveredBytecode, state.outputValue, state.sequenceNumber, state.hashCorrespondingOutput, state.hashTransactionOutputs, state.locktime, signingSerializationType);\n    const digest = sha256.hash(sha256.hash(serialization));\n    const useSchnorr = signature.length === ConsensusBCH.schnorrSignatureLength;\n    const success = useSchnorr\n        ? secp256k1.verifySignatureSchnorr(signature, publicKey, digest)\n        : secp256k1.verifySignatureDERLowS(signature, publicKey, digest);\n    return !success &&\n        flags.requireNullSignatureFailures &&\n        signature.length !== 0\n        ? applyError(AuthenticationErrorCommon.nonNullSignatureFailure, state)\n        : pushToStack(state, booleanToScriptNumber(success));\n});\nexport const opCheckMultiSig = (sha256, secp256k1, flags) => (s) => useOneScriptNumber(s, (state, publicKeysValue) => {\n    const potentialPublicKeys = Number(publicKeysValue);\n    // tslint:disable-next-line:no-if-statement\n    if (potentialPublicKeys < 0) {\n        return applyError(AuthenticationErrorCommon.invalidNaturalNumber, state);\n    }\n    // tslint:disable-next-line:no-if-statement\n    if (potentialPublicKeys > 20 /* maximumPublicKeys */) {\n        return applyError(AuthenticationErrorCommon.exceedsMaximumMultisigPublicKeyCount, state);\n    }\n    const publicKeys = potentialPublicKeys > 0 ? state.stack.splice(-potentialPublicKeys) : [];\n    // tslint:disable-next-line:no-expression-statement no-object-mutation\n    state.operationCount += potentialPublicKeys;\n    return state.operationCount > ConsensusCommon.maximumOperationCount\n        ? applyError(AuthenticationErrorCommon.exceededMaximumOperationCount, state)\n        : useOneScriptNumber(state, (nextState, approvingKeys) => {\n            const requiredApprovingPublicKeys = Number(approvingKeys);\n            // tslint:disable-next-line:no-if-statement\n            if (requiredApprovingPublicKeys < 0) {\n                return applyError(AuthenticationErrorCommon.invalidNaturalNumber, nextState);\n            }\n            // tslint:disable-next-line:no-if-statement\n            if (requiredApprovingPublicKeys > potentialPublicKeys) {\n                return applyError(AuthenticationErrorCommon.insufficientPublicKeys, nextState);\n            }\n            const signatures = requiredApprovingPublicKeys > 0\n                ? nextState.stack.splice(-requiredApprovingPublicKeys)\n                : [];\n            return useOneStackItem(nextState, \n            // tslint:disable-next-line: cyclomatic-complexity\n            (finalState, protocolBugValue) => {\n                // tslint:disable-next-line:no-if-statement\n                if (flags.requireBugValueZero &&\n                    protocolBugValue.length !== 0) {\n                    return applyError(AuthenticationErrorCommon.invalidProtocolBugValue, finalState);\n                }\n                const coveredBytecode = serializeAuthenticationInstructions(finalState.instructions).subarray(finalState.lastCodeSeparator + 1);\n                let approvingPublicKeys = 0; // tslint:disable-line:no-let\n                let remainingSignatures = signatures.length; // tslint:disable-line:no-let\n                let remainingPublicKeys = publicKeys.length; // tslint:disable-line:no-let\n                while (remainingSignatures > 0 &&\n                    remainingPublicKeys > 0 &&\n                    approvingPublicKeys + remainingPublicKeys >=\n                        remainingSignatures &&\n                    approvingPublicKeys !== requiredApprovingPublicKeys) {\n                    const publicKey = publicKeys[remainingPublicKeys - 1];\n                    const bitcoinEncodedSignature = signatures[remainingSignatures - 1];\n                    // tslint:disable-next-line:no-if-statement\n                    if (!isValidPublicKeyEncoding(publicKey)) {\n                        return applyError(AuthenticationErrorCommon.invalidPublicKeyEncoding, finalState);\n                    }\n                    // tslint:disable-next-line:no-if-statement\n                    if (!isValidSignatureEncodingBCHTransaction(bitcoinEncodedSignature)) {\n                        return applyError(AuthenticationErrorCommon.invalidSignatureEncoding, finalState);\n                    }\n                    const { signingSerializationType, signature } = decodeBitcoinSignature(bitcoinEncodedSignature);\n                    const serialization = generateSigningSerializationBCH(finalState.version, finalState.hashTransactionOutpoints, finalState.hashTransactionSequenceNumbers, finalState.outpointTransactionHash, finalState.outpointIndex, coveredBytecode, finalState.outputValue, finalState.sequenceNumber, finalState.hashCorrespondingOutput, finalState.hashTransactionOutputs, finalState.locktime, signingSerializationType);\n                    const digest = sha256.hash(sha256.hash(serialization));\n                    // tslint:disable-next-line: no-if-statement\n                    if (signature.length === ConsensusBCH.schnorrSignatureLength) {\n                        return applyError(AuthenticationErrorCommon.schnorrSizedSignatureInCheckMultiSig, finalState);\n                    }\n                    const signed = secp256k1.verifySignatureDERLowS(signature, publicKey, digest);\n                    // tslint:disable-next-line:no-if-statement\n                    if (signed) {\n                        approvingPublicKeys += 1; // tslint:disable-line:no-expression-statement\n                        remainingSignatures -= 1; // tslint:disable-line:no-expression-statement\n                    }\n                    remainingPublicKeys -= 1; // tslint:disable-line:no-expression-statement\n                }\n                const success = approvingPublicKeys === requiredApprovingPublicKeys;\n                // tslint:disable-next-line: no-if-statement\n                if (!success &&\n                    flags.requireNullSignatureFailures &&\n                    !signatures.every(signature => signature.length === 0)) {\n                    return applyError(AuthenticationErrorCommon.nonNullSignatureFailure, finalState);\n                }\n                return pushToStack(finalState, booleanToScriptNumber(success));\n            });\n        }, flags.requireMinimalEncoding);\n}, flags.requireMinimalEncoding);\nexport const opCheckSigVerify = (sha256, secp256k1, flags) => combineOperations(opCheckSig(sha256, secp256k1, flags), opVerify());\nexport const opCheckMultiSigVerify = (sha256, secp256k1, flags) => combineOperations(opCheckMultiSig(sha256, secp256k1, flags), opVerify());\nexport const cryptoOperations = (sha1, sha256, ripemd160, secp256k1, flags) => ({\n    [OpcodesCommon.OP_RIPEMD160]: opRipemd160(ripemd160),\n    [OpcodesCommon.OP_SHA1]: opSha1(sha1),\n    [OpcodesCommon.OP_SHA256]: opSha256(sha256),\n    [OpcodesCommon.OP_HASH160]: opHash160(sha256, ripemd160),\n    [OpcodesCommon.OP_HASH256]: opHash256(sha256),\n    [OpcodesCommon.OP_CODESEPARATOR]: opCodeSeparator(),\n    [OpcodesCommon.OP_CHECKSIG]: opCheckSig(sha256, secp256k1, flags),\n    [OpcodesCommon.OP_CHECKSIGVERIFY]: opCheckSigVerify(sha256, secp256k1, flags),\n    [OpcodesCommon.OP_CHECKMULTISIG]: opCheckMultiSig(sha256, secp256k1, flags),\n    [OpcodesCommon.OP_CHECKMULTISIGVERIFY]: opCheckMultiSigVerify(sha256, secp256k1, flags)\n});\n//# sourceMappingURL=data:application/json;base64,","export var OpcodeDescriptionsCommon;\n(function (OpcodeDescriptionsCommon) {\n    OpcodeDescriptionsCommon[\"OP_0\"] = \"Push the Script Number 0 onto the stack.\";\n    OpcodeDescriptionsCommon[\"OP_PUSHBYTES_1\"] = \"Push the next byte onto the stack.\";\n    OpcodeDescriptionsCommon[\"OP_PUSHBYTES_2\"] = \"Push the next 2 bytes onto the stack.\";\n    OpcodeDescriptionsCommon[\"OP_PUSHBYTES_3\"] = \"Push the next 3 bytes onto the stack.\";\n    OpcodeDescriptionsCommon[\"OP_PUSHBYTES_4\"] = \"Push the next 4 bytes onto the stack.\";\n    OpcodeDescriptionsCommon[\"OP_PUSHBYTES_5\"] = \"Push the next 5 bytes onto the stack.\";\n    OpcodeDescriptionsCommon[\"OP_PUSHBYTES_6\"] = \"Push the next 6 bytes onto the stack.\";\n    OpcodeDescriptionsCommon[\"OP_PUSHBYTES_7\"] = \"Push the next 7 bytes onto the stack.\";\n    OpcodeDescriptionsCommon[\"OP_PUSHBYTES_8\"] = \"Push the next 8 bytes onto the stack.\";\n    OpcodeDescriptionsCommon[\"OP_PUSHBYTES_9\"] = \"Push the next 9 bytes onto the stack.\";\n    OpcodeDescriptionsCommon[\"OP_PUSHBYTES_10\"] = \"Push the next 10 bytes onto the stack.\";\n    OpcodeDescriptionsCommon[\"OP_PUSHBYTES_11\"] = \"Push the next 11 bytes onto the stack.\";\n    OpcodeDescriptionsCommon[\"OP_PUSHBYTES_12\"] = \"Push the next 12 bytes onto the stack.\";\n    OpcodeDescriptionsCommon[\"OP_PUSHBYTES_13\"] = \"Push the next 13 bytes onto the stack.\";\n    OpcodeDescriptionsCommon[\"OP_PUSHBYTES_14\"] = \"Push the next 14 bytes onto the stack.\";\n    OpcodeDescriptionsCommon[\"OP_PUSHBYTES_15\"] = \"Push the next 15 bytes onto the stack.\";\n    OpcodeDescriptionsCommon[\"OP_PUSHBYTES_16\"] = \"Push the next 16 bytes onto the stack.\";\n    OpcodeDescriptionsCommon[\"OP_PUSHBYTES_17\"] = \"Push the next 17 bytes onto the stack.\";\n    OpcodeDescriptionsCommon[\"OP_PUSHBYTES_18\"] = \"Push the next 18 bytes onto the stack.\";\n    OpcodeDescriptionsCommon[\"OP_PUSHBYTES_19\"] = \"Push the next 19 bytes onto the stack.\";\n    OpcodeDescriptionsCommon[\"OP_PUSHBYTES_20\"] = \"Push the next 20 bytes onto the stack.\";\n    OpcodeDescriptionsCommon[\"OP_PUSHBYTES_21\"] = \"Push the next 21 bytes onto the stack.\";\n    OpcodeDescriptionsCommon[\"OP_PUSHBYTES_22\"] = \"Push the next 22 bytes onto the stack.\";\n    OpcodeDescriptionsCommon[\"OP_PUSHBYTES_23\"] = \"Push the next 23 bytes onto the stack.\";\n    OpcodeDescriptionsCommon[\"OP_PUSHBYTES_24\"] = \"Push the next 24 bytes onto the stack.\";\n    OpcodeDescriptionsCommon[\"OP_PUSHBYTES_25\"] = \"Push the next 25 bytes onto the stack.\";\n    OpcodeDescriptionsCommon[\"OP_PUSHBYTES_26\"] = \"Push the next 26 bytes onto the stack.\";\n    OpcodeDescriptionsCommon[\"OP_PUSHBYTES_27\"] = \"Push the next 27 bytes onto the stack.\";\n    OpcodeDescriptionsCommon[\"OP_PUSHBYTES_28\"] = \"Push the next 28 bytes onto the stack.\";\n    OpcodeDescriptionsCommon[\"OP_PUSHBYTES_29\"] = \"Push the next 29 bytes onto the stack.\";\n    OpcodeDescriptionsCommon[\"OP_PUSHBYTES_30\"] = \"Push the next 30 bytes onto the stack.\";\n    OpcodeDescriptionsCommon[\"OP_PUSHBYTES_31\"] = \"Push the next 31 bytes onto the stack.\";\n    OpcodeDescriptionsCommon[\"OP_PUSHBYTES_32\"] = \"Push the next 32 bytes onto the stack.\";\n    OpcodeDescriptionsCommon[\"OP_PUSHBYTES_33\"] = \"Push the next 33 bytes onto the stack.\";\n    OpcodeDescriptionsCommon[\"OP_PUSHBYTES_34\"] = \"Push the next 34 bytes onto the stack.\";\n    OpcodeDescriptionsCommon[\"OP_PUSHBYTES_35\"] = \"Push the next 35 bytes onto the stack.\";\n    OpcodeDescriptionsCommon[\"OP_PUSHBYTES_36\"] = \"Push the next 36 bytes onto the stack.\";\n    OpcodeDescriptionsCommon[\"OP_PUSHBYTES_37\"] = \"Push the next 37 bytes onto the stack.\";\n    OpcodeDescriptionsCommon[\"OP_PUSHBYTES_38\"] = \"Push the next 38 bytes onto the stack.\";\n    OpcodeDescriptionsCommon[\"OP_PUSHBYTES_39\"] = \"Push the next 39 bytes onto the stack.\";\n    OpcodeDescriptionsCommon[\"OP_PUSHBYTES_40\"] = \"Push the next 40 bytes onto the stack.\";\n    OpcodeDescriptionsCommon[\"OP_PUSHBYTES_41\"] = \"Push the next 41 bytes onto the stack.\";\n    OpcodeDescriptionsCommon[\"OP_PUSHBYTES_42\"] = \"Push the next 42 bytes onto the stack.\";\n    OpcodeDescriptionsCommon[\"OP_PUSHBYTES_43\"] = \"Push the next 43 bytes onto the stack.\";\n    OpcodeDescriptionsCommon[\"OP_PUSHBYTES_44\"] = \"Push the next 44 bytes onto the stack.\";\n    OpcodeDescriptionsCommon[\"OP_PUSHBYTES_45\"] = \"Push the next 45 bytes onto the stack.\";\n    OpcodeDescriptionsCommon[\"OP_PUSHBYTES_46\"] = \"Push the next 46 bytes onto the stack.\";\n    OpcodeDescriptionsCommon[\"OP_PUSHBYTES_47\"] = \"Push the next 47 bytes onto the stack.\";\n    OpcodeDescriptionsCommon[\"OP_PUSHBYTES_48\"] = \"Push the next 48 bytes onto the stack.\";\n    OpcodeDescriptionsCommon[\"OP_PUSHBYTES_49\"] = \"Push the next 49 bytes onto the stack.\";\n    OpcodeDescriptionsCommon[\"OP_PUSHBYTES_50\"] = \"Push the next 50 bytes onto the stack.\";\n    OpcodeDescriptionsCommon[\"OP_PUSHBYTES_51\"] = \"Push the next 51 bytes onto the stack.\";\n    OpcodeDescriptionsCommon[\"OP_PUSHBYTES_52\"] = \"Push the next 52 bytes onto the stack.\";\n    OpcodeDescriptionsCommon[\"OP_PUSHBYTES_53\"] = \"Push the next 53 bytes onto the stack.\";\n    OpcodeDescriptionsCommon[\"OP_PUSHBYTES_54\"] = \"Push the next 54 bytes onto the stack.\";\n    OpcodeDescriptionsCommon[\"OP_PUSHBYTES_55\"] = \"Push the next 55 bytes onto the stack.\";\n    OpcodeDescriptionsCommon[\"OP_PUSHBYTES_56\"] = \"Push the next 56 bytes onto the stack.\";\n    OpcodeDescriptionsCommon[\"OP_PUSHBYTES_57\"] = \"Push the next 57 bytes onto the stack.\";\n    OpcodeDescriptionsCommon[\"OP_PUSHBYTES_58\"] = \"Push the next 58 bytes onto the stack.\";\n    OpcodeDescriptionsCommon[\"OP_PUSHBYTES_59\"] = \"Push the next 59 bytes onto the stack.\";\n    OpcodeDescriptionsCommon[\"OP_PUSHBYTES_60\"] = \"Push the next 60 bytes onto the stack.\";\n    OpcodeDescriptionsCommon[\"OP_PUSHBYTES_61\"] = \"Push the next 61 bytes onto the stack.\";\n    OpcodeDescriptionsCommon[\"OP_PUSHBYTES_62\"] = \"Push the next 62 bytes onto the stack.\";\n    OpcodeDescriptionsCommon[\"OP_PUSHBYTES_63\"] = \"Push the next 63 bytes onto the stack.\";\n    OpcodeDescriptionsCommon[\"OP_PUSHBYTES_64\"] = \"Push the next 64 bytes onto the stack.\";\n    OpcodeDescriptionsCommon[\"OP_PUSHBYTES_65\"] = \"Push the next 65 bytes onto the stack.\";\n    OpcodeDescriptionsCommon[\"OP_PUSHBYTES_66\"] = \"Push the next 66 bytes onto the stack.\";\n    OpcodeDescriptionsCommon[\"OP_PUSHBYTES_67\"] = \"Push the next 67 bytes onto the stack.\";\n    OpcodeDescriptionsCommon[\"OP_PUSHBYTES_68\"] = \"Push the next 68 bytes onto the stack.\";\n    OpcodeDescriptionsCommon[\"OP_PUSHBYTES_69\"] = \"Push the next 69 bytes onto the stack.\";\n    OpcodeDescriptionsCommon[\"OP_PUSHBYTES_70\"] = \"Push the next 70 bytes onto the stack.\";\n    OpcodeDescriptionsCommon[\"OP_PUSHBYTES_71\"] = \"Push the next 71 bytes onto the stack.\";\n    OpcodeDescriptionsCommon[\"OP_PUSHBYTES_72\"] = \"Push the next 72 bytes onto the stack.\";\n    OpcodeDescriptionsCommon[\"OP_PUSHBYTES_73\"] = \"Push the next 73 bytes onto the stack.\";\n    OpcodeDescriptionsCommon[\"OP_PUSHBYTES_74\"] = \"Push the next 74 bytes onto the stack.\";\n    OpcodeDescriptionsCommon[\"OP_PUSHBYTES_75\"] = \"Push the next 75 bytes onto the stack.\";\n    OpcodeDescriptionsCommon[\"OP_PUSHDATA_1\"] = \"Read the next Uint8 and push that number of bytes onto the stack.\";\n    OpcodeDescriptionsCommon[\"OP_PUSHDATA_2\"] = \"Read the next little-endian Uint16 and push that number of bytes onto the stack.\";\n    OpcodeDescriptionsCommon[\"OP_PUSHDATA_4\"] = \"Read the next little-endian Uint32 and push that number of bytes onto the stack.\";\n    OpcodeDescriptionsCommon[\"OP_1NEGATE\"] = \"Push the Script Number -1 onto the stack.\";\n    OpcodeDescriptionsCommon[\"OP_RESERVED\"] = \"Error unless found in an unexecuted conditional branch. Note: OP_RESERVED does not count toward the opcode limit.\";\n    OpcodeDescriptionsCommon[\"OP_1\"] = \"Push the Script Number 1 onto the stack.\";\n    OpcodeDescriptionsCommon[\"OP_2\"] = \"Push the Script Number 2 onto the stack.\";\n    OpcodeDescriptionsCommon[\"OP_3\"] = \"Push the Script Number 3 onto the stack.\";\n    OpcodeDescriptionsCommon[\"OP_4\"] = \"Push the Script Number 4 onto the stack.\";\n    OpcodeDescriptionsCommon[\"OP_5\"] = \"Push the Script Number 5 onto the stack.\";\n    OpcodeDescriptionsCommon[\"OP_6\"] = \"Push the Script Number 6 onto the stack.\";\n    OpcodeDescriptionsCommon[\"OP_7\"] = \"Push the Script Number 7 onto the stack.\";\n    OpcodeDescriptionsCommon[\"OP_8\"] = \"Push the Script Number 8 onto the stack.\";\n    OpcodeDescriptionsCommon[\"OP_9\"] = \"Push the Script Number 9 onto the stack.\";\n    OpcodeDescriptionsCommon[\"OP_10\"] = \"Push the Script Number 10 onto the stack.\";\n    OpcodeDescriptionsCommon[\"OP_11\"] = \"Push the Script Number 11 onto the stack.\";\n    OpcodeDescriptionsCommon[\"OP_12\"] = \"Push the Script Number 12 onto the stack.\";\n    OpcodeDescriptionsCommon[\"OP_13\"] = \"Push the Script Number 13 onto the stack.\";\n    OpcodeDescriptionsCommon[\"OP_14\"] = \"Push the Script Number 14 onto the stack.\";\n    OpcodeDescriptionsCommon[\"OP_15\"] = \"Push the Script Number 15 onto the stack.\";\n    OpcodeDescriptionsCommon[\"OP_16\"] = \"Push the Script Number 16 onto the stack.\";\n    OpcodeDescriptionsCommon[\"OP_NOP\"] = \"No operation. Note: OP_NOP counts toward the opcode limit.\";\n    OpcodeDescriptionsCommon[\"OP_VER\"] = \"Error unless found in an unexecuted conditional branch. Note: OP_VER counts toward the opcode limit. (Historically, this pushed a protocol version number to the stack.)\";\n    OpcodeDescriptionsCommon[\"OP_IF\"] = \"Pop the top item from the stack. If it is not \\\"truthy\\\", skip evaluation until the matching OP_ELSE or OP_ENDIF.\";\n    OpcodeDescriptionsCommon[\"OP_NOTIF\"] = \"Evaluate OP_NOT followed by OP_IF.\";\n    OpcodeDescriptionsCommon[\"OP_VERIF\"] = \"Error, even when found in an unexecuted conditional branch. (Historically, this was a combination of OP_VER and OP_IF.)\";\n    OpcodeDescriptionsCommon[\"OP_VERNOTIF\"] = \"Error, even when found in an unexecuted conditional branch. (Historically, this was a combination of OP_VER and OP_NOTIF.)\";\n    OpcodeDescriptionsCommon[\"OP_ELSE\"] = \"Invert conditional evaluation within the current OP_IF ... OP_ENDIF block. (If evaluation is enabled, disable it, if it is disabled, enable it.)\";\n    OpcodeDescriptionsCommon[\"OP_ENDIF\"] = \"End the current OP_IF ... OP_ENDIF block.\";\n    OpcodeDescriptionsCommon[\"OP_VERIFY\"] = \"Pop the top item from the stack and error if it isn't \\\"truthy\\\".\";\n    OpcodeDescriptionsCommon[\"OP_RETURN\"] = \"Error when executed.\";\n    OpcodeDescriptionsCommon[\"OP_TOALTSTACK\"] = \"Pop the top item from the stack and push it onto the alternate stack.\";\n    OpcodeDescriptionsCommon[\"OP_FROMALTSTACK\"] = \"Pop the top item from the alternate stack and push it onto the stack.\";\n    OpcodeDescriptionsCommon[\"OP_2DROP\"] = \"Pop the top 2 items from the stack and discard them.\";\n    OpcodeDescriptionsCommon[\"OP_2DUP\"] = \"Duplicate the top 2 items on the stack. (E.g. [a, b] -> [a, b, a, b])\";\n    OpcodeDescriptionsCommon[\"OP_3DUP\"] = \"Duplicate the top 3 items on the stack. (E.g. [a, b, c] -> [a, b, c, a, b, c])\";\n    OpcodeDescriptionsCommon[\"OP_2OVER\"] = \"Duplicate the 2 items beginning at a depth of 2 on the stack. (E.g. [a, b, c, d] -> [a, b, c, d, a, b])\";\n    OpcodeDescriptionsCommon[\"OP_2ROT\"] = \"Rotate the top 6 items on the stack, bringing the fifth and sixth items to the top. (E.g. [a, b, c, d, e, f] -> [c, d, e, f, a, b])\";\n    OpcodeDescriptionsCommon[\"OP_2SWAP\"] = \"Swap the positions of the top two pairs of items on the stack. (E.g. [a, b, c, d] -> [c, d, a, b])\";\n    OpcodeDescriptionsCommon[\"OP_IFDUP\"] = \"If the top item on the stack is \\\"truthy\\\", duplicate it.\";\n    OpcodeDescriptionsCommon[\"OP_DEPTH\"] = \"Push the current number of stack items as a Script Number.\";\n    OpcodeDescriptionsCommon[\"OP_DROP\"] = \"Pop the top item from the stack and discard it. (E.g. [a] -> [])\";\n    OpcodeDescriptionsCommon[\"OP_DUP\"] = \"Duplicate the top item on the stack. (E.g. [a] -> [a, a])\";\n    OpcodeDescriptionsCommon[\"OP_NIP\"] = \"Remove the second-to-top item from the stack. (E.g. [a, b] -> [b])\";\n    OpcodeDescriptionsCommon[\"OP_OVER\"] = \"Duplicate the second-to-top item on the stack. (E.g. [a, b] -> [a, b, a])\";\n    OpcodeDescriptionsCommon[\"OP_PICK\"] = \"Pop the top item from the stack as a Script Number. Duplicate the item at that depth (zero-indexed), placing it on top of the stack. (E.g. [a, b, c, 2] -> [a, b, c, a])\";\n    OpcodeDescriptionsCommon[\"OP_ROLL\"] = \"Pop the top item from the stack as a Script Number. Move the item at that depth (zero-indexed) to the top of the stack. (E.g. [a, b, c, 2] -> [b, c, a])\";\n    OpcodeDescriptionsCommon[\"OP_ROT\"] = \"Rotate the top 3 items on the stack, bringing the third item to the top. (E.g. [a, b, c] -> [b, c, a])\";\n    OpcodeDescriptionsCommon[\"OP_SWAP\"] = \"Swap the top two items on the stack. (E.g. [a, b] -> [b, a])\";\n    OpcodeDescriptionsCommon[\"OP_TUCK\"] = \"Duplicate the item at the top of the stack, inserting it below the second-to-top item. (E.g. [a, b] -> [b, a, b])\";\n    OpcodeDescriptionsCommon[\"OP_CAT\"] = \"Error, even when found in an unexecuted conditional branch. (Historically, this concatenated two stack items.)\";\n    OpcodeDescriptionsCommon[\"OP_SUBSTR\"] = \"Error, even when found in an unexecuted conditional branch. (Historically, this returned a section of a stack item.)\";\n    OpcodeDescriptionsCommon[\"OP_LEFT\"] = \"Error, even when found in an unexecuted conditional branch. (Historically, this returned a section to the left of a point in a stack item.)\";\n    OpcodeDescriptionsCommon[\"OP_RIGHT\"] = \"Error, even when found in an unexecuted conditional branch. (Historically, this returned a section to the right of a point in a stack item.)\";\n    OpcodeDescriptionsCommon[\"OP_SIZE\"] = \"Push the byte-length of the top stack item as a Script Number.\";\n    OpcodeDescriptionsCommon[\"OP_INVERT\"] = \"Error, even when found in an unexecuted conditional branch. (Historically, this flipped all the bits in a stack item.)\";\n    OpcodeDescriptionsCommon[\"OP_AND\"] = \"Error, even when found in an unexecuted conditional branch. (Historically, this performed a boolean AND on each bit in two stack items.)\";\n    OpcodeDescriptionsCommon[\"OP_OR\"] = \"Error, even when found in an unexecuted conditional branch. (Historically, this performed a boolean OR on each bit in two stack items.)\";\n    OpcodeDescriptionsCommon[\"OP_XOR\"] = \"Error, even when found in an unexecuted conditional branch. (Historically, this performed a boolean XOR on each bit in two stack items.)\";\n    OpcodeDescriptionsCommon[\"OP_EQUAL\"] = \"Pop the top two items from the stack and compare them byte-by-byte. If they are the same, push a Script Number 1, otherwise push a Script Number 0.\";\n    OpcodeDescriptionsCommon[\"OP_EQUALVERIFY\"] = \"Pop the top two items from the stack and compare them byte-by-byte. If the values are different, error. (This operation is a combination of OP_EQUAL followed by OP_VERIFY.)\";\n    OpcodeDescriptionsCommon[\"OP_RESERVED1\"] = \"Error unless found in an unexecuted conditional branch. Note: OP_RESERVED1 counts toward the opcode limit.\";\n    OpcodeDescriptionsCommon[\"OP_RESERVED2\"] = \"Error unless found in an unexecuted conditional branch. Note: OP_RESERVED2 counts toward the opcode limit.\";\n    OpcodeDescriptionsCommon[\"OP_1ADD\"] = \"Pop the top item from the stack as a Script Number, add 1, then push the result.\";\n    OpcodeDescriptionsCommon[\"OP_1SUB\"] = \"Pop the top item from the stack as a Script Number, subtract 1, then push the result.\";\n    OpcodeDescriptionsCommon[\"OP_2MUL\"] = \"Error, even when found in an unexecuted conditional branch. (Historically, this multiplied a Script Number by 2.)\";\n    OpcodeDescriptionsCommon[\"OP_2DIV\"] = \"Error, even when found in an unexecuted conditional branch. (Historically, this divided a Script Number by 2.)\";\n    OpcodeDescriptionsCommon[\"OP_NEGATE\"] = \"Pop the top item from the stack as a Script Number, negate it, then push the result.\";\n    OpcodeDescriptionsCommon[\"OP_ABS\"] = \"Pop the top item from the stack as a Script Number, take its absolute value, then push the result.\";\n    OpcodeDescriptionsCommon[\"OP_NOT\"] = \"Pop the top item from the stack as a Script Number. If its value is 0, push a Script Number 1, otherwise, push a Script Number 0.\";\n    OpcodeDescriptionsCommon[\"OP_0NOTEQUAL\"] = \"Pop the top item from the stack as a Script Number. If its value is not 0, push a Script Number 1, otherwise, push a Script Number 0.\";\n    OpcodeDescriptionsCommon[\"OP_ADD\"] = \"Pop the top two items from the stack as Script Numbers. Add them, then push the result.\";\n    OpcodeDescriptionsCommon[\"OP_SUB\"] = \"Pop the top two items from the stack as Script Numbers. Subtract the top item from the second item, then push the result.\";\n    OpcodeDescriptionsCommon[\"OP_MUL\"] = \"Error, even when found in an unexecuted conditional branch. (Historically, this multiplied two Script Numbers.)\";\n    OpcodeDescriptionsCommon[\"OP_DIV\"] = \"Error, even when found in an unexecuted conditional branch. (Historically, this divided two Script Numbers.)\";\n    OpcodeDescriptionsCommon[\"OP_MOD\"] = \"Error, even when found in an unexecuted conditional branch. (Historically, this returned the remainder after dividing one Script Number by another.)\";\n    OpcodeDescriptionsCommon[\"OP_LSHIFT\"] = \"Error, even when found in an unexecuted conditional branch. (Historically, this performed a sign-preserving, left bit shift.)\";\n    OpcodeDescriptionsCommon[\"OP_RSHIFT\"] = \"Error, even when found in an unexecuted conditional branch. (Historically, this performed a sign-preserving, right bit shift.)\";\n    OpcodeDescriptionsCommon[\"OP_BOOLAND\"] = \"Pop the top two items from the stack as Script Numbers. If neither value is a Script Number 0, push a Script Number 1. Otherwise, push a Script Number 0.\";\n    OpcodeDescriptionsCommon[\"OP_BOOLOR\"] = \"Pop the top two items from the stack as Script Numbers. If either value is a Script Number 1, push a Script Number 1. Otherwise, push a Script Number 0.\";\n    OpcodeDescriptionsCommon[\"OP_NUMEQUAL\"] = \"Pop the top two items from the stack as Script Numbers. If the values are equal, push a Script Number 1. Otherwise, push a Script Number 0.\";\n    OpcodeDescriptionsCommon[\"OP_NUMEQUALVERIFY\"] = \"Pop the top two items from the stack as Script Numbers. If the values are different, error. (This operation is a combination of OP_NUMEQUAL followed by OP_VERIFY.)\";\n    OpcodeDescriptionsCommon[\"OP_NUMNOTEQUAL\"] = \"Pop the top two items from the stack as Script Numbers. If the values are not equal, push a Script Number 1. Otherwise, push a Script Number 0.\";\n    OpcodeDescriptionsCommon[\"OP_LESSTHAN\"] = \"Pop the top two items from the stack as Script Numbers. If the second item is less than top item, push a Script Number 1. Otherwise, push a Script Number 0.\";\n    OpcodeDescriptionsCommon[\"OP_GREATERTHAN\"] = \"Pop the top two items from the stack as Script Numbers. If the second item is greater than top item, push a Script Number 1. Otherwise, push a Script Number 0.\";\n    OpcodeDescriptionsCommon[\"OP_LESSTHANOREQUAL\"] = \"Pop the top two items from the stack as Script Numbers. If the second item is less than or equal to the top item, push a Script Number 1. Otherwise, push a Script Number 0.\";\n    OpcodeDescriptionsCommon[\"OP_GREATERTHANOREQUAL\"] = \"Pop the top two items from the stack as Script Numbers. If the second item is greater than or equal to the top item, push a Script Number 1. Otherwise, push a Script Number 0.\";\n    OpcodeDescriptionsCommon[\"OP_MIN\"] = \"Pop the top two items from the stack as Script Numbers. Push the smaller of the two numbers.\";\n    OpcodeDescriptionsCommon[\"OP_MAX\"] = \"Pop the top two items from the stack as Script Numbers. Push the larger of the two numbers.\";\n    OpcodeDescriptionsCommon[\"OP_WITHIN\"] = \"Pop the top three items from the stack as Script Numbers. If the top number is within the range defined by the following two numbers (left-inclusive), push a Script Number 1. Otherwise, push a Script Number 0. (E.g. for [a, b, c]: if (b <= a), and (a < c), [1]. Else [0].)\";\n    OpcodeDescriptionsCommon[\"OP_RIPEMD160\"] = \"Pop the top item from the stack and pass it through ripemd160, pushing the result onto the stack.\";\n    OpcodeDescriptionsCommon[\"OP_SHA1\"] = \"Pop the top item from the stack and pass it through sha1, pushing the result onto the stack.\";\n    OpcodeDescriptionsCommon[\"OP_SHA256\"] = \"Pop the top item from the stack and pass it through sha256, pushing the result onto the stack.\";\n    OpcodeDescriptionsCommon[\"OP_HASH160\"] = \"Pop the top item from the stack and pass it through sha256, then ripemd160, pushing the result onto the stack.\";\n    OpcodeDescriptionsCommon[\"OP_HASH256\"] = \"Pop the top item from the stack and pass it through sha256 twice, pushing the result onto the stack.\";\n    OpcodeDescriptionsCommon[\"OP_CODESEPARATOR\"] = \"Update the value of lastCodeSeparator to the instruction pointer's current value. (This reduces the coverage of signing serializations used in signature verification operations.)\";\n    OpcodeDescriptionsCommon[\"OP_CHECKSIG\"] = \"Pop the top two items from the stack. Treat the top as a signature and the second as a public key. If the signature is valid, push a Script Number 1, otherwise push a Script Number 0.\";\n    OpcodeDescriptionsCommon[\"OP_CHECKSIGVERIFY\"] = \"Pop the top two items from the stack. Treat the top as a signature and the second as a public key. If the signature is not valid, error. (This operation is a combination of OP_CHECKSIG followed by OP_VERIFY.)\";\n    OpcodeDescriptionsCommon[\"OP_CHECKMULTISIG\"] = \"Pop items from the stack: first pop the Script Number of public keys, then pop each of those public keys. Next, pop the Script Number of required signatures, then pop each of those signatures. Finally, pop a final Script Number which must be 0 due to a protocol bug. Checking each signature against each public key in order, if all signatures are valid \\u2013 and the required number of signatures have been provided \\u2013 push a Script Number 1, otherwise push a Script Number 0.\";\n    OpcodeDescriptionsCommon[\"OP_CHECKMULTISIGVERIFY\"] = \"Pop items from the stack: first pop the Script Number of public keys, then pop each of those public keys. Next, pop the Script Number of required signatures, then pop each of those signatures. Finally, (due to a protocol bug) pop an unused final Script Number which must be 0. Checking each signature against each public key in order, if any signatures are invalid \\u2013 or the required number of signatures have not been provided \\u2013 error. (This operation is a combination of OP_CHECKMULTISIG followed by OP_VERIFY.)\";\n    OpcodeDescriptionsCommon[\"OP_NOP1\"] = \"No operation (reserved for future expansion). Note: OP_NOP1 counts toward the opcode limit.\";\n    OpcodeDescriptionsCommon[\"OP_CHECKLOCKTIMEVERIFY\"] = \"Verify the transaction occurs after an absolute block time or height: read the top item on the stack as a Script Number (without removing it), and compare it to the transaction's locktime. If the required locktime has not passed, or if locktime has been disabled by a maximized sequence number, error.\";\n    OpcodeDescriptionsCommon[\"OP_CHECKSEQUENCEVERIFY\"] = \"Verify the transaction occurs after a relative block time or height has passed since the creation of the output being spent: read the top item on the stack as a Script Number (without removing it), and compare it to the input's sequence number. If the required locktime has not passed, or if locktime has been disabled by a flag or the transaction version, error.\";\n    OpcodeDescriptionsCommon[\"OP_NOP4\"] = \"No operation (reserved for future expansion). Note: OP_NOP4 counts toward the opcode limit.\";\n    OpcodeDescriptionsCommon[\"OP_NOP6\"] = \"No operation (reserved for future expansion). Note: OP_NOP6 counts toward the opcode limit.\";\n    OpcodeDescriptionsCommon[\"OP_NOP5\"] = \"No operation (reserved for future expansion). Note: OP_NOP5 counts toward the opcode limit.\";\n    OpcodeDescriptionsCommon[\"OP_NOP7\"] = \"No operation (reserved for future expansion). Note: OP_NOP7 counts toward the opcode limit.\";\n    OpcodeDescriptionsCommon[\"OP_NOP8\"] = \"No operation (reserved for future expansion). Note: OP_NOP8 counts toward the opcode limit.\";\n    OpcodeDescriptionsCommon[\"OP_NOP9\"] = \"No operation (reserved for future expansion). Note: OP_NOP9 counts toward the opcode limit.\";\n    OpcodeDescriptionsCommon[\"OP_NOP10\"] = \"No operation (reserved for future expansion). Note: OP_NOP10 counts toward the opcode limit.\";\n})(OpcodeDescriptionsCommon || (OpcodeDescriptionsCommon = {}));\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGVzY3JpcHRpb25zLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vc3JjL2xpYi9hdXRoL2luc3RydWN0aW9uLXNldHMvY29tbW9uL2Rlc2NyaXB0aW9ucy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxNQUFNLENBQU4sSUFBWSx3QkEyTFg7QUEzTEQsV0FBWSx3QkFBd0I7SUFDbEMsNkVBQWlELENBQUE7SUFDakQsaUZBQXFELENBQUE7SUFDckQsb0ZBQXdELENBQUE7SUFDeEQsb0ZBQXdELENBQUE7SUFDeEQsb0ZBQXdELENBQUE7SUFDeEQsb0ZBQXdELENBQUE7SUFDeEQsb0ZBQXdELENBQUE7SUFDeEQsb0ZBQXdELENBQUE7SUFDeEQsb0ZBQXdELENBQUE7SUFDeEQsb0ZBQXdELENBQUE7SUFDeEQsc0ZBQTBELENBQUE7SUFDMUQsc0ZBQTBELENBQUE7SUFDMUQsc0ZBQTBELENBQUE7SUFDMUQsc0ZBQTBELENBQUE7SUFDMUQsc0ZBQTBELENBQUE7SUFDMUQsc0ZBQTBELENBQUE7SUFDMUQsc0ZBQTBELENBQUE7SUFDMUQsc0ZBQTBELENBQUE7SUFDMUQsc0ZBQTBELENBQUE7SUFDMUQsc0ZBQTBELENBQUE7SUFDMUQsc0ZBQTBELENBQUE7SUFDMUQsc0ZBQTBELENBQUE7SUFDMUQsc0ZBQTBELENBQUE7SUFDMUQsc0ZBQTBELENBQUE7SUFDMUQsc0ZBQTBELENBQUE7SUFDMUQsc0ZBQTBELENBQUE7SUFDMUQsc0ZBQTBELENBQUE7SUFDMUQsc0ZBQTBELENBQUE7SUFDMUQsc0ZBQTBELENBQUE7SUFDMUQsc0ZBQTBELENBQUE7SUFDMUQsc0ZBQTBELENBQUE7SUFDMUQsc0ZBQTBELENBQUE7SUFDMUQsc0ZBQTBELENBQUE7SUFDMUQsc0ZBQTBELENBQUE7SUFDMUQsc0ZBQTBELENBQUE7SUFDMUQsc0ZBQTBELENBQUE7SUFDMUQsc0ZBQTBELENBQUE7SUFDMUQsc0ZBQTBELENBQUE7SUFDMUQsc0ZBQTBELENBQUE7SUFDMUQsc0ZBQTBELENBQUE7SUFDMUQsc0ZBQTBELENBQUE7SUFDMUQsc0ZBQTBELENBQUE7SUFDMUQsc0ZBQTBELENBQUE7SUFDMUQsc0ZBQTBELENBQUE7SUFDMUQsc0ZBQTBELENBQUE7SUFDMUQsc0ZBQTBELENBQUE7SUFDMUQsc0ZBQTBELENBQUE7SUFDMUQsc0ZBQTBELENBQUE7SUFDMUQsc0ZBQTBELENBQUE7SUFDMUQsc0ZBQTBELENBQUE7SUFDMUQsc0ZBQTBELENBQUE7SUFDMUQsc0ZBQTBELENBQUE7SUFDMUQsc0ZBQTBELENBQUE7SUFDMUQsc0ZBQTBELENBQUE7SUFDMUQsc0ZBQTBELENBQUE7SUFDMUQsc0ZBQTBELENBQUE7SUFDMUQsc0ZBQTBELENBQUE7SUFDMUQsc0ZBQTBELENBQUE7SUFDMUQsc0ZBQTBELENBQUE7SUFDMUQsc0ZBQTBELENBQUE7SUFDMUQsc0ZBQTBELENBQUE7SUFDMUQsc0ZBQTBELENBQUE7SUFDMUQsc0ZBQTBELENBQUE7SUFDMUQsc0ZBQTBELENBQUE7SUFDMUQsc0ZBQTBELENBQUE7SUFDMUQsc0ZBQTBELENBQUE7SUFDMUQsc0ZBQTBELENBQUE7SUFDMUQsc0ZBQTBELENBQUE7SUFDMUQsc0ZBQTBELENBQUE7SUFDMUQsc0ZBQTBELENBQUE7SUFDMUQsc0ZBQTBELENBQUE7SUFDMUQsc0ZBQTBELENBQUE7SUFDMUQsc0ZBQTBELENBQUE7SUFDMUQsc0ZBQTBELENBQUE7SUFDMUQsc0ZBQTBELENBQUE7SUFDMUQsc0ZBQTBELENBQUE7SUFDMUQsK0dBQW1GLENBQUE7SUFDbkYsOEhBQWtHLENBQUE7SUFDbEcsOEhBQWtHLENBQUE7SUFDbEcsb0ZBQXdELENBQUE7SUFDeEQsNkpBQWlJLENBQUE7SUFDakksNkVBQWlELENBQUE7SUFDakQsNkVBQWlELENBQUE7SUFDakQsNkVBQWlELENBQUE7SUFDakQsNkVBQWlELENBQUE7SUFDakQsNkVBQWlELENBQUE7SUFDakQsNkVBQWlELENBQUE7SUFDakQsNkVBQWlELENBQUE7SUFDakQsNkVB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","import { ConsensusBCH } from '../bch/bch';\nimport { isDefinedSigningSerializationType } from './signing-serialization';\nexport const isValidUncompressedPublicKeyEncoding = (publicKey) => publicKey.length === 65 /* uncompressedByteLength */ &&\n    publicKey[0] === 4 /* uncompressedHeaderByte */\n    ? true\n    : false;\nexport const isValidCompressedPublicKeyEncoding = (publicKey) => publicKey.length === 33 /* compressedByteLength */ &&\n    (publicKey[0] === 2 /* compressedHeaderByteEven */ ||\n        publicKey[0] === 3 /* compressedHeaderByteOdd */)\n    ? true\n    : false;\nexport const isValidPublicKeyEncoding = (publicKey) => isValidCompressedPublicKeyEncoding(publicKey) ||\n    isValidUncompressedPublicKeyEncoding(publicKey);\nconst isNegative = (value) => \n// tslint:disable-next-line:no-bitwise\n(value & 128 /* negative */) !== 0;\nconst hasUnnecessaryPadding = (length, firstByte, secondByte) => length > 1 && firstByte === 0 && !isNegative(secondByte);\nconst isValidInteger = (signature, tagIndex, length, valueIndex) => signature[tagIndex] === 2 /* integerTagType */ &&\n    length !== 0 &&\n    !isNegative(signature[valueIndex]) &&\n    !hasUnnecessaryPadding(length, signature[valueIndex], signature[valueIndex + 1]);\n/**\n * Validate a DER-encoded signature.\n *\n * @remarks\n * This function is consensus-critical since BIP66, but differs from the BIP66\n * specification in that it does not validate the existence of a signing\n * serialization type byte at the end of the signature (to support\n * OP_CHECKDATASIG). To validate a bitcoin-encoded signature (including null\n * signatures), use `isValidSignatureEncodingBCH`.\n *\n * @internalRemarks\n * From the Bitcoin ABC C++ implementation:\n *\n * Format: 0x30 [total-length] 0x02 [R-length] [R] 0x02 [S-length] [S]\n * total-length: 1-byte length descriptor of everything that follows,\n * excluding the sighash byte.\n * R-length: 1-byte length descriptor of the R value that follows.\n * R: arbitrary-length big-endian encoded R value. It must use the\n * shortest possible encoding for a positive integers (which means no null\n * bytes at the start, except a single one when the next byte has its highest\n * bit set).\n * S-length: 1-byte length descriptor of the S value that follows.\n * S: arbitrary-length big-endian encoded S value. The same rules apply.\n */\n// TODO: unit test cases\n// tslint:disable-next-line:cyclomatic-complexity\nexport const isValidSignatureEncodingDER = (signature) => {\n    const correctLengthRange = signature.length > 8 /* minimumLength */ &&\n        signature.length < 72 /* maximumLength */;\n    const correctSequenceTagType = signature[0 /* sequenceTagIndex */] === 48 /* sequenceTagType */;\n    const correctSequenceLength = signature[1 /* sequenceLengthIndex */] ===\n        signature.length - 2 /* sequenceMetadataBytes */;\n    const rLength = signature[3 /* rLengthIndex */];\n    // tslint:disable-next-line: no-if-statement\n    if (rLength === undefined) {\n        return false;\n    }\n    const consistentRLength = rLength <= signature.length - 7 /* minimumNonRValueBytes */;\n    const rIsValid = isValidInteger(signature, 2 /* rTagIndex */, rLength, 4 /* rValueIndex */);\n    const sTagIndex = 4 /* rValueIndex */ + rLength; // tslint:disable-line: restrict-plus-operands\n    const sLengthIndex = sTagIndex + 1;\n    const sLength = signature[sLengthIndex];\n    // tslint:disable-next-line: no-if-statement\n    if (sLength === undefined) {\n        return false;\n    }\n    const sValueIndex = sLengthIndex + 1;\n    const consistentSLength = sValueIndex + sLength === signature.length;\n    const sIsValid = isValidInteger(signature, sTagIndex, sLength, sValueIndex);\n    return (correctLengthRange &&\n        correctSequenceTagType &&\n        correctSequenceLength &&\n        consistentRLength &&\n        rIsValid &&\n        consistentSLength &&\n        sIsValid);\n};\n/**\n * Validate the encoding of a transaction signature, including a signing\n * serialization type byte (A.K.A. \"sighash\" byte).\n *\n * @param transactionSignature the full transaction signature\n */\nexport const isValidSignatureEncodingBCHTransaction = (transactionSignature) => transactionSignature.length === 0 ||\n    transactionSignature.length === ConsensusBCH.schnorrSignatureLength + 1 ||\n    (isDefinedSigningSerializationType(transactionSignature[transactionSignature.length - 1]) &&\n        isValidSignatureEncodingDER(transactionSignature.slice(0, transactionSignature.length - 1)));\n/**\n * Split a bitcoin-encoded signature into a signature and signing serialization\n * type.\n *\n * While a bitcoin-encoded signature only includes a single byte to encode the\n * signing serialization type, a 3-byte forkId can be appended to the signing\n * serialization to provide replay-protection between different forks. (See\n * Bitcoin Cash's Replay Protected Sighash spec for details.)\n *\n * @param signature a signature which passes `isValidSignatureEncoding`\n */\nexport const decodeBitcoinSignature = (encodedSignature) => ({\n    signature: encodedSignature.slice(0, encodedSignature.length - 1),\n    signingSerializationType: new Uint8Array([\n        encodedSignature[encodedSignature.length - 1]\n    ])\n});\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZW5jb2RpbmcuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9zcmMvbGliL2F1dGgvaW5zdHJ1Y3Rpb24tc2V0cy9jb21tb24vZW5jb2RpbmcudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLFlBQVksQ0FBQztBQUUxQyxPQUFPLEVBQUUsaUNBQWlDLEVBQUUsTUFBTSx5QkFBeUIsQ0FBQztBQVU1RSxNQUFNLENBQUMsTUFBTSxvQ0FBb0MsR0FBRyxDQUFDLFNBQXFCLEVBQUUsRUFBRSxDQUM1RSxTQUFTLENBQUMsTUFBTSxvQ0FBcUM7SUFDckQsU0FBUyxDQUFDLENBQUMsQ0FBQyxtQ0FBcUM7SUFDL0MsQ0FBQyxDQUFDLElBQUk7SUFDTixDQUFDLENBQUMsS0FBSyxDQUFDO0FBRVosTUFBTSxDQUFDLE1BQU0sa0NBQWtDLEdBQUcsQ0FBQyxTQUFxQixFQUFFLEVBQUUsQ0FDMUUsU0FBUyxDQUFDLE1BQU0sa0NBQW1DO0lBQ25ELENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxxQ0FBdUM7UUFDbEQsU0FBUyxDQUFDLENBQUMsQ0FBQyxvQ0FBc0MsQ0FBQztJQUNuRCxDQUFDLENBQUMsSUFBSTtJQUNOLENBQUMsQ0FBQyxLQUFLLENBQUM7QUFFWixNQUFNLENBQUMsTUFBTSx3QkFBd0IsR0FBRyxDQUFDLFNBQXFCLEVBQUUsRUFBRSxDQUNoRSxrQ0FBa0MsQ0FBQyxTQUFTLENBQUM7SUFDN0Msb0NBQW9DLENBQUMsU0FBUyxDQUFDLENBQUM7QUFxQ2xELE1BQU0sVUFBVSxHQUFHLENBQUMsS0FBYSxFQUFFLEVBQUU7QUFDbkMsc0NBQXNDO0FBQ3RDLENBQUMsS0FBSyxxQkFBZ0IsQ0FBQyxLQUFLLENBQUMsQ0FBQztBQUVoQyxNQUFNLHFCQUFxQixHQUFHLENBQzVCLE1BQWMsRUFDZCxTQUFpQixFQUNqQixVQUFrQixFQUNsQixFQUFFLENBQUMsTUFBTSxHQUFHLENB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","export var AuthenticationErrorCommon;\n(function (AuthenticationErrorCommon) {\n    AuthenticationErrorCommon[\"calledReserved\"] = \"Program called an unassigned, reserved operation.\";\n    AuthenticationErrorCommon[\"calledReturn\"] = \"Program called an OP_RETURN operation.\";\n    AuthenticationErrorCommon[\"calledUpgradableNop\"] = \"Program called an disallowed upgradable non-operation (OP_NOP1-OP_NOP10).\";\n    AuthenticationErrorCommon[\"checkSequenceUnavailable\"] = \"Program called an OP_CHECKSEQUENCEVERIFY operation, but OP_CHECKSEQUENCEVERIFY requires transaction version 2 or higher.\";\n    AuthenticationErrorCommon[\"disabledOpcode\"] = \"Program contains a disabled opcode.\";\n    AuthenticationErrorCommon[\"emptyAlternateStack\"] = \"Tried to read from an empty alternate stack.\";\n    AuthenticationErrorCommon[\"emptyStack\"] = \"Tried to read from an empty stack.\";\n    AuthenticationErrorCommon[\"exceededMaximumBytecodeLengthLocking\"] = \"The provided locking bytecode exceeds the maximum bytecode length (10,000 bytes).\";\n    AuthenticationErrorCommon[\"exceededMaximumBytecodeLengthUnlocking\"] = \"The provided unlocking bytecode exceeds the maximum bytecode length (10,000 bytes).\";\n    AuthenticationErrorCommon[\"exceededMaximumStackDepth\"] = \"Program exceeded the maximum stack depth (1,000 items).\";\n    AuthenticationErrorCommon[\"exceededMaximumOperationCount\"] = \"Program exceeded the maximum operation count (201 operations).\";\n    AuthenticationErrorCommon[\"exceedsMaximumMultisigPublicKeyCount\"] = \"Program called an OP_CHECKMULTISIG which exceeds the maximum public key count (20 public keys).\";\n    AuthenticationErrorCommon[\"exceedsMaximumPush\"] = \"Push exceeds the push size limit of 520 bytes.\";\n    AuthenticationErrorCommon[\"failedVerify\"] = \"Program failed an OP_VERIFY operation.\";\n    AuthenticationErrorCommon[\"invalidStackIndex\"] = \"Tried to read from an invalid stack index.\";\n    AuthenticationErrorCommon[\"incompatibleLocktimeType\"] = \"Program called an OP_CHECKLOCKTIMEVERIFY operation with an incompatible locktime type. The transaction locktime and required locktime must both refer to either a block height or a block time.\";\n    AuthenticationErrorCommon[\"incompatibleSequenceType\"] = \"Program called an OP_CHECKSEQUENCEVERIFY operation with an incompatible sequence type flag. The input sequence number and required sequence number must both use the same sequence locktime type.\";\n    AuthenticationErrorCommon[\"insufficientPublicKeys\"] = \"Program called an OP_CHECKMULTISIG operation which requires signatures from more public keys than are provided.\";\n    AuthenticationErrorCommon[\"invalidNaturalNumber\"] = \"Invalid input: the key/signature count inputs for OP_CHECKMULTISIG require a natural number (n > 0).\";\n    AuthenticationErrorCommon[\"invalidProtocolBugValue\"] = \"The OP_CHECKMULTISIG protocol bug value must be a Script Number 0 (to comply with the \\\"NULLDUMMY\\\" rule).\";\n    AuthenticationErrorCommon[\"invalidPublicKeyEncoding\"] = \"Encountered an improperly encoded public key.\";\n    AuthenticationErrorCommon[\"invalidScriptNumber\"] = \"Invalid input: this operation requires a valid Script Number.\";\n    AuthenticationErrorCommon[\"invalidSignatureEncoding\"] = \"Encountered an improperly encoded signature.\";\n    AuthenticationErrorCommon[\"locktimeDisabled\"] = \"Program called an OP_CHECKLOCKTIMEVERIFY operation, but locktime is disabled for this transaction.\";\n    AuthenticationErrorCommon[\"malformedLockingBytecode\"] = \"The provided locking bytecode is malformed.\";\n    AuthenticationErrorCommon[\"malformedPush\"] = \"Program must be long enough to push the requested number of bytes.\";\n    AuthenticationErrorCommon[\"malformedUnlockingBytecode\"] = \"The provided unlocking bytecode is malformed.\";\n    AuthenticationErrorCommon[\"negativeLocktime\"] = \"Program called an OP_CHECKLOCKTIMEVERIFY or OP_CHECKSEQUENCEVERIFY operation with a negative locktime.\";\n    AuthenticationErrorCommon[\"nonMinimalPush\"] = \"Push operations must use the smallest possible encoding.\";\n    AuthenticationErrorCommon[\"nonNullSignatureFailure\"] = \"Program failed a signature verification with a non-null signature (violating the \\\"NULLFAIL\\\" rule).\";\n    AuthenticationErrorCommon[\"schnorrSizedSignatureInCheckMultiSig\"] = \"Program used a schnorr-sized signature (65 bytes) in an OP_CHECKMULTISIG operation.\";\n    AuthenticationErrorCommon[\"unexpectedElse\"] = \"Encountered an OP_ELSE outside of an OP_IF ... OP_ENDIF block.\";\n    AuthenticationErrorCommon[\"unexpectedEndIf\"] = \"Encountered an OP_ENDIF which is not following a matching OP_IF.\";\n    AuthenticationErrorCommon[\"unknownOpcode\"] = \"Called an unknown opcode.\";\n    AuthenticationErrorCommon[\"unmatchedSequenceDisable\"] = \"Program called an OP_CHECKSEQUENCEVERIFY operation requiring the disable flag, but the input's sequence number is missing the disable flag.\";\n    AuthenticationErrorCommon[\"unsatisfiedLocktime\"] = \"Program called an OP_CHECKLOCKTIMEVERIFY operation which requires a locktime greater than the transaction's locktime.\";\n    AuthenticationErrorCommon[\"unsatisfiedSequenceNumber\"] = \"Program called an OP_CHECKSEQUENCEVERIFY operation which requires a sequence number greater than the input's sequence number.\";\n})(AuthenticationErrorCommon || (AuthenticationErrorCommon = {}));\n/**\n * Applies the `error` to a `state`.\n *\n * @remarks\n * If the state already has an error, this method does not override it.\n * (Evaluation should end after the first encountered error, so further errors\n * aren't relevant.)\n */\nexport const applyError = (error, state) => ({\n    ...state,\n    error: state.error !== undefined ? state.error : error\n});\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXJyb3JzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vc3JjL2xpYi9hdXRoL2luc3RydWN0aW9uLXNldHMvY29tbW9uL2Vycm9ycy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQSxNQUFNLENBQU4sSUFBWSx5QkFzQ1g7QUF0Q0QsV0FBWSx5QkFBeUI7SUFDbkMsaUdBQW9FLENBQUE7SUFDcEUsb0ZBQXVELENBQUE7SUFDdkQsOEhBQWlHLENBQUE7SUFDakcsa0xBQXFKLENBQUE7SUFDckosbUZBQXNELENBQUE7SUFDdEQsaUdBQW9FLENBQUE7SUFDcEUsOEVBQWlELENBQUE7SUFDakQsdUpBQTBILENBQUE7SUFDMUgsMkpBQThILENBQUE7SUFDOUgsa0hBQXFGLENBQUE7SUFDckYsNkhBQWdHLENBQUE7SUFDaEcscUtBQXdJLENBQUE7SUFDeEksa0dBQXFFLENBQUE7SUFDckUsb0ZBQXVELENBQUE7SUFDdkQsNkZBQWdFLENBQUE7SUFDaEUseVBBQTROLENBQUE7SUFDNU4sMlBBQThOLENBQUE7SUFDOU4sdUtBQTBJLENBQUE7SUFDMUksMEpBQTZILENBQUE7SUFDN0gsbUtBQW9JLENBQUE7SUFDcEksdUdBQTBFLENBQUE7SUFDMUUsa0hBQXFGLENBQUE7SUFDckYsc0dBQXlFLENBQUE7SUFDekUsb0pBQXVILENBQUE7SUFDdkgscUdBQXdFLENBQUE7SUFDeEUsaUhBQW9GLENBQUE7SUFDcEYseUdBQTRFLENBQUE7SUFDNUUsd0pBQTJILENBQUE7SUFDM0gsd0dBQTJFLENBQUE7SUFDM0UsNkpBQThILENBQUE7SUFDOUgseUpBQTRILENBQUE7SUFDNUgsOEdBQWlGLENBQUE7SUFDakYsaUhBQW9GLENBQUE7SUFDcEYsd0VBQTJDLENBQUE7SUFDM0MscU1BQXdLLENBQUE7SUFDeEssMEtBQTZJLENBQUE7SUFDN0ksd0xBQTJKLENBQUE7QUFDN0osQ0FBQyxFQXRDVyx5QkFBeUIsS0FBekIseUJBQXlCLFFBc0NwQztBQUVEOzs7Ozs7O0dBT0c7QUFDSCxNQUFNLENBQUMsTUFBTSxVQUFVLEdBQUcsQ0FDeEIsS0FBeUMsRUFDekMsS0FBWSxFQUNMLEVBQUUsQ0FBQyxDQUFDO0lBQ1gsR0FBRyxLQUFLO0lBQ1IsS0FBSyxFQUFFLEtBQUssQ0FBQyxLQUFLLEtBQUssU0FBUyxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxLQUFLO0NBQ3ZELENBQUMsQ0FBQyJ9","import { opNot } from './arithmetic';\nimport { conditionallyEvaluate, useOneStackItem } from './combinators';\nimport { stackItemIsTruthy } from './common';\nimport { applyError, AuthenticationErrorCommon } from './errors';\nimport { OpcodesCommon } from './opcodes';\nexport const opVerify = () => (state) => useOneStackItem(state, (nextState, item) => stackItemIsTruthy(item)\n    ? nextState\n    : applyError(AuthenticationErrorCommon.failedVerify, nextState));\nexport const reservedOperation = () => (state) => applyError(AuthenticationErrorCommon.calledReserved, state);\nexport const opReturn = () => (state) => applyError(AuthenticationErrorCommon.calledReturn, state);\nexport const conditionalFlowControlOperations = () => ({\n    [OpcodesCommon.OP_RESERVED]: reservedOperation(),\n    [OpcodesCommon.OP_VER]: reservedOperation(),\n    [OpcodesCommon.OP_VERIFY]: opVerify(),\n    [OpcodesCommon.OP_RETURN]: opReturn(),\n    [OpcodesCommon.OP_RESERVED1]: reservedOperation(),\n    [OpcodesCommon.OP_RESERVED2]: reservedOperation()\n});\nexport const opIf = () => (state) => {\n    if (state.executionStack.every(item => item)) {\n        const element = state.stack.pop();\n        // tslint:disable-next-line:no-if-statement\n        if (!element) {\n            return applyError(AuthenticationErrorCommon.emptyStack, state);\n        }\n        // tslint:disable-next-line:no-expression-statement\n        state.executionStack.push(stackItemIsTruthy(element));\n        return state;\n    }\n    // tslint:disable-next-line: no-expression-statement\n    state.executionStack.push(false);\n    return state;\n};\nexport const opNotIf = (flags) => {\n    const not = conditionallyEvaluate(opNot(flags));\n    const ifOp = opIf();\n    return (state) => ifOp(not(state));\n};\nexport const opEndIf = () => (state) => {\n    const element = state.executionStack.pop();\n    // tslint:disable-next-line:no-if-statement\n    if (element === undefined) {\n        return applyError(AuthenticationErrorCommon.unexpectedEndIf, state);\n    }\n    return state;\n};\nexport const opElse = () => (state) => {\n    const top = state.executionStack[state.executionStack.length - 1];\n    // tslint:disable-next-line:no-if-statement\n    if (top === undefined) {\n        return applyError(AuthenticationErrorCommon.unexpectedElse, state);\n    }\n    // tslint:disable-next-line:no-object-mutation no-expression-statement\n    state.executionStack[state.executionStack.length - 1] = !top;\n    return state;\n};\nexport const unconditionalFlowControlOperations = (flags) => ({\n    [OpcodesCommon.OP_IF]: opIf(),\n    [OpcodesCommon.OP_NOTIF]: opNotIf(flags),\n    [OpcodesCommon.OP_VERIF]: reservedOperation(),\n    [OpcodesCommon.OP_VERNOTIF]: reservedOperation(),\n    [OpcodesCommon.OP_ELSE]: opElse(),\n    [OpcodesCommon.OP_ENDIF]: opEndIf()\n});\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmxvdy1jb250cm9sLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vc3JjL2xpYi9hdXRoL2luc3RydWN0aW9uLXNldHMvY29tbW9uL2Zsb3ctY29udHJvbC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFRQSxPQUFPLEVBQUUsS0FBSyxFQUFFLE1BQU0sY0FBYyxDQUFDO0FBQ3JDLE9BQU8sRUFBRSxxQkFBcUIsRUFBRSxlQUFlLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDdkUsT0FBTyxFQUFFLGlCQUFpQixFQUFFLE1BQU0sVUFBVSxDQUFDO0FBQzdDLE9BQU8sRUFBRSxVQUFVLEVBQUUseUJBQXlCLEVBQUUsTUFBTSxVQUFVLENBQUM7QUFDakUsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLFdBQVcsQ0FBQztBQUUxQyxNQUFNLENBQUMsTUFBTSxRQUFRLEdBQUcsR0FHRixFQUFFLENBQUMsQ0FBQyxLQUFZLEVBQUUsRUFBRSxDQUN4QyxlQUFlLENBQUMsS0FBSyxFQUFFLENBQUMsU0FBUyxFQUFFLElBQUksRUFBRSxFQUFFLENBQ3pDLGlCQUFpQixDQUFDLElBQUksQ0FBQztJQUNyQixDQUFDLENBQUMsU0FBUztJQUNYLENBQUMsQ0FBQyxVQUFVLENBQ1IseUJBQXlCLENBQUMsWUFBWSxFQUN0QyxTQUFTLENBQ1YsQ0FDTixDQUFDO0FBRUosTUFBTSxDQUFDLE1BQU0saUJBQWlCLEdBQUcsR0FHN0IsRUFBRSxDQUFDLENBQUMsS0FBWSxFQUFFLEVBQUUsQ0FDdEIsVUFBVSxDQUFnQix5QkFBeUIsQ0FBQyxjQUFjLEVBQUUsS0FBSyxDQUFDLENBQUM7QUFFN0UsTUFBTSxDQUFDLE1BQU0sUUFBUSxHQUFHLEdBQTZDLEVBQUUsQ0FBQyxDQUN0RSxLQUFZLEVBQ1osRUFBRSxDQUFDLFVBQVUsQ0FBZ0IseUJBQXlCLENBQUMsWUFBWSxFQUFFLEtBQUssQ0FBQyxDQUFDO0FBRTlFLE1BQU0sQ0FBQyxNQUFNLGdDQUFn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","import { applyError, AuthenticationErrorCommon } from './errors';\nimport { OpcodesCommon } from './opcodes';\nexport const opNop = (flags) => (state) => flags.disallowUpgradableNops\n    ? applyError(AuthenticationErrorCommon.calledUpgradableNop, state)\n    : state;\nexport const nonOperations = (flags) => ({\n    [OpcodesCommon.OP_NOP]: opNop(flags),\n    [OpcodesCommon.OP_NOP1]: opNop(flags),\n    [OpcodesCommon.OP_NOP4]: opNop(flags),\n    [OpcodesCommon.OP_NOP5]: opNop(flags),\n    [OpcodesCommon.OP_NOP6]: opNop(flags),\n    [OpcodesCommon.OP_NOP7]: opNop(flags),\n    [OpcodesCommon.OP_NOP8]: opNop(flags),\n    [OpcodesCommon.OP_NOP9]: opNop(flags),\n    [OpcodesCommon.OP_NOP10]: opNop(flags)\n});\n/**\n * \"Disabled\" operations are explicitly forbidden from occurring anywhere in a\n * script, even within an unexecuted branch.\n */\nexport const disabledOperation = () => (state) => applyError(AuthenticationErrorCommon.unknownOpcode, state);\nexport const disabledOperations = () => ({\n    [OpcodesCommon.OP_CAT]: disabledOperation(),\n    [OpcodesCommon.OP_SUBSTR]: disabledOperation(),\n    [OpcodesCommon.OP_LEFT]: disabledOperation(),\n    [OpcodesCommon.OP_RIGHT]: disabledOperation(),\n    [OpcodesCommon.OP_INVERT]: disabledOperation(),\n    [OpcodesCommon.OP_AND]: disabledOperation(),\n    [OpcodesCommon.OP_OR]: disabledOperation(),\n    [OpcodesCommon.OP_XOR]: disabledOperation(),\n    [OpcodesCommon.OP_2MUL]: disabledOperation(),\n    [OpcodesCommon.OP_2DIV]: disabledOperation(),\n    [OpcodesCommon.OP_MUL]: disabledOperation(),\n    [OpcodesCommon.OP_DIV]: disabledOperation(),\n    [OpcodesCommon.OP_MOD]: disabledOperation(),\n    [OpcodesCommon.OP_LSHIFT]: disabledOperation(),\n    [OpcodesCommon.OP_RSHIFT]: disabledOperation()\n});\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibm9wLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vc3JjL2xpYi9hdXRoL2luc3RydWN0aW9uLXNldHMvY29tbW9uL25vcC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQSxPQUFPLEVBQUUsVUFBVSxFQUFFLHlCQUF5QixFQUFFLE1BQU0sVUFBVSxDQUFDO0FBQ2pFLE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSxXQUFXLENBQUM7QUFFMUMsTUFBTSxDQUFDLE1BQU0sS0FBSyxHQUFHLENBQVEsS0FBMEMsRUFBRSxFQUFFLENBQUMsQ0FDMUUsS0FBWSxFQUNaLEVBQUUsQ0FDRixLQUFLLENBQUMsc0JBQXNCO0lBQzFCLENBQUMsQ0FBQyxVQUFVLENBQUMseUJBQXlCLENBQUMsbUJBQW1CLEVBQUUsS0FBSyxDQUFDO0lBQ2xFLENBQUMsQ0FBQyxLQUFLLENBQUM7QUFFWixNQUFNLENBQUMsTUFBTSxhQUFhLEdBQUcsQ0FBUSxLQUVwQyxFQUFFLEVBQUUsQ0FBQyxDQUFDO0lBQ0wsQ0FBQyxhQUFhLENBQUMsTUFBTSxDQUFDLEVBQUUsS0FBSyxDQUFRLEtBQUssQ0FBQztJQUMzQyxDQUFDLGFBQWEsQ0FBQyxPQUFPLENBQUMsRUFBRSxLQUFLLENBQVEsS0FBSyxDQUFDO0lBQzVDLENBQUMsYUFBYSxDQUFDLE9BQU8sQ0FBQyxFQUFFLEtBQUssQ0FBUSxLQUFLLENBQUM7SUFDNUMsQ0FBQyxhQUFhLENBQUMsT0FBTyxDQUFDLEVBQUUsS0FBSyxDQUFRLEtBQUssQ0FBQztJQUM1QyxDQUFDLGFBQWEsQ0FBQyxPQUFPLENBQUMsRUFBRSxLQUFLLENBQVEsS0FBSyxDQUFDO0lBQzVDLENBQUMsYUFBYSxDQUFDLE9BQU8sQ0FBQyxFQUFFLEtBQUssQ0FBUSxLQUFLLENBQUM7SUFDNUMsQ0FBQyxhQUFhLENBQUMsT0FBTyxDQUFDLEVBQUUsS0FBSyxDQUFRLEtBQUssQ0FBQztJQUM1QyxDQUFDLGFBQWEsQ0FBQyxPQUFPLENBQUMsRUFBRSxLQUFLLENBQVEsS0FBSyxDQUFDO0lBQzVDLENBQUMsYUFBYSxDQUFDLFFBQVEsQ0FBQyxFQUFFLEtBQUssQ0FBUSxLQUFLLENBQUM7Q0FDOUMsQ0FBQyxDQUFDO0FBRUg7OztHQUdHO0FBQ0gsTUFBTSxDQUFDLE1BQU0saUJBQWlCLEdBQUcsR0FHN0IsRUFBRSxDQUFDLENBQUMsS0FBWSxFQUFFLEVBQUUsQ0FDdEIsVUFBVSxDQUFnQix5QkFBeUIsQ0FBQyxhQUFhLEVBQUUsS0FBSyxDQUFDLENBQUM7QUFFNUUsTUFBTSxDQUFDLE1BQU0sa0JBQWtCLEdBQUcsR0FHOUIsRUFBRSxDQUFDLENBQUM7SUFDTixDQUFDLGFBQWEsQ0FBQyxNQUFNLENBQUMsRUFBRSxpQkFBaUIsRUFBaUI7SUFDMUQsQ0FBQyxhQUFhLENBQUMsU0FBUyxDQUFDLEVBQUUsaUJBQWlCLEVBQWlCO0lBQzdELENBQUMsYUFBYSxDQUFDLE9BQU8sQ0FBQyxFQUFFLGlCQUFpQixFQUFpQjtJQUMzRCxDQUFDLGFBQWEsQ0FBQyxRQUFRLENBQUMsRUFBRSxpQkFBaUIsRUFBaUI7SUFDNUQsQ0FBQyxhQUFhLENBQUMsU0FBUyxDQUFDLEVBQUUsaUJBQWlCLEVBQWlCO0lBQzdELENBQUMsYUFBYSxDQUFDLE1BQU0sQ0FBQyxFQUFFLGlCQUFpQixFQUFpQjtJQUMxRCxDQUFDLGFBQWEsQ0FBQyxLQUFLLENBQUMsRUFBRSxpQkFBaUIsRUFBaUI7SUFDekQsQ0FBQyxhQUFhLENBQUMsTUFBTSxDQUFDLEVBQUUsaUJBQWlCLEVBQWlCO0lBQzFELENBQUMsYUFBYSxDQUFDLE9BQU8sQ0FBQyxFQUFFLGlCQUFpQixFQUFpQjtJQUMzRCxDQUFDLGFBQWEsQ0FBQyxPQUFPLENBQUMsRUFBRSxpQkFBaUIsRUFBaUI7SUFDM0QsQ0FBQyxhQUFhLENBQUMsTUFBTSxDQUFDLEVBQUUsaUJBQWlCLEVBQWlCO0lBQzFELENBQUMsYUFBYSxDQUFDLE1BQU0sQ0FBQyxFQUFFLGlCQUFpQixFQUFpQjtJQUMxRCxDQUFDLGFBQWEsQ0FBQyxNQUFNLENBQUMsRUFBRSxpQkFBaUIsRUFBaUI7SUFDMUQsQ0FBQyxhQUFhLENBQUMsU0FBUyxDQUFDLEVBQUUsaUJBQWlCLEVBQWlCO0lBQzdELENBQUMsYUFBYSxDQUFDLFNBQVMsQ0FBQyxFQUFFLGlCQUFpQixFQUFpQjtDQUM5RCxDQUFDLENBQUMifQ==","export var OpcodesCommon;\n(function (OpcodesCommon) {\n    /**\n     * A.K.A. `OP_FALSE` or `OP_PUSHBYTES_0`\n     */\n    OpcodesCommon[OpcodesCommon[\"OP_0\"] = 0] = \"OP_0\";\n    OpcodesCommon[OpcodesCommon[\"OP_PUSHBYTES_1\"] = 1] = \"OP_PUSHBYTES_1\";\n    OpcodesCommon[OpcodesCommon[\"OP_PUSHBYTES_2\"] = 2] = \"OP_PUSHBYTES_2\";\n    OpcodesCommon[OpcodesCommon[\"OP_PUSHBYTES_3\"] = 3] = \"OP_PUSHBYTES_3\";\n    OpcodesCommon[OpcodesCommon[\"OP_PUSHBYTES_4\"] = 4] = \"OP_PUSHBYTES_4\";\n    OpcodesCommon[OpcodesCommon[\"OP_PUSHBYTES_5\"] = 5] = \"OP_PUSHBYTES_5\";\n    OpcodesCommon[OpcodesCommon[\"OP_PUSHBYTES_6\"] = 6] = \"OP_PUSHBYTES_6\";\n    OpcodesCommon[OpcodesCommon[\"OP_PUSHBYTES_7\"] = 7] = \"OP_PUSHBYTES_7\";\n    OpcodesCommon[OpcodesCommon[\"OP_PUSHBYTES_8\"] = 8] = \"OP_PUSHBYTES_8\";\n    OpcodesCommon[OpcodesCommon[\"OP_PUSHBYTES_9\"] = 9] = \"OP_PUSHBYTES_9\";\n    OpcodesCommon[OpcodesCommon[\"OP_PUSHBYTES_10\"] = 10] = \"OP_PUSHBYTES_10\";\n    OpcodesCommon[OpcodesCommon[\"OP_PUSHBYTES_11\"] = 11] = \"OP_PUSHBYTES_11\";\n    OpcodesCommon[OpcodesCommon[\"OP_PUSHBYTES_12\"] = 12] = \"OP_PUSHBYTES_12\";\n    OpcodesCommon[OpcodesCommon[\"OP_PUSHBYTES_13\"] = 13] = \"OP_PUSHBYTES_13\";\n    OpcodesCommon[OpcodesCommon[\"OP_PUSHBYTES_14\"] = 14] = \"OP_PUSHBYTES_14\";\n    OpcodesCommon[OpcodesCommon[\"OP_PUSHBYTES_15\"] = 15] = \"OP_PUSHBYTES_15\";\n    OpcodesCommon[OpcodesCommon[\"OP_PUSHBYTES_16\"] = 16] = \"OP_PUSHBYTES_16\";\n    OpcodesCommon[OpcodesCommon[\"OP_PUSHBYTES_17\"] = 17] = \"OP_PUSHBYTES_17\";\n    OpcodesCommon[OpcodesCommon[\"OP_PUSHBYTES_18\"] = 18] = \"OP_PUSHBYTES_18\";\n    OpcodesCommon[OpcodesCommon[\"OP_PUSHBYTES_19\"] = 19] = \"OP_PUSHBYTES_19\";\n    OpcodesCommon[OpcodesCommon[\"OP_PUSHBYTES_20\"] = 20] = \"OP_PUSHBYTES_20\";\n    OpcodesCommon[OpcodesCommon[\"OP_PUSHBYTES_21\"] = 21] = \"OP_PUSHBYTES_21\";\n    OpcodesCommon[OpcodesCommon[\"OP_PUSHBYTES_22\"] = 22] = \"OP_PUSHBYTES_22\";\n    OpcodesCommon[OpcodesCommon[\"OP_PUSHBYTES_23\"] = 23] = \"OP_PUSHBYTES_23\";\n    OpcodesCommon[OpcodesCommon[\"OP_PUSHBYTES_24\"] = 24] = \"OP_PUSHBYTES_24\";\n    OpcodesCommon[OpcodesCommon[\"OP_PUSHBYTES_25\"] = 25] = \"OP_PUSHBYTES_25\";\n    OpcodesCommon[OpcodesCommon[\"OP_PUSHBYTES_26\"] = 26] = \"OP_PUSHBYTES_26\";\n    OpcodesCommon[OpcodesCommon[\"OP_PUSHBYTES_27\"] = 27] = \"OP_PUSHBYTES_27\";\n    OpcodesCommon[OpcodesCommon[\"OP_PUSHBYTES_28\"] = 28] = \"OP_PUSHBYTES_28\";\n    OpcodesCommon[OpcodesCommon[\"OP_PUSHBYTES_29\"] = 29] = \"OP_PUSHBYTES_29\";\n    OpcodesCommon[OpcodesCommon[\"OP_PUSHBYTES_30\"] = 30] = \"OP_PUSHBYTES_30\";\n    OpcodesCommon[OpcodesCommon[\"OP_PUSHBYTES_31\"] = 31] = \"OP_PUSHBYTES_31\";\n    OpcodesCommon[OpcodesCommon[\"OP_PUSHBYTES_32\"] = 32] = \"OP_PUSHBYTES_32\";\n    OpcodesCommon[OpcodesCommon[\"OP_PUSHBYTES_33\"] = 33] = \"OP_PUSHBYTES_33\";\n    OpcodesCommon[OpcodesCommon[\"OP_PUSHBYTES_34\"] = 34] = \"OP_PUSHBYTES_34\";\n    OpcodesCommon[OpcodesCommon[\"OP_PUSHBYTES_35\"] = 35] = \"OP_PUSHBYTES_35\";\n    OpcodesCommon[OpcodesCommon[\"OP_PUSHBYTES_36\"] = 36] = \"OP_PUSHBYTES_36\";\n    OpcodesCommon[OpcodesCommon[\"OP_PUSHBYTES_37\"] = 37] = \"OP_PUSHBYTES_37\";\n    OpcodesCommon[OpcodesCommon[\"OP_PUSHBYTES_38\"] = 38] = \"OP_PUSHBYTES_38\";\n    OpcodesCommon[OpcodesCommon[\"OP_PUSHBYTES_39\"] = 39] = \"OP_PUSHBYTES_39\";\n    OpcodesCommon[OpcodesCommon[\"OP_PUSHBYTES_40\"] = 40] = \"OP_PUSHBYTES_40\";\n    OpcodesCommon[OpcodesCommon[\"OP_PUSHBYTES_41\"] = 41] = \"OP_PUSHBYTES_41\";\n    OpcodesCommon[OpcodesCommon[\"OP_PUSHBYTES_42\"] = 42] = \"OP_PUSHBYTES_42\";\n    OpcodesCommon[OpcodesCommon[\"OP_PUSHBYTES_43\"] = 43] = \"OP_PUSHBYTES_43\";\n    OpcodesCommon[OpcodesCommon[\"OP_PUSHBYTES_44\"] = 44] = \"OP_PUSHBYTES_44\";\n    OpcodesCommon[OpcodesCommon[\"OP_PUSHBYTES_45\"] = 45] = \"OP_PUSHBYTES_45\";\n    OpcodesCommon[OpcodesCommon[\"OP_PUSHBYTES_46\"] = 46] = \"OP_PUSHBYTES_46\";\n    OpcodesCommon[OpcodesCommon[\"OP_PUSHBYTES_47\"] = 47] = \"OP_PUSHBYTES_47\";\n    OpcodesCommon[OpcodesCommon[\"OP_PUSHBYTES_48\"] = 48] = \"OP_PUSHBYTES_48\";\n    OpcodesCommon[OpcodesCommon[\"OP_PUSHBYTES_49\"] = 49] = \"OP_PUSHBYTES_49\";\n    OpcodesCommon[OpcodesCommon[\"OP_PUSHBYTES_50\"] = 50] = \"OP_PUSHBYTES_50\";\n    OpcodesCommon[OpcodesCommon[\"OP_PUSHBYTES_51\"] = 51] = \"OP_PUSHBYTES_51\";\n    OpcodesCommon[OpcodesCommon[\"OP_PUSHBYTES_52\"] = 52] = \"OP_PUSHBYTES_52\";\n    OpcodesCommon[OpcodesCommon[\"OP_PUSHBYTES_53\"] = 53] = \"OP_PUSHBYTES_53\";\n    OpcodesCommon[OpcodesCommon[\"OP_PUSHBYTES_54\"] = 54] = \"OP_PUSHBYTES_54\";\n    OpcodesCommon[OpcodesCommon[\"OP_PUSHBYTES_55\"] = 55] = \"OP_PUSHBYTES_55\";\n    OpcodesCommon[OpcodesCommon[\"OP_PUSHBYTES_56\"] = 56] = \"OP_PUSHBYTES_56\";\n    OpcodesCommon[OpcodesCommon[\"OP_PUSHBYTES_57\"] = 57] = \"OP_PUSHBYTES_57\";\n    OpcodesCommon[OpcodesCommon[\"OP_PUSHBYTES_58\"] = 58] = \"OP_PUSHBYTES_58\";\n    OpcodesCommon[OpcodesCommon[\"OP_PUSHBYTES_59\"] = 59] = \"OP_PUSHBYTES_59\";\n    OpcodesCommon[OpcodesCommon[\"OP_PUSHBYTES_60\"] = 60] = \"OP_PUSHBYTES_60\";\n    OpcodesCommon[OpcodesCommon[\"OP_PUSHBYTES_61\"] = 61] = \"OP_PUSHBYTES_61\";\n    OpcodesCommon[OpcodesCommon[\"OP_PUSHBYTES_62\"] = 62] = \"OP_PUSHBYTES_62\";\n    OpcodesCommon[OpcodesCommon[\"OP_PUSHBYTES_63\"] = 63] = \"OP_PUSHBYTES_63\";\n    OpcodesCommon[OpcodesCommon[\"OP_PUSHBYTES_64\"] = 64] = \"OP_PUSHBYTES_64\";\n    OpcodesCommon[OpcodesCommon[\"OP_PUSHBYTES_65\"] = 65] = \"OP_PUSHBYTES_65\";\n    OpcodesCommon[OpcodesCommon[\"OP_PUSHBYTES_66\"] = 66] = \"OP_PUSHBYTES_66\";\n    OpcodesCommon[OpcodesCommon[\"OP_PUSHBYTES_67\"] = 67] = \"OP_PUSHBYTES_67\";\n    OpcodesCommon[OpcodesCommon[\"OP_PUSHBYTES_68\"] = 68] = \"OP_PUSHBYTES_68\";\n    OpcodesCommon[OpcodesCommon[\"OP_PUSHBYTES_69\"] = 69] = \"OP_PUSHBYTES_69\";\n    OpcodesCommon[OpcodesCommon[\"OP_PUSHBYTES_70\"] = 70] = \"OP_PUSHBYTES_70\";\n    OpcodesCommon[OpcodesCommon[\"OP_PUSHBYTES_71\"] = 71] = \"OP_PUSHBYTES_71\";\n    OpcodesCommon[OpcodesCommon[\"OP_PUSHBYTES_72\"] = 72] = \"OP_PUSHBYTES_72\";\n    OpcodesCommon[OpcodesCommon[\"OP_PUSHBYTES_73\"] = 73] = \"OP_PUSHBYTES_73\";\n    OpcodesCommon[OpcodesCommon[\"OP_PUSHBYTES_74\"] = 74] = \"OP_PUSHBYTES_74\";\n    OpcodesCommon[OpcodesCommon[\"OP_PUSHBYTES_75\"] = 75] = \"OP_PUSHBYTES_75\";\n    OpcodesCommon[OpcodesCommon[\"OP_PUSHDATA_1\"] = 76] = \"OP_PUSHDATA_1\";\n    OpcodesCommon[OpcodesCommon[\"OP_PUSHDATA_2\"] = 77] = \"OP_PUSHDATA_2\";\n    OpcodesCommon[OpcodesCommon[\"OP_PUSHDATA_4\"] = 78] = \"OP_PUSHDATA_4\";\n    OpcodesCommon[OpcodesCommon[\"OP_1NEGATE\"] = 79] = \"OP_1NEGATE\";\n    OpcodesCommon[OpcodesCommon[\"OP_RESERVED\"] = 80] = \"OP_RESERVED\";\n    /**\n     * A.K.A. `OP_TRUE`\n     */\n    OpcodesCommon[OpcodesCommon[\"OP_1\"] = 81] = \"OP_1\";\n    OpcodesCommon[OpcodesCommon[\"OP_2\"] = 82] = \"OP_2\";\n    OpcodesCommon[OpcodesCommon[\"OP_3\"] = 83] = \"OP_3\";\n    OpcodesCommon[OpcodesCommon[\"OP_4\"] = 84] = \"OP_4\";\n    OpcodesCommon[OpcodesCommon[\"OP_5\"] = 85] = \"OP_5\";\n    OpcodesCommon[OpcodesCommon[\"OP_6\"] = 86] = \"OP_6\";\n    OpcodesCommon[OpcodesCommon[\"OP_7\"] = 87] = \"OP_7\";\n    OpcodesCommon[OpcodesCommon[\"OP_8\"] = 88] = \"OP_8\";\n    OpcodesCommon[OpcodesCommon[\"OP_9\"] = 89] = \"OP_9\";\n    OpcodesCommon[OpcodesCommon[\"OP_10\"] = 90] = \"OP_10\";\n    OpcodesCommon[OpcodesCommon[\"OP_11\"] = 91] = \"OP_11\";\n    OpcodesCommon[OpcodesCommon[\"OP_12\"] = 92] = \"OP_12\";\n    OpcodesCommon[OpcodesCommon[\"OP_13\"] = 93] = \"OP_13\";\n    OpcodesCommon[OpcodesCommon[\"OP_14\"] = 94] = \"OP_14\";\n    OpcodesCommon[OpcodesCommon[\"OP_15\"] = 95] = \"OP_15\";\n    OpcodesCommon[OpcodesCommon[\"OP_16\"] = 96] = \"OP_16\";\n    OpcodesCommon[OpcodesCommon[\"OP_NOP\"] = 97] = \"OP_NOP\";\n    OpcodesCommon[OpcodesCommon[\"OP_VER\"] = 98] = \"OP_VER\";\n    OpcodesCommon[OpcodesCommon[\"OP_IF\"] = 99] = \"OP_IF\";\n    OpcodesCommon[OpcodesCommon[\"OP_NOTIF\"] = 100] = \"OP_NOTIF\";\n    OpcodesCommon[OpcodesCommon[\"OP_VERIF\"] = 101] = \"OP_VERIF\";\n    OpcodesCommon[OpcodesCommon[\"OP_VERNOTIF\"] = 102] = \"OP_VERNOTIF\";\n    OpcodesCommon[OpcodesCommon[\"OP_ELSE\"] = 103] = \"OP_ELSE\";\n    OpcodesCommon[OpcodesCommon[\"OP_ENDIF\"] = 104] = \"OP_ENDIF\";\n    OpcodesCommon[OpcodesCommon[\"OP_VERIFY\"] = 105] = \"OP_VERIFY\";\n    OpcodesCommon[OpcodesCommon[\"OP_RETURN\"] = 106] = \"OP_RETURN\";\n    OpcodesCommon[OpcodesCommon[\"OP_TOALTSTACK\"] = 107] = \"OP_TOALTSTACK\";\n    OpcodesCommon[OpcodesCommon[\"OP_FROMALTSTACK\"] = 108] = \"OP_FROMALTSTACK\";\n    OpcodesCommon[OpcodesCommon[\"OP_2DROP\"] = 109] = \"OP_2DROP\";\n    OpcodesCommon[OpcodesCommon[\"OP_2DUP\"] = 110] = \"OP_2DUP\";\n    OpcodesCommon[OpcodesCommon[\"OP_3DUP\"] = 111] = \"OP_3DUP\";\n    OpcodesCommon[OpcodesCommon[\"OP_2OVER\"] = 112] = \"OP_2OVER\";\n    OpcodesCommon[OpcodesCommon[\"OP_2ROT\"] = 113] = \"OP_2ROT\";\n    OpcodesCommon[OpcodesCommon[\"OP_2SWAP\"] = 114] = \"OP_2SWAP\";\n    OpcodesCommon[OpcodesCommon[\"OP_IFDUP\"] = 115] = \"OP_IFDUP\";\n    OpcodesCommon[OpcodesCommon[\"OP_DEPTH\"] = 116] = \"OP_DEPTH\";\n    OpcodesCommon[OpcodesCommon[\"OP_DROP\"] = 117] = \"OP_DROP\";\n    OpcodesCommon[OpcodesCommon[\"OP_DUP\"] = 118] = \"OP_DUP\";\n    OpcodesCommon[OpcodesCommon[\"OP_NIP\"] = 119] = \"OP_NIP\";\n    OpcodesCommon[OpcodesCommon[\"OP_OVER\"] = 120] = \"OP_OVER\";\n    OpcodesCommon[OpcodesCommon[\"OP_PICK\"] = 121] = \"OP_PICK\";\n    OpcodesCommon[OpcodesCommon[\"OP_ROLL\"] = 122] = \"OP_ROLL\";\n    OpcodesCommon[OpcodesCommon[\"OP_ROT\"] = 123] = \"OP_ROT\";\n    OpcodesCommon[OpcodesCommon[\"OP_SWAP\"] = 124] = \"OP_SWAP\";\n    OpcodesCommon[OpcodesCommon[\"OP_TUCK\"] = 125] = \"OP_TUCK\";\n    OpcodesCommon[OpcodesCommon[\"OP_CAT\"] = 126] = \"OP_CAT\";\n    OpcodesCommon[OpcodesCommon[\"OP_SUBSTR\"] = 127] = \"OP_SUBSTR\";\n    OpcodesCommon[OpcodesCommon[\"OP_LEFT\"] = 128] = \"OP_LEFT\";\n    OpcodesCommon[OpcodesCommon[\"OP_RIGHT\"] = 129] = \"OP_RIGHT\";\n    OpcodesCommon[OpcodesCommon[\"OP_SIZE\"] = 130] = \"OP_SIZE\";\n    OpcodesCommon[OpcodesCommon[\"OP_INVERT\"] = 131] = \"OP_INVERT\";\n    OpcodesCommon[OpcodesCommon[\"OP_AND\"] = 132] = \"OP_AND\";\n    OpcodesCommon[OpcodesCommon[\"OP_OR\"] = 133] = \"OP_OR\";\n    OpcodesCommon[OpcodesCommon[\"OP_XOR\"] = 134] = \"OP_XOR\";\n    OpcodesCommon[OpcodesCommon[\"OP_EQUAL\"] = 135] = \"OP_EQUAL\";\n    OpcodesCommon[OpcodesCommon[\"OP_EQUALVERIFY\"] = 136] = \"OP_EQUALVERIFY\";\n    OpcodesCommon[OpcodesCommon[\"OP_RESERVED1\"] = 137] = \"OP_RESERVED1\";\n    OpcodesCommon[OpcodesCommon[\"OP_RESERVED2\"] = 138] = \"OP_RESERVED2\";\n    OpcodesCommon[OpcodesCommon[\"OP_1ADD\"] = 139] = \"OP_1ADD\";\n    OpcodesCommon[OpcodesCommon[\"OP_1SUB\"] = 140] = \"OP_1SUB\";\n    OpcodesCommon[OpcodesCommon[\"OP_2MUL\"] = 141] = \"OP_2MUL\";\n    OpcodesCommon[OpcodesCommon[\"OP_2DIV\"] = 142] = \"OP_2DIV\";\n    OpcodesCommon[OpcodesCommon[\"OP_NEGATE\"] = 143] = \"OP_NEGATE\";\n    OpcodesCommon[OpcodesCommon[\"OP_ABS\"] = 144] = \"OP_ABS\";\n    OpcodesCommon[OpcodesCommon[\"OP_NOT\"] = 145] = \"OP_NOT\";\n    OpcodesCommon[OpcodesCommon[\"OP_0NOTEQUAL\"] = 146] = \"OP_0NOTEQUAL\";\n    OpcodesCommon[OpcodesCommon[\"OP_ADD\"] = 147] = \"OP_ADD\";\n    OpcodesCommon[OpcodesCommon[\"OP_SUB\"] = 148] = \"OP_SUB\";\n    OpcodesCommon[OpcodesCommon[\"OP_MUL\"] = 149] = \"OP_MUL\";\n    OpcodesCommon[OpcodesCommon[\"OP_DIV\"] = 150] = \"OP_DIV\";\n    OpcodesCommon[OpcodesCommon[\"OP_MOD\"] = 151] = \"OP_MOD\";\n    OpcodesCommon[OpcodesCommon[\"OP_LSHIFT\"] = 152] = \"OP_LSHIFT\";\n    OpcodesCommon[OpcodesCommon[\"OP_RSHIFT\"] = 153] = \"OP_RSHIFT\";\n    OpcodesCommon[OpcodesCommon[\"OP_BOOLAND\"] = 154] = \"OP_BOOLAND\";\n    OpcodesCommon[OpcodesCommon[\"OP_BOOLOR\"] = 155] = \"OP_BOOLOR\";\n    OpcodesCommon[OpcodesCommon[\"OP_NUMEQUAL\"] = 156] = \"OP_NUMEQUAL\";\n    OpcodesCommon[OpcodesCommon[\"OP_NUMEQUALVERIFY\"] = 157] = \"OP_NUMEQUALVERIFY\";\n    OpcodesCommon[OpcodesCommon[\"OP_NUMNOTEQUAL\"] = 158] = \"OP_NUMNOTEQUAL\";\n    OpcodesCommon[OpcodesCommon[\"OP_LESSTHAN\"] = 159] = \"OP_LESSTHAN\";\n    OpcodesCommon[OpcodesCommon[\"OP_GREATERTHAN\"] = 160] = \"OP_GREATERTHAN\";\n    OpcodesCommon[OpcodesCommon[\"OP_LESSTHANOREQUAL\"] = 161] = \"OP_LESSTHANOREQUAL\";\n    OpcodesCommon[OpcodesCommon[\"OP_GREATERTHANOREQUAL\"] = 162] = \"OP_GREATERTHANOREQUAL\";\n    OpcodesCommon[OpcodesCommon[\"OP_MIN\"] = 163] = \"OP_MIN\";\n    OpcodesCommon[OpcodesCommon[\"OP_MAX\"] = 164] = \"OP_MAX\";\n    OpcodesCommon[OpcodesCommon[\"OP_WITHIN\"] = 165] = \"OP_WITHIN\";\n    OpcodesCommon[OpcodesCommon[\"OP_RIPEMD160\"] = 166] = \"OP_RIPEMD160\";\n    OpcodesCommon[OpcodesCommon[\"OP_SHA1\"] = 167] = \"OP_SHA1\";\n    OpcodesCommon[OpcodesCommon[\"OP_SHA256\"] = 168] = \"OP_SHA256\";\n    OpcodesCommon[OpcodesCommon[\"OP_HASH160\"] = 169] = \"OP_HASH160\";\n    OpcodesCommon[OpcodesCommon[\"OP_HASH256\"] = 170] = \"OP_HASH256\";\n    OpcodesCommon[OpcodesCommon[\"OP_CODESEPARATOR\"] = 171] = \"OP_CODESEPARATOR\";\n    OpcodesCommon[OpcodesCommon[\"OP_CHECKSIG\"] = 172] = \"OP_CHECKSIG\";\n    OpcodesCommon[OpcodesCommon[\"OP_CHECKSIGVERIFY\"] = 173] = \"OP_CHECKSIGVERIFY\";\n    OpcodesCommon[OpcodesCommon[\"OP_CHECKMULTISIG\"] = 174] = \"OP_CHECKMULTISIG\";\n    OpcodesCommon[OpcodesCommon[\"OP_CHECKMULTISIGVERIFY\"] = 175] = \"OP_CHECKMULTISIGVERIFY\";\n    OpcodesCommon[OpcodesCommon[\"OP_NOP1\"] = 176] = \"OP_NOP1\";\n    /**\n     * Previously `OP_NOP2`\n     */\n    OpcodesCommon[OpcodesCommon[\"OP_CHECKLOCKTIMEVERIFY\"] = 177] = \"OP_CHECKLOCKTIMEVERIFY\";\n    /**\n     * Previously `OP_NOP2`\n     */\n    OpcodesCommon[OpcodesCommon[\"OP_CHECKSEQUENCEVERIFY\"] = 178] = \"OP_CHECKSEQUENCEVERIFY\";\n    OpcodesCommon[OpcodesCommon[\"OP_NOP4\"] = 179] = \"OP_NOP4\";\n    OpcodesCommon[OpcodesCommon[\"OP_NOP5\"] = 180] = \"OP_NOP5\";\n    OpcodesCommon[OpcodesCommon[\"OP_NOP6\"] = 181] = \"OP_NOP6\";\n    OpcodesCommon[OpcodesCommon[\"OP_NOP7\"] = 182] = \"OP_NOP7\";\n    OpcodesCommon[OpcodesCommon[\"OP_NOP8\"] = 183] = \"OP_NOP8\";\n    OpcodesCommon[OpcodesCommon[\"OP_NOP9\"] = 184] = \"OP_NOP9\";\n    OpcodesCommon[OpcodesCommon[\"OP_NOP10\"] = 185] = \"OP_NOP10\";\n    OpcodesCommon[OpcodesCommon[\"OP_UNKNOWN186\"] = 186] = \"OP_UNKNOWN186\";\n    OpcodesCommon[OpcodesCommon[\"OP_UNKNOWN187\"] = 187] = \"OP_UNKNOWN187\";\n    OpcodesCommon[OpcodesCommon[\"OP_UNKNOWN188\"] = 188] = \"OP_UNKNOWN188\";\n    OpcodesCommon[OpcodesCommon[\"OP_UNKNOWN189\"] = 189] = \"OP_UNKNOWN189\";\n    OpcodesCommon[OpcodesCommon[\"OP_UNKNOWN190\"] = 190] = \"OP_UNKNOWN190\";\n    OpcodesCommon[OpcodesCommon[\"OP_UNKNOWN191\"] = 191] = \"OP_UNKNOWN191\";\n    OpcodesCommon[OpcodesCommon[\"OP_UNKNOWN192\"] = 192] = \"OP_UNKNOWN192\";\n    OpcodesCommon[OpcodesCommon[\"OP_UNKNOWN193\"] = 193] = \"OP_UNKNOWN193\";\n    OpcodesCommon[OpcodesCommon[\"OP_UNKNOWN194\"] = 194] = \"OP_UNKNOWN194\";\n    OpcodesCommon[OpcodesCommon[\"OP_UNKNOWN195\"] = 195] = \"OP_UNKNOWN195\";\n    OpcodesCommon[OpcodesCommon[\"OP_UNKNOWN196\"] = 196] = \"OP_UNKNOWN196\";\n    OpcodesCommon[OpcodesCommon[\"OP_UNKNOWN197\"] = 197] = \"OP_UNKNOWN197\";\n    OpcodesCommon[OpcodesCommon[\"OP_UNKNOWN198\"] = 198] = \"OP_UNKNOWN198\";\n    OpcodesCommon[OpcodesCommon[\"OP_UNKNOWN199\"] = 199] = \"OP_UNKNOWN199\";\n    OpcodesCommon[OpcodesCommon[\"OP_UNKNOWN200\"] = 200] = \"OP_UNKNOWN200\";\n    OpcodesCommon[OpcodesCommon[\"OP_UNKNOWN201\"] = 201] = \"OP_UNKNOWN201\";\n    OpcodesCommon[OpcodesCommon[\"OP_UNKNOWN202\"] = 202] = \"OP_UNKNOWN202\";\n    OpcodesCommon[OpcodesCommon[\"OP_UNKNOWN203\"] = 203] = \"OP_UNKNOWN203\";\n    OpcodesCommon[OpcodesCommon[\"OP_UNKNOWN204\"] = 204] = \"OP_UNKNOWN204\";\n    OpcodesCommon[OpcodesCommon[\"OP_UNKNOWN205\"] = 205] = \"OP_UNKNOWN205\";\n    OpcodesCommon[OpcodesCommon[\"OP_UNKNOWN206\"] = 206] = \"OP_UNKNOWN206\";\n    OpcodesCommon[OpcodesCommon[\"OP_UNKNOWN207\"] = 207] = \"OP_UNKNOWN207\";\n    OpcodesCommon[OpcodesCommon[\"OP_UNKNOWN208\"] = 208] = \"OP_UNKNOWN208\";\n    OpcodesCommon[OpcodesCommon[\"OP_UNKNOWN209\"] = 209] = \"OP_UNKNOWN209\";\n    OpcodesCommon[OpcodesCommon[\"OP_UNKNOWN210\"] = 210] = \"OP_UNKNOWN210\";\n    OpcodesCommon[OpcodesCommon[\"OP_UNKNOWN211\"] = 211] = \"OP_UNKNOWN211\";\n    OpcodesCommon[OpcodesCommon[\"OP_UNKNOWN212\"] = 212] = \"OP_UNKNOWN212\";\n    OpcodesCommon[OpcodesCommon[\"OP_UNKNOWN213\"] = 213] = \"OP_UNKNOWN213\";\n    OpcodesCommon[OpcodesCommon[\"OP_UNKNOWN214\"] = 214] = \"OP_UNKNOWN214\";\n    OpcodesCommon[OpcodesCommon[\"OP_UNKNOWN215\"] = 215] = \"OP_UNKNOWN215\";\n    OpcodesCommon[OpcodesCommon[\"OP_UNKNOWN216\"] = 216] = \"OP_UNKNOWN216\";\n    OpcodesCommon[OpcodesCommon[\"OP_UNKNOWN217\"] = 217] = \"OP_UNKNOWN217\";\n    OpcodesCommon[OpcodesCommon[\"OP_UNKNOWN218\"] = 218] = \"OP_UNKNOWN218\";\n    OpcodesCommon[OpcodesCommon[\"OP_UNKNOWN219\"] = 219] = \"OP_UNKNOWN219\";\n    OpcodesCommon[OpcodesCommon[\"OP_UNKNOWN220\"] = 220] = \"OP_UNKNOWN220\";\n    OpcodesCommon[OpcodesCommon[\"OP_UNKNOWN221\"] = 221] = \"OP_UNKNOWN221\";\n    OpcodesCommon[OpcodesCommon[\"OP_UNKNOWN222\"] = 222] = \"OP_UNKNOWN222\";\n    OpcodesCommon[OpcodesCommon[\"OP_UNKNOWN223\"] = 223] = \"OP_UNKNOWN223\";\n    OpcodesCommon[OpcodesCommon[\"OP_UNKNOWN224\"] = 224] = \"OP_UNKNOWN224\";\n    OpcodesCommon[OpcodesCommon[\"OP_UNKNOWN225\"] = 225] = \"OP_UNKNOWN225\";\n    OpcodesCommon[OpcodesCommon[\"OP_UNKNOWN226\"] = 226] = \"OP_UNKNOWN226\";\n    OpcodesCommon[OpcodesCommon[\"OP_UNKNOWN227\"] = 227] = \"OP_UNKNOWN227\";\n    OpcodesCommon[OpcodesCommon[\"OP_UNKNOWN228\"] = 228] = \"OP_UNKNOWN228\";\n    OpcodesCommon[OpcodesCommon[\"OP_UNKNOWN229\"] = 229] = \"OP_UNKNOWN229\";\n    OpcodesCommon[OpcodesCommon[\"OP_UNKNOWN230\"] = 230] = \"OP_UNKNOWN230\";\n    OpcodesCommon[OpcodesCommon[\"OP_UNKNOWN231\"] = 231] = \"OP_UNKNOWN231\";\n    OpcodesCommon[OpcodesCommon[\"OP_UNKNOWN232\"] = 232] = \"OP_UNKNOWN232\";\n    OpcodesCommon[OpcodesCommon[\"OP_UNKNOWN233\"] = 233] = \"OP_UNKNOWN233\";\n    OpcodesCommon[OpcodesCommon[\"OP_UNKNOWN234\"] = 234] = \"OP_UNKNOWN234\";\n    OpcodesCommon[OpcodesCommon[\"OP_UNKNOWN235\"] = 235] = \"OP_UNKNOWN235\";\n    OpcodesCommon[OpcodesCommon[\"OP_UNKNOWN236\"] = 236] = \"OP_UNKNOWN236\";\n    OpcodesCommon[OpcodesCommon[\"OP_UNKNOWN237\"] = 237] = \"OP_UNKNOWN237\";\n    OpcodesCommon[OpcodesCommon[\"OP_UNKNOWN238\"] = 238] = \"OP_UNKNOWN238\";\n    OpcodesCommon[OpcodesCommon[\"OP_UNKNOWN239\"] = 239] = \"OP_UNKNOWN239\";\n    OpcodesCommon[OpcodesCommon[\"OP_UNKNOWN240\"] = 240] = \"OP_UNKNOWN240\";\n    OpcodesCommon[OpcodesCommon[\"OP_UNKNOWN241\"] = 241] = \"OP_UNKNOWN241\";\n    OpcodesCommon[OpcodesCommon[\"OP_UNKNOWN242\"] = 242] = \"OP_UNKNOWN242\";\n    OpcodesCommon[OpcodesCommon[\"OP_UNKNOWN243\"] = 243] = \"OP_UNKNOWN243\";\n    OpcodesCommon[OpcodesCommon[\"OP_UNKNOWN244\"] = 244] = \"OP_UNKNOWN244\";\n    OpcodesCommon[OpcodesCommon[\"OP_UNKNOWN245\"] = 245] = \"OP_UNKNOWN245\";\n    OpcodesCommon[OpcodesCommon[\"OP_UNKNOWN246\"] = 246] = \"OP_UNKNOWN246\";\n    OpcodesCommon[OpcodesCommon[\"OP_UNKNOWN247\"] = 247] = \"OP_UNKNOWN247\";\n    OpcodesCommon[OpcodesCommon[\"OP_UNKNOWN248\"] = 248] = \"OP_UNKNOWN248\";\n    OpcodesCommon[OpcodesCommon[\"OP_UNKNOWN249\"] = 249] = \"OP_UNKNOWN249\";\n    OpcodesCommon[OpcodesCommon[\"OP_UNKNOWN250\"] = 250] = \"OP_UNKNOWN250\";\n    OpcodesCommon[OpcodesCommon[\"OP_UNKNOWN251\"] = 251] = \"OP_UNKNOWN251\";\n    OpcodesCommon[OpcodesCommon[\"OP_UNKNOWN252\"] = 252] = \"OP_UNKNOWN252\";\n    OpcodesCommon[OpcodesCommon[\"OP_UNKNOWN253\"] = 253] = \"OP_UNKNOWN253\";\n    OpcodesCommon[OpcodesCommon[\"OP_UNKNOWN254\"] = 254] = \"OP_UNKNOWN254\";\n    OpcodesCommon[OpcodesCommon[\"OP_UNKNOWN255\"] = 255] = \"OP_UNKNOWN255\";\n})(OpcodesCommon || (OpcodesCommon = {}));\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoib3Bjb2Rlcy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3NyYy9saWIvYXV0aC9pbnN0cnVjdGlvbi1zZXRzL2NvbW1vbi9vcGNvZGVzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE1BQU0sQ0FBTixJQUFZLGFBNlFYO0FBN1FELFdBQVksYUFBYTtJQUN2Qjs7T0FFRztJQUNILGlEQUFXLENBQUE7SUFDWCxxRUFBcUIsQ0FBQTtJQUNyQixxRUFBcUIsQ0FBQTtJQUNyQixxRUFBcUIsQ0FBQTtJQUNyQixxRUFBcUIsQ0FBQTtJQUNyQixxRUFBcUIsQ0FBQTtJQUNyQixxRUFBcUIsQ0FBQTtJQUNyQixxRUFBcUIsQ0FBQTtJQUNyQixxRUFBcUIsQ0FBQTtJQUNyQixxRUFBcUIsQ0FBQTtJQUNyQix3RUFBc0IsQ0FBQTtJQUN0Qix3RUFBc0IsQ0FBQTtJQUN0Qix3RUFBc0IsQ0FBQTtJQUN0Qix3RUFBc0IsQ0FBQTtJQUN0Qix3RUFBc0IsQ0FBQTtJQUN0Qix3RUFBc0IsQ0FBQTtJQUN0Qix3RUFBc0IsQ0FBQTtJQUN0Qix3RUFBc0IsQ0FBQTtJQUN0Qix3RUFBc0IsQ0FBQTtJQUN0Qix3RUFBc0IsQ0FBQTtJQUN0Qix3RUFBc0IsQ0FBQTtJQUN0Qix3RUFBc0IsQ0FBQTtJQUN0Qix3RUFBc0IsQ0FBQTtJQUN0Qix3RUFBc0IsQ0FBQTtJQUN0Qix3RUFBc0IsQ0FBQTtJQUN0Qix3RUFBc0IsQ0FBQTtJQUN0Qix3RUFBc0IsQ0FBQTtJQUN0Qix3RUFBc0IsQ0FBQTtJQUN0Qix3RUFBc0IsQ0FBQTtJQUN0Qix3RUFBc0IsQ0FBQTtJQUN0Qix3RUFBc0IsQ0FBQTtJQUN0Qix3RUFBc0IsQ0FBQTtJQUN0Qix3RUFBc0IsQ0FBQTtJQUN0Qix3RUFBc0IsQ0FBQTtJQUN0Qix3RUFBc0IsQ0FBQTtJQUN0Qix3RUFBc0IsQ0FBQTtJQUN0Qix3RUFBc0IsQ0FBQTtJQUN0Qix3RUFBc0IsQ0FBQTtJQUN0Qix3RUFBc0Is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LENBQUE7SUFDcEIscUVBQW9CLENBQUE7SUFDcEIscUVBQW9CLENBQUE7SUFDcEIscUVBQW9CLENBQUE7SUFDcEIscUVBQW9CLENBQUE7SUFDcEIscUVBQW9CLENBQUE7SUFDcEIscUVBQW9CLENBQUE7SUFDcEIscUVBQW9CLENBQUE7SUFDcEIscUVBQW9CLENBQUE7SUFDcEIscUVBQW9CLENBQUE7SUFDcEIscUVBQW9CLENBQUE7SUFDcEIscUVBQW9CLENBQUE7SUFDcEIscUVBQW9CLENBQUE7SUFDcEIscUVBQW9CLENBQUE7SUFDcEIscUVBQW9CLENBQUE7SUFDcEIscUVBQW9CLENBQUE7SUFDcEIscUVBQW9CLENBQUE7SUFDcEIscUVBQW9CLENBQUE7SUFDcEIscUVBQW9CLENBQUE7SUFDcEIscUVBQW9CLENBQUE7SUFDcEIscUVBQW9CLENBQUE7SUFDcEIscUVBQW9CLENBQUE7SUFDcEIscUVBQW9CLENBQUE7SUFDcEIscUVBQW9CLENBQUE7SUFDcEIscUVBQW9CLENBQUE7SUFDcEIscUVBQW9CLENBQUE7SUFDcEIscUVBQW9CLENBQUE7SUFDcEIscUVBQW9CLENBQUE7SUFDcEIscUVBQW9CLENBQUE7SUFDcEIscUVBQW9CLENBQUE7SUFDcEIscUVBQW9CLENBQUE7SUFDcEIscUVBQW9CLENBQUE7SUFDcEIscUVBQW9CLENBQUE7SUFDcEIscUVBQW9CLENBQUE7SUFDcEIscUVBQW9CLENBQUE7SUFDcEIscUVBQW9CLENBQUE7SUFDcEIscUVBQW9CLENBQUE7SUFDcEIscUVBQW9CLENBQUE7SUFDcEIscUVBQW9CLENBQUE7SUFDcEIscUVBQW9CLENBQUE7SUFDcEIscUVBQW9CLENBQUE7SUFDcEIscUVBQW9CLENBQUE7SUFDcEIscUVBQW9CLENBQUE7SUFDcEIscUVBQW9CLENBQUE7SUFDcEIscUVBQW9CLENBQUE7SUFDcEIscUVBQW9CLENBQUE7SUFDcEIscUVBQW9CLENBQUE7SUFDcEIscUVBQW9CLENBQUE7SUFDcEIscUVBQW9CLENBQUE7SUFDcEIscUVBQW9CLENBQUE7SUFDcEIscUVBQW9CLENBQUE7SUFDcEIscUVBQW9CLENBQUE7SUFDcEIscUVBQW9CLENBQUE7SUFDcEIscUVBQW9CLENBQUE7SUFDcEIscUVBQW9CLENBQUE7SUFDcEIscUVBQW9CLENBQUE7SUFDcEIscUVBQW9CLENBQUE7SUFDcEIscUVBQW9CLENBQUE7SUFDcEIscUVBQW9CLENBQUE7SUFDcEIscUVBQW9CLENBQUE7SUFDcEIscUVBQW9CLENBQUE7SUFDcEIscUVBQW9CLENBQUE7QUFDdEIsQ0FBQyxFQTdRVyxhQUFhLEtBQWIsYUFBYSxRQTZReEIifQ==","import { range } from '../../../utils/hex';\nimport { Bytes, numberToLittleEndianBin } from '../instruction-sets';\nimport { pushToStack } from './combinators';\nimport { applyError, AuthenticationErrorCommon } from './errors';\nimport { OpcodesCommon } from './opcodes';\nimport { bigIntToScriptNumber } from './types';\nexport var PushOperationConstants;\n(function (PushOperationConstants) {\n    PushOperationConstants[PushOperationConstants[\"OP_0\"] = 0] = \"OP_0\";\n    /**\n     * OP_PUSHBYTES_75\n     */\n    PushOperationConstants[PushOperationConstants[\"maximumPushByteOperationSize\"] = 75] = \"maximumPushByteOperationSize\";\n    PushOperationConstants[PushOperationConstants[\"OP_PUSHDATA_1\"] = 76] = \"OP_PUSHDATA_1\";\n    PushOperationConstants[PushOperationConstants[\"OP_PUSHDATA_2\"] = 77] = \"OP_PUSHDATA_2\";\n    PushOperationConstants[PushOperationConstants[\"OP_PUSHDATA_4\"] = 78] = \"OP_PUSHDATA_4\";\n    /**\n     * OP_PUSHDATA_4\n     */\n    PushOperationConstants[PushOperationConstants[\"highestPushDataOpcode\"] = 78] = \"highestPushDataOpcode\";\n    /**\n     * For OP_1 to OP_16, `opcode` is the number offset by `0x50` (80):\n     *\n     * `OP_N = 0x50 + N`\n     *\n     * OP_0 is really OP_PUSHBYTES_0 (`0x00`), so it does not follow this pattern.\n     */\n    PushOperationConstants[PushOperationConstants[\"pushNumberOpcodesOffset\"] = 80] = \"pushNumberOpcodesOffset\";\n    /** OP_1 through OP_16 */\n    PushOperationConstants[PushOperationConstants[\"pushNumberOpcodes\"] = 16] = \"pushNumberOpcodes\";\n    PushOperationConstants[PushOperationConstants[\"negativeOne\"] = 129] = \"negativeOne\";\n    PushOperationConstants[PushOperationConstants[\"OP_1NEGATE\"] = 79] = \"OP_1NEGATE\";\n    /**\n     * 256 - 1\n     */\n    PushOperationConstants[PushOperationConstants[\"maximumPushData1Size\"] = 255] = \"maximumPushData1Size\";\n    /**\n     * Standard consensus parameter for most Bitcoin forks.\n     */\n    PushOperationConstants[PushOperationConstants[\"maximumPushSize\"] = 520] = \"maximumPushSize\";\n    /**\n     * 256 ** 2 - 1\n     */\n    PushOperationConstants[PushOperationConstants[\"maximumPushData2Size\"] = 65535] = \"maximumPushData2Size\";\n    /**\n     * 256 ** 4 - 1\n     */\n    PushOperationConstants[PushOperationConstants[\"maximumPushData4Size\"] = 4294967295] = \"maximumPushData4Size\";\n})(PushOperationConstants || (PushOperationConstants = {}));\n/**\n * Returns the minimal bytecode required to push the provided `data` to the\n * stack.\n *\n * @remarks\n * This method conservatively encodes a `Uint8Array` as a data push. For Script\n * Numbers which can be pushed using a single opcode (-1 through 16), the\n * equivalent bytecode value is returned. Other `data` values will be prefixed\n * with the proper opcode and push length bytes (if necessary) to create the\n * minimal push instruction.\n *\n * Note, while some single-byte Script Number pushes will be minimally-encoded\n * by this method, all larger inputs will be encoded as-is (it cannot be assumed\n * that inputs are intended to be used as Script Numbers). To encode the push of\n * a Script Number, minimally-encode the number before passing it to this\n * method, e.g.:\n * `encodeDataPush(bigIntToScriptNumber(parseBytesAsScriptNumber(nonMinimalNumber)))`.\n *\n * The maximum `bytecode` length which can be encoded for a push in the Bitcoin\n * system is `4294967295` (~4GB). This method assumes a smaller input – if\n * `bytecode` has the potential to be longer, it should be checked (and the\n * error handled) prior to calling this method.\n *\n * @param data the Uint8Array to push to the stack\n */\n// tslint:disable-next-line:cyclomatic-complexity\nexport const encodeDataPush = (data) => data.length <= PushOperationConstants.maximumPushByteOperationSize\n    ? data.length === 0\n        ? Uint8Array.of(0)\n        : data.length === 1\n            ? data[0] !== 0 && data[0] <= PushOperationConstants.pushNumberOpcodes\n                ? Uint8Array.of(data[0] + PushOperationConstants.pushNumberOpcodesOffset)\n                : data[0] === PushOperationConstants.negativeOne\n                    ? Uint8Array.of(PushOperationConstants.OP_1NEGATE)\n                    : Uint8Array.from([1, ...data])\n            : Uint8Array.from([data.length, ...data])\n    : data.length <= PushOperationConstants.maximumPushData1Size\n        ? Uint8Array.from([\n            PushOperationConstants.OP_PUSHDATA_1,\n            ...numberToLittleEndianBin(data.length, Bytes.Uint8),\n            ...data\n        ])\n        : data.length <= PushOperationConstants.maximumPushData2Size\n            ? Uint8Array.from([\n                PushOperationConstants.OP_PUSHDATA_2,\n                ...numberToLittleEndianBin(data.length, Bytes.Uint16),\n                ...data\n            ])\n            : Uint8Array.from([\n                PushOperationConstants.OP_PUSHDATA_4,\n                ...numberToLittleEndianBin(data.length, Bytes.Uint32),\n                ...data\n            ]);\n/**\n * Returns true if the provided `data` is minimally-encoded by the provided\n * `opcode`.\n * @param opcode the opcode used to push `data`\n * @param data the contents of the push\n */\n// tslint:disable-next-line: cyclomatic-complexity\nexport const isMinimalDataPush = (opcode, data) => data.length === 0\n    ? opcode === PushOperationConstants.OP_0\n    : data.length === 1\n        ? data[0] >= 1 && data[0] <= PushOperationConstants.pushNumberOpcodes\n            ? opcode === data[0] + PushOperationConstants.pushNumberOpcodesOffset\n            : data[0] === PushOperationConstants.negativeOne\n                ? opcode === PushOperationConstants.OP_1NEGATE\n                : true\n        : data.length <= PushOperationConstants.maximumPushByteOperationSize\n            ? opcode === data.length\n            : data.length <= PushOperationConstants.maximumPushData1Size\n                ? opcode === PushOperationConstants.OP_PUSHDATA_1\n                : data.length <= PushOperationConstants.maximumPushData2Size\n                    ? opcode === PushOperationConstants.OP_PUSHDATA_2\n                    : true;\nexport const pushByteOpcodes = [\n    OpcodesCommon.OP_PUSHBYTES_1,\n    OpcodesCommon.OP_PUSHBYTES_2,\n    OpcodesCommon.OP_PUSHBYTES_3,\n    OpcodesCommon.OP_PUSHBYTES_4,\n    OpcodesCommon.OP_PUSHBYTES_5,\n    OpcodesCommon.OP_PUSHBYTES_6,\n    OpcodesCommon.OP_PUSHBYTES_7,\n    OpcodesCommon.OP_PUSHBYTES_8,\n    OpcodesCommon.OP_PUSHBYTES_9,\n    OpcodesCommon.OP_PUSHBYTES_10,\n    OpcodesCommon.OP_PUSHBYTES_11,\n    OpcodesCommon.OP_PUSHBYTES_12,\n    OpcodesCommon.OP_PUSHBYTES_13,\n    OpcodesCommon.OP_PUSHBYTES_14,\n    OpcodesCommon.OP_PUSHBYTES_15,\n    OpcodesCommon.OP_PUSHBYTES_16,\n    OpcodesCommon.OP_PUSHBYTES_17,\n    OpcodesCommon.OP_PUSHBYTES_18,\n    OpcodesCommon.OP_PUSHBYTES_19,\n    OpcodesCommon.OP_PUSHBYTES_20,\n    OpcodesCommon.OP_PUSHBYTES_21,\n    OpcodesCommon.OP_PUSHBYTES_22,\n    OpcodesCommon.OP_PUSHBYTES_23,\n    OpcodesCommon.OP_PUSHBYTES_24,\n    OpcodesCommon.OP_PUSHBYTES_25,\n    OpcodesCommon.OP_PUSHBYTES_26,\n    OpcodesCommon.OP_PUSHBYTES_27,\n    OpcodesCommon.OP_PUSHBYTES_28,\n    OpcodesCommon.OP_PUSHBYTES_29,\n    OpcodesCommon.OP_PUSHBYTES_30,\n    OpcodesCommon.OP_PUSHBYTES_31,\n    OpcodesCommon.OP_PUSHBYTES_32,\n    OpcodesCommon.OP_PUSHBYTES_33,\n    OpcodesCommon.OP_PUSHBYTES_34,\n    OpcodesCommon.OP_PUSHBYTES_35,\n    OpcodesCommon.OP_PUSHBYTES_36,\n    OpcodesCommon.OP_PUSHBYTES_37,\n    OpcodesCommon.OP_PUSHBYTES_38,\n    OpcodesCommon.OP_PUSHBYTES_39,\n    OpcodesCommon.OP_PUSHBYTES_40,\n    OpcodesCommon.OP_PUSHBYTES_41,\n    OpcodesCommon.OP_PUSHBYTES_42,\n    OpcodesCommon.OP_PUSHBYTES_43,\n    OpcodesCommon.OP_PUSHBYTES_44,\n    OpcodesCommon.OP_PUSHBYTES_45,\n    OpcodesCommon.OP_PUSHBYTES_46,\n    OpcodesCommon.OP_PUSHBYTES_47,\n    OpcodesCommon.OP_PUSHBYTES_48,\n    OpcodesCommon.OP_PUSHBYTES_49,\n    OpcodesCommon.OP_PUSHBYTES_50,\n    OpcodesCommon.OP_PUSHBYTES_51,\n    OpcodesCommon.OP_PUSHBYTES_52,\n    OpcodesCommon.OP_PUSHBYTES_53,\n    OpcodesCommon.OP_PUSHBYTES_54,\n    OpcodesCommon.OP_PUSHBYTES_55,\n    OpcodesCommon.OP_PUSHBYTES_56,\n    OpcodesCommon.OP_PUSHBYTES_57,\n    OpcodesCommon.OP_PUSHBYTES_58,\n    OpcodesCommon.OP_PUSHBYTES_59,\n    OpcodesCommon.OP_PUSHBYTES_60,\n    OpcodesCommon.OP_PUSHBYTES_61,\n    OpcodesCommon.OP_PUSHBYTES_62,\n    OpcodesCommon.OP_PUSHBYTES_63,\n    OpcodesCommon.OP_PUSHBYTES_64,\n    OpcodesCommon.OP_PUSHBYTES_65,\n    OpcodesCommon.OP_PUSHBYTES_66,\n    OpcodesCommon.OP_PUSHBYTES_67,\n    OpcodesCommon.OP_PUSHBYTES_68,\n    OpcodesCommon.OP_PUSHBYTES_69,\n    OpcodesCommon.OP_PUSHBYTES_70,\n    OpcodesCommon.OP_PUSHBYTES_71,\n    OpcodesCommon.OP_PUSHBYTES_72,\n    OpcodesCommon.OP_PUSHBYTES_73,\n    OpcodesCommon.OP_PUSHBYTES_74,\n    OpcodesCommon.OP_PUSHBYTES_75\n];\nexport const pushOperation = (flags, maximumPushSize = PushOperationConstants.maximumPushSize) => (state) => {\n    const instruction = state.instructions[state.ip];\n    return instruction.data.length > maximumPushSize\n        ? applyError(AuthenticationErrorCommon.exceedsMaximumPush, state)\n        : !state.executionStack.every(item => item)\n            ? state\n            : flags.requireMinimalEncoding &&\n                !isMinimalDataPush(instruction.opcode, instruction.data)\n                ? applyError(AuthenticationErrorCommon.nonMinimalPush, state)\n                : pushToStack(state, instruction.data);\n};\nexport const pushOperations = (flags, maximumPushSize = PushOperationConstants.maximumPushSize) => {\n    const push = pushOperation(flags, maximumPushSize);\n    return range(PushOperationConstants.highestPushDataOpcode + 1).reduce((group, i) => ({ ...group, [i]: push }), {});\n};\nexport const pushNumberOpcodes = [\n    OpcodesCommon.OP_1NEGATE,\n    OpcodesCommon.OP_1,\n    OpcodesCommon.OP_2,\n    OpcodesCommon.OP_3,\n    OpcodesCommon.OP_4,\n    OpcodesCommon.OP_5,\n    OpcodesCommon.OP_6,\n    OpcodesCommon.OP_7,\n    OpcodesCommon.OP_8,\n    OpcodesCommon.OP_9,\n    OpcodesCommon.OP_10,\n    OpcodesCommon.OP_11,\n    OpcodesCommon.OP_12,\n    OpcodesCommon.OP_13,\n    OpcodesCommon.OP_14,\n    OpcodesCommon.OP_15,\n    OpcodesCommon.OP_16\n];\nexport const pushNumberOperations = () => pushNumberOpcodes\n    .map((opcode, i) => [\n    opcode,\n    [-1, ...range(PushOperationConstants.pushNumberOpcodes, 1)]\n        .map(BigInt)\n        .map(bigIntToScriptNumber)[i]\n])\n    .reduce((group, pair) => ({\n    ...group,\n    [pair[0]]: (state) => pushToStack(state, pair[1].slice())\n}), {});\n//# sourceMappingURL=data:application/json;base64,","import { bigIntToBinUint64LE, bigIntToBitcoinVarInt, numberToBinUint32LE } from '../../../..';\n/**\n * A.K.A. `sighash` flags\n */\nexport var SigningSerializationFlag;\n(function (SigningSerializationFlag) {\n    /**\n     * A.K.A. `SIGHASH_ALL`\n     */\n    SigningSerializationFlag[SigningSerializationFlag[\"all_outputs\"] = 1] = \"all_outputs\";\n    /**\n     * A.K.A `SIGHASH_NONE`\n     */\n    SigningSerializationFlag[SigningSerializationFlag[\"no_outputs\"] = 2] = \"no_outputs\";\n    /**\n     * A.K.A. `SIGHASH_SINGLE`\n     */\n    SigningSerializationFlag[SigningSerializationFlag[\"corresponding_output\"] = 3] = \"corresponding_output\";\n    SigningSerializationFlag[SigningSerializationFlag[\"fork_id\"] = 64] = \"fork_id\";\n    /**\n     * A.K.A `ANYONE_CAN_PAY`\n     */\n    SigningSerializationFlag[SigningSerializationFlag[\"single_input\"] = 128] = \"single_input\";\n})(SigningSerializationFlag || (SigningSerializationFlag = {}));\nexport const isDefinedSigningSerializationType = (byte) => {\n    const baseType = byte &\n        // tslint:disable-next-line: no-bitwise\n        ~(SigningSerializationFlag.fork_id | SigningSerializationFlag.single_input);\n    return (baseType >= SigningSerializationFlag.all_outputs &&\n        baseType <= SigningSerializationFlag.corresponding_output);\n};\nconst match = (type, flag) => \n// tslint:disable-next-line:no-bitwise\n(type[0] & flag) !== 0;\nconst equals = (type, flag\n// tslint:disable-next-line:no-bitwise\n) => (type[0] & 31 /* mask5Bits */) === flag;\nconst shouldSerializeSingleInput = (type) => match(type, SigningSerializationFlag.single_input);\nconst shouldSerializeCorrespondingOutput = (type) => equals(type, SigningSerializationFlag.corresponding_output);\nconst shouldSerializeNoOutputs = (type) => equals(type, SigningSerializationFlag.no_outputs);\nconst emptyHash = () => new Uint8Array(32 /* sha256HashByteLength */).fill(0);\n/**\n * Return the proper `hashPrevouts` value for a given a signing serialization\n * type.\n * @param signingSerializationType the signing serialization type to test\n * @param hashTransactionOutpoints see `generateSigningSerializationBCH`\n */\nconst hashPrevouts = (signingSerializationType, hashTransactionOutpoints) => shouldSerializeSingleInput(signingSerializationType)\n    ? emptyHash()\n    : hashTransactionOutpoints();\n/**\n * Return the proper `hashSequence` value for a given a signing serialization\n * type.\n * @param signingSerializationType the signing serialization type to test\n * @param hashTransactionSequenceNumbers see\n * `generateSigningSerializationBCH`\n */\nconst hashSequence = (signingSerializationType, hashTransactionSequenceNumbers) => !shouldSerializeSingleInput(signingSerializationType) &&\n    !shouldSerializeCorrespondingOutput(signingSerializationType) &&\n    !shouldSerializeNoOutputs(signingSerializationType)\n    ? hashTransactionSequenceNumbers()\n    : emptyHash();\n/**\n * Return the proper `hashOutputs` value for a given a signing serialization\n * type.\n * @param signingSerializationType the signing serialization type to test\n * @param hashTransactionOutputs see `generateSigningSerializationBCH`\n * @param hashCorrespondingOutput see `generateSigningSerializationBCH`\n */\nconst hashOutputs = (signingSerializationType, hashTransactionOutputs, hashCorrespondingOutput) => !shouldSerializeCorrespondingOutput(signingSerializationType) &&\n    !shouldSerializeNoOutputs(signingSerializationType)\n    ? hashTransactionOutputs()\n    : shouldSerializeCorrespondingOutput(signingSerializationType)\n        ? hashCorrespondingOutput()\n        : emptyHash();\n/**\n * Serialize the signature-protected properties of a transaction following the\n * algorithm required by the `signingSerializationType` of a signature.\n *\n * @param version the version number of the transaction\n * @param hashTransactionOutpoints a function returning the 32-byte double\n * SHA256 hash of the serialization of all input outpoints (A.K.A.\n * `hashPrevouts`) – used if `ANYONECANPAY` is not set\n * @param hashTransactionSequenceNumbers a function returning the double SHA256\n * hash of the serialization of all input sequence numbers. (A.K.A.\n * `hashSequence`) – used if none of `ANYONECANPAY`, `SINGLE`, or `NONE` are\n * set.\n * @param outpointTransactionHash the big-endian (standard) transaction hash of\n * the outpoint being spent.\n * @param outpointIndex the index of the outpoint being spent in\n * `outpointTransactionHash`\n * @param coveredBytecode the script currently being executed, beginning at the\n * `lastCodeSeparator`.\n * @param outputValue the value of the outpoint in satoshis\n * @param sequenceNumber the sequence number of the input (A.K.A. `nSequence`)\n * @param hashCorrespondingOutput The double SHA256 of the serialization of the\n * output at the same index as this input (A.K.A. `hashOutputs` with\n * `SIGHASH_SINGLE`) – only used if `SINGLE` is set\n * @param hashTransactionOutputs the double SHA256 of the serialization of\n * output amounts and locking bytecode values (A.K.A. `hashOutputs` with\n * `SIGHASH_ALL`)\n * – only used if `ALL` is set\n * @param locktime the locktime of the transaction\n * @param signingSerializationType the signing serialization type of the\n * signature (A.K.A. `sighash` type)\n * @param forkId while a bitcoin-encoded signature only includes a single byte\n * to encode the signing serialization type, a 3-byte forkId can be appended to\n * provide replay-protection between different forks. (See Bitcoin Cash's Replay\n * Protected Sighash spec for details.)\n */\nexport const generateSigningSerializationBCH = (version, hashTransactionOutpoints, hashTransactionSequenceNumbers, outpointTransactionHash, outpointIndex, coveredBytecode, outputValue, sequenceNumber, hashCorrespondingOutput, hashTransactionOutputs, locktime, signingSerializationType, forkId = new Uint8Array([0, 0, 0])) => new Uint8Array([\n    ...numberToBinUint32LE(version),\n    ...hashPrevouts(signingSerializationType, hashTransactionOutpoints),\n    ...hashSequence(signingSerializationType, hashTransactionSequenceNumbers),\n    ...outpointTransactionHash.slice().reverse(),\n    ...numberToBinUint32LE(outpointIndex),\n    ...Uint8Array.from([\n        ...bigIntToBitcoinVarInt(BigInt(coveredBytecode.length)),\n        ...coveredBytecode\n    ]),\n    ...bigIntToBinUint64LE(outputValue),\n    ...numberToBinUint32LE(sequenceNumber),\n    ...hashOutputs(signingSerializationType, hashTransactionOutputs, hashCorrespondingOutput),\n    ...numberToBinUint32LE(locktime),\n    ...signingSerializationType,\n    ...forkId\n]);\n/**\n * @param signingSerializationType the 32-bit number indicating the signing\n * serialization algorithm to use\n */\nexport const isLegacySigningSerialization = (signingSerializationType) => {\n    // tslint:disable-next-line: no-bitwise no-magic-numbers\n    const forkValue = signingSerializationType >> 8;\n    // tslint:disable-next-line: no-bitwise no-magic-numbers\n    const newForkValue = (forkValue ^ 0xdead) | 0xff0000;\n    // tslint:disable-next-line: no-bitwise no-magic-numbers\n    const sighashType = (newForkValue << 8) | (signingSerializationType & 0xff);\n    // tslint:disable-next-line: no-bitwise\n    return (sighashType & SigningSerializationFlag.fork_id) === 0;\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2lnbmluZy1zZXJpYWxpemF0aW9uLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vc3JjL2xpYi9hdXRoL2luc3RydWN0aW9uLXNldHMvY29tbW9uL3NpZ25pbmctc2VyaWFsaXphdGlvbi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQ0wsbUJBQW1CLEVBQ25CLHFCQUFxQixFQUNyQixtQkFBbUIsRUFDcEIsTUFBTSxhQUFhLENBQUM7QUFFckI7O0dBRUc7QUFDSCxNQUFNLENBQU4sSUFBWSx3QkFrQlg7QUFsQkQsV0FBWSx3QkFBd0I7SUFDbEM7O09BRUc7SUFDSCxxRkFBa0IsQ0FBQTtJQUNsQjs7T0FFRztJQUNILG1GQUFpQixDQUFBO0lBQ2pCOztPQUVHO0lBQ0gsdUdBQTJCLENBQUE7SUFDM0IsOEVBQWMsQ0FBQTtJQUNkOztPQUVHO0lBQ0gseUZBQW1CLENBQUE7QUFDckIsQ0FBQyxFQWxCVyx3QkFBd0IsS0FBeEIsd0JBQXdCLFFBa0JuQztBQU9ELE1BQU0sQ0FBQyxNQUFNLGlDQUFpQyxHQUFHLENBQUMsSUFBWSxFQUFFLEVBQUU7SUFDaEUsTUFBTSxRQUFRLEdBQ1osSUFBSTtRQUNKLHVDQUF1QztRQUN2QyxDQUFDLENBQUMsd0JBQXdCLENBQUMsT0FBTyxHQUFHLHdCQUF3QixDQUFDLFlBQVksQ0FBQyxDQUFDO0lBQzlFLE9BQU8sQ0FDTCxRQUFRLElBQUksd0JBQXdCLENBQUMsV0FBVztRQUNoRCxRQUFRLElBQUksd0JBQXdCLENBQUMsb0JBQW9CLENBQzFELENBQUM7QUFDSixDQUFDLENBQUM7QUFFRixNQUFNLEtBQUssR0FBRyxDQUFDLElBQWdCLEVBQUUsSUFBOEIsRUFBRSxFQUFFO0FBQ2pFLHNDQUFzQztBQUN0QyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7QUFFekIsTUFBTSxNQUFNLEdBQUcsQ0FDYixJQUFnQixF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","import { pushToStack, useOneStackItem } from './combinators';\nimport { OpcodesCommon } from './opcodes';\nimport { bigIntToScriptNumber } from './types';\nexport const opSize = () => (state) => useOneStackItem(state, (nextState, item) => pushToStack(nextState, item, bigIntToScriptNumber(BigInt(item.length))));\nexport const spliceOperations = () => ({\n    [OpcodesCommon.OP_SIZE]: opSize()\n});\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3BsaWNlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vc3JjL2xpYi9hdXRoL2luc3RydWN0aW9uLXNldHMvY29tbW9uL3NwbGljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQSxPQUFPLEVBQUUsV0FBVyxFQUFFLGVBQWUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUM3RCxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0sV0FBVyxDQUFDO0FBQzFDLE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxNQUFNLFNBQVMsQ0FBQztBQUUvQyxNQUFNLENBQUMsTUFBTSxNQUFNLEdBQUcsR0FBNkIsRUFBRSxDQUFDLENBQUMsS0FBWSxFQUFFLEVBQUUsQ0FDckUsZUFBZSxDQUFDLEtBQUssRUFBRSxDQUFDLFNBQVMsRUFBRSxJQUFJLEVBQUUsRUFBRSxDQUN6QyxXQUFXLENBQUMsU0FBUyxFQUFFLElBQUksRUFBRSxvQkFBb0IsQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FDeEUsQ0FBQztBQUVKLE1BQU0sQ0FBQyxNQUFNLGdCQUFnQixHQUFHLEdBRzVCLEVBQUUsQ0FBQyxDQUFDO0lBQ04sQ0FBQyxhQUFhLENBQUMsT0FBTyxDQUFDLEVBQUUsTUFBTSxFQUFTO0NBQ3pDLENBQUMsQ0FBQyJ9","import { pushToStack, useFourStackItems, useOneScriptNumber, useOneStackItem, useSixStackItems, useThreeStackItems, useTwoStackItems } from './combinators';\nimport { applyError, AuthenticationErrorCommon } from './errors';\nimport { OpcodesCommon } from './opcodes';\nimport { bigIntToScriptNumber, stackItemIsTruthy } from './types';\nexport const opToAltStack = () => (state) => useOneStackItem(state, (nextState, item) => {\n    // tslint:disable-next-line: no-expression-statement\n    nextState.alternateStack.push(item);\n    return nextState;\n});\nexport const opFromAltStack = () => (state) => {\n    const item = state.alternateStack.pop();\n    // tslint:disable-next-line:no-if-statement\n    if (!item) {\n        return applyError(AuthenticationErrorCommon.emptyAlternateStack, state);\n    }\n    return pushToStack(state, item);\n};\nexport const op2Drop = () => (state) => useTwoStackItems(state, nextState => nextState);\nexport const op2Dup = () => (state) => useTwoStackItems(state, (nextState, a, b) => pushToStack(nextState, a, b, a.slice(), b.slice()));\nexport const op3Dup = () => (state) => useThreeStackItems(state, (nextState, a, b, c) => pushToStack(nextState, a, b, c, a.slice(), b.slice(), c.slice()));\nexport const op2Over = () => (state) => useFourStackItems(state, (nextState, a, b, c, d) => pushToStack(nextState, a, b, c, d, a.slice(), b.slice()));\nexport const op2Rot = () => (state) => useSixStackItems(state, (nextState, a, b, c, d, e, f) => pushToStack(nextState, c, d, e, f, a, b));\nexport const op2Swap = () => (state) => useFourStackItems(state, (nextState, a, b, c, d) => pushToStack(nextState, c, d, a, b));\nexport const opIfDup = () => (state) => useOneStackItem(state, (nextState, item) => pushToStack(nextState, ...(stackItemIsTruthy(item) ? [item, item.slice()] : [item])));\nexport const opDepth = () => (state) => pushToStack(state, bigIntToScriptNumber(BigInt(state.stack.length)));\nexport const opDrop = () => (state) => useOneStackItem(state, nextState => nextState);\nexport const opDup = () => (state) => useOneStackItem(state, (nextState, item) => pushToStack(nextState, item, item.slice()));\nexport const opNip = () => (state) => useTwoStackItems(state, (nextState, _, b) => pushToStack(nextState, b));\nexport const opOver = () => (state) => useTwoStackItems(state, (nextState, a, b) => pushToStack(nextState, a, b, a.slice()));\nexport const opPick = (flags) => (state) => useOneScriptNumber(state, (nextState, depth) => {\n    const item = nextState.stack[nextState.stack.length - 1 - Number(depth)];\n    // tslint:disable-next-line: no-if-statement\n    if (item === undefined) {\n        return applyError(AuthenticationErrorCommon.invalidStackIndex, state);\n    }\n    return pushToStack(nextState, item.slice());\n}, flags.requireMinimalEncoding);\nexport const opRoll = (flags) => (state) => useOneScriptNumber(state, (nextState, depth) => {\n    const index = nextState.stack.length - 1 - Number(depth);\n    // tslint:disable-next-line: no-if-statement\n    if (index < 0 || index > nextState.stack.length - 1) {\n        return applyError(AuthenticationErrorCommon.invalidStackIndex, state);\n    }\n    return pushToStack(nextState, nextState.stack.splice(index, 1)[0]);\n}, flags.requireMinimalEncoding);\nexport const opRot = () => (state) => useThreeStackItems(state, (nextState, a, b, c) => pushToStack(nextState, b, c, a));\nexport const opSwap = () => (state) => useTwoStackItems(state, (nextState, a, b) => pushToStack(nextState, b, a));\nexport const opTuck = () => (state) => useTwoStackItems(state, (nextState, a, b) => pushToStack(nextState, b.slice(), a, b));\nexport const stackOperations = (flags) => ({\n    [OpcodesCommon.OP_TOALTSTACK]: opToAltStack(),\n    [OpcodesCommon.OP_FROMALTSTACK]: opFromAltStack(),\n    [OpcodesCommon.OP_2DROP]: op2Drop(),\n    [OpcodesCommon.OP_2DUP]: op2Dup(),\n    [OpcodesCommon.OP_3DUP]: op3Dup(),\n    [OpcodesCommon.OP_2OVER]: op2Over(),\n    [OpcodesCommon.OP_2ROT]: op2Rot(),\n    [OpcodesCommon.OP_2SWAP]: op2Swap(),\n    [OpcodesCommon.OP_IFDUP]: opIfDup(),\n    [OpcodesCommon.OP_DEPTH]: opDepth(),\n    [OpcodesCommon.OP_DROP]: opDrop(),\n    [OpcodesCommon.OP_DUP]: opDup(),\n    [OpcodesCommon.OP_NIP]: opNip(),\n    [OpcodesCommon.OP_OVER]: opOver(),\n    [OpcodesCommon.OP_PICK]: opPick(flags),\n    [OpcodesCommon.OP_ROLL]: opRoll(flags),\n    [OpcodesCommon.OP_ROT]: opRot(),\n    [OpcodesCommon.OP_SWAP]: opSwap(),\n    [OpcodesCommon.OP_TUCK]: opTuck()\n});\n//# sourceMappingURL=data:application/json;base64,","import { isScriptNumberError, parseBytesAsScriptNumber } from './common';\nimport { applyError, AuthenticationErrorCommon } from './errors';\nimport { OpcodesCommon } from './opcodes';\nvar Bits;\n(function (Bits) {\n    Bits[Bits[\"sequenceLocktimeDisableFlag\"] = 31] = \"sequenceLocktimeDisableFlag\";\n    Bits[Bits[\"sequenceLocktimeTypeFlag\"] = 22] = \"sequenceLocktimeTypeFlag\";\n})(Bits || (Bits = {}));\nvar Constants;\n(function (Constants) {\n    Constants[Constants[\"LocktimeScriptNumberByteLength\"] = 5] = \"LocktimeScriptNumberByteLength\";\n    Constants[Constants[\"LocktimeThreshold\"] = 500000000] = \"LocktimeThreshold\";\n    Constants[Constants[\"maximumSequenceNumber\"] = 4294967295] = \"maximumSequenceNumber\";\n    Constants[Constants[\"sequenceLocktimeTransactionVersionMinimum\"] = 2] = \"sequenceLocktimeTransactionVersionMinimum\";\n    // tslint:disable-next-line: no-bitwise\n    Constants[Constants[\"sequenceLocktimeDisableFlag\"] = 2147483648] = \"sequenceLocktimeDisableFlag\";\n    // tslint:disable-next-line: no-bitwise\n    Constants[Constants[\"sequenceLocktimeTypeFlag\"] = 4194304] = \"sequenceLocktimeTypeFlag\";\n    Constants[Constants[\"sequenceGranularity\"] = 9] = \"sequenceGranularity\";\n    Constants[Constants[\"sequenceLocktimeMask\"] = 65535] = \"sequenceLocktimeMask\";\n})(Constants || (Constants = {}));\nexport const readLocktime = (state, operation, flags) => {\n    const item = state.stack[state.stack.length - 1];\n    // tslint:disable-next-line:no-if-statement\n    if (!item) {\n        return applyError(AuthenticationErrorCommon.emptyStack, state);\n    }\n    const parsedLocktime = parseBytesAsScriptNumber(item, flags.requireMinimalEncoding, Constants.LocktimeScriptNumberByteLength);\n    // tslint:disable-next-line: no-if-statement\n    if (isScriptNumberError(parsedLocktime)) {\n        return applyError(AuthenticationErrorCommon.invalidScriptNumber, state);\n    }\n    const locktime = Number(parsedLocktime);\n    // tslint:disable-next-line: no-if-statement\n    if (locktime < 0) {\n        return applyError(AuthenticationErrorCommon.negativeLocktime, state);\n    }\n    return operation(state, locktime);\n};\nconst locktimeTypesAreCompatible = (locktime, requiredLocktime) => (locktime < Constants.LocktimeThreshold &&\n    requiredLocktime < Constants.LocktimeThreshold) ||\n    (locktime >= Constants.LocktimeThreshold &&\n        requiredLocktime >= Constants.LocktimeThreshold);\nexport const opCheckLockTimeVerify = (flags) => (state) => readLocktime(state, (nextState, requiredLocktime) => {\n    // tslint:disable-next-line: no-if-statement\n    if (!locktimeTypesAreCompatible(nextState.locktime, requiredLocktime)) {\n        return applyError(AuthenticationErrorCommon.incompatibleLocktimeType, nextState);\n    }\n    // tslint:disable-next-line: no-if-statement\n    if (requiredLocktime > nextState.locktime) {\n        return applyError(AuthenticationErrorCommon.unsatisfiedLocktime, nextState);\n    }\n    // tslint:disable-next-line: no-if-statement\n    if (nextState.sequenceNumber === Constants.maximumSequenceNumber) {\n        return applyError(AuthenticationErrorCommon.locktimeDisabled, nextState);\n    }\n    return nextState;\n}, flags);\n// tslint:disable-next-line: no-bitwise\nconst includesFlag = (value, flag) => (value & flag) !== 0;\nexport const opCheckSequenceVerify = (flags) => (state) => readLocktime(state, \n// tslint:disable-next-line: cyclomatic-complexity\n(nextState, requiredSequence) => {\n    const sequenceLocktimeDisabled = includesFlag(requiredSequence, Constants.sequenceLocktimeDisableFlag);\n    // tslint:disable-next-line: no-if-statement\n    if (sequenceLocktimeDisabled) {\n        return nextState;\n    }\n    // tslint:disable-next-line: no-if-statement\n    if (nextState.version < Constants.sequenceLocktimeTransactionVersionMinimum) {\n        return applyError(AuthenticationErrorCommon.checkSequenceUnavailable, nextState);\n    }\n    // tslint:disable-next-line: no-if-statement\n    if (includesFlag(nextState.sequenceNumber, Constants.sequenceLocktimeDisableFlag)) {\n        return applyError(AuthenticationErrorCommon.unmatchedSequenceDisable, nextState);\n    }\n    // tslint:disable-next-line: no-if-statement\n    if (includesFlag(requiredSequence, Constants.sequenceLocktimeTypeFlag) !==\n        includesFlag(nextState.sequenceNumber, Constants.sequenceLocktimeTypeFlag)) {\n        return applyError(AuthenticationErrorCommon.incompatibleSequenceType, nextState);\n    }\n    // tslint:disable-next-line: no-if-statement\n    if (\n    // tslint:disable-next-line: no-bitwise\n    (requiredSequence & Constants.sequenceLocktimeMask) >\n        // tslint:disable-next-line: no-bitwise\n        (nextState.sequenceNumber & Constants.sequenceLocktimeMask)) {\n        return applyError(AuthenticationErrorCommon.unsatisfiedSequenceNumber, nextState);\n    }\n    return nextState;\n}, flags);\nexport const timeOperations = (flags) => ({\n    [OpcodesCommon.OP_CHECKLOCKTIMEVERIFY]: opCheckLockTimeVerify(flags),\n    [OpcodesCommon.OP_CHECKSEQUENCEVERIFY]: opCheckSequenceVerify(flags)\n});\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGltZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3NyYy9saWIvYXV0aC9pbnN0cnVjdGlvbi1zZXRzL2NvbW1vbi90aW1lLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQU1BLE9BQU8sRUFBRSxtQkFBbUIsRUFBRSx3QkFBd0IsRUFBRSxNQUFNLFVBQVUsQ0FBQztBQUN6RSxPQUFPLEVBQUUsVUFBVSxFQUFFLHlCQUF5QixFQUFFLE1BQU0sVUFBVSxDQUFDO0FBQ2pFLE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSxXQUFXLENBQUM7QUFFMUMsSUFBSyxJQUdKO0FBSEQsV0FBSyxJQUFJO0lBQ1AsOEVBQWdDLENBQUE7SUFDaEMsd0VBQTZCLENBQUE7QUFDL0IsQ0FBQyxFQUhJLElBQUksS0FBSixJQUFJLFFBR1I7QUFFRCxJQUFLLFNBV0o7QUFYRCxXQUFLLFNBQVM7SUFDWiw2RkFBa0MsQ0FBQTtJQUNsQywyRUFBK0IsQ0FBQTtJQUMvQixvRkFBa0MsQ0FBQTtJQUNsQyxtSEFBNkMsQ0FBQTtJQUM3Qyx1Q0FBdUM7SUFDdkMsZ0dBQTJFLENBQUE7SUFDM0UsdUNBQXVDO0lBQ3ZDLHVGQUE2RCxDQUFBO0lBQzdELHVFQUF1QixDQUFBO0lBQ3ZCLDZFQUFpQyxDQUFBO0FBQ25DLENBQUMsRUFYSSxTQUFTLEtBQVQsU0FBUyxRQVdiO0FBRUQsTUFBTSxDQUFDLE1BQU0sWUFBWSxHQUFHLENBSTFCLEtBQVksRUFDWixTQUF3RCxFQUN4RCxLQUVDLEVBQ0QsRUFBRTtJQUNGLE1BQU0sSUFBSSxHQUFHLEtBQUssQ0FBQyxLQUFLLENBQUMsS0FBSyxDQUFDLEtBQUssQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUEyQixDQUFDO0lBQzNFLDJDQUEyQztJQUMzQyxJQUFJLENBQUMsSUFBSSxFQUFFO1FBQ1QsT0FBTyxVQUFVLENBQ2YseUJBQXlCLENBQUMsVUFBVSxFQUNwQyxLQUFLLENBQ04sQ0FBQztLQUNIO0lBQ0QsTUFB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","export var ScriptNumberError;\n(function (ScriptNumberError) {\n    ScriptNumberError[\"outOfRange\"] = \"Failed to parse Script Number: overflows Script Number range.\";\n    ScriptNumberError[\"requiresMinimal\"] = \"Failed to parse Script Number: the number is not minimally-encoded.\";\n})(ScriptNumberError || (ScriptNumberError = {}));\n// tslint:disable-next-line:no-any\nexport const isScriptNumberError = (value) => value === ScriptNumberError.outOfRange ||\n    value === ScriptNumberError.requiresMinimal;\n/**\n * This method attempts to parse a \"Script Number\", a format with which numeric\n * values are represented on the stack. (The Satoshi implementation calls this\n * `CScriptNum`.)\n *\n * If `bytes` is a valid Script Number, this method returns the represented\n * number in BigInt format. If `bytes` is not valid, a `ScriptNumberError` is\n * returned.\n *\n * All common operations accepting numeric parameters or pushing numeric values\n * to the stack currently use the Script Number format. The binary format of\n * numbers wouldn't be important if they could only be operated on by arithmetic\n * operators, but since the results of these operations may become input to\n * other operations (e.g. hashing), the specific representation is consensus-\n * critical.\n *\n * Parsing of Script Numbers is limited to 4 bytes (with the exception of\n * OP_CHECKLOCKTIMEVERIFY and OP_CHECKSEQUENCEVERIFY, which read up to 5-bytes).\n * The bytes are read as a signed integer (for 32-bits: inclusive range from\n * -2^31 + 1 to 2^31 - 1) in little-endian byte order. Script Numbers must\n * further be encoded as minimally as possible (no zero-padding). See code/tests\n * for details.\n *\n * ### Notes\n *\n * Operators may push numeric results to the stack which exceed the current\n * 4-byte length limit of Script Numbers. While these stack elements would\n * otherwise be valid Script Numbers, because of the 4-byte length limit, they\n * can only be used as non-numeric values in later operations.\n *\n * Most other implementations currently parse Script Numbers into 64-bit\n * integers to operate on them (rather than integers of arbitrary size like\n * BigInt). Currently, no operators are at risk of overflowing 64-bit integers\n * given 32-bit integer inputs, but future operators may require additional\n * refactoring in those implementations.\n *\n * @param bytes a Uint8Array from the stack\n * @param requireMinimalEncoding if true, this method returns an error when\n * parsing non-minimally encoded Script Numbers\n * @param maximumScriptNumberByteLength the maximum valid number of bytes\n */\n// tslint:disable-next-line:cyclomatic-complexity\nexport const parseBytesAsScriptNumber = (bytes, requireMinimalEncoding = true, maximumScriptNumberByteLength = 4) => {\n    // tslint:disable-next-line:no-if-statement\n    if (bytes.length === 0) {\n        return BigInt(0);\n    }\n    // tslint:disable-next-line:no-if-statement\n    if (bytes.length > maximumScriptNumberByteLength) {\n        return ScriptNumberError.outOfRange;\n    }\n    const mostSignificantByte = bytes[bytes.length - 1];\n    const secondMostSignificantByte = bytes[bytes.length - 1 - 1];\n    const allButTheSignBit = 127;\n    const justTheSignBit = 128;\n    // tslint:disable-next-line:no-if-statement\n    if (requireMinimalEncoding &&\n        // tslint:disable-next-line:no-bitwise\n        (mostSignificantByte & allButTheSignBit) === 0 &&\n        // tslint:disable-next-line:no-bitwise\n        (bytes.length <= 1 || (secondMostSignificantByte & justTheSignBit) === 0)) {\n        return ScriptNumberError.requiresMinimal;\n    }\n    const bitsPerByte = 8;\n    const signFlippingByte = 0x80;\n    // tslint:disable-next-line:prefer-const no-let\n    let result = BigInt(0);\n    // tslint:disable-next-line:prefer-for-of no-let\n    for (let byte = 0; byte < bytes.length; byte++) {\n        // tslint:disable-next-line:no-expression-statement no-bitwise\n        result |= BigInt(bytes[byte]) << BigInt(byte * bitsPerByte);\n    }\n    // tslint:disable-next-line:no-bitwise\n    const isNegative = (bytes[bytes.length - 1] & signFlippingByte) !== 0;\n    return isNegative\n        ? -(result &\n            // tslint:disable-next-line:no-bitwise\n            ~(BigInt(signFlippingByte) << BigInt(bitsPerByte * (bytes.length - 1))))\n        : result;\n};\n/**\n * Convert a BigInt into the \"Script Number\" format. See\n * `parseBytesAsScriptNumber` for more information.\n *\n * @param integer the BigInt to encode as a Script Number\n */\n// tslint:disable-next-line:cyclomatic-complexity\nexport const bigIntToScriptNumber = (integer) => {\n    // tslint:disable-next-line:no-if-statement\n    if (integer === BigInt(0)) {\n        return new Uint8Array();\n    }\n    const bytes = [];\n    const isNegative = integer < 0;\n    const byteStates = 0xff;\n    const bitsPerByte = 8;\n    // tslint:disable-next-line:prefer-const no-let\n    let remaining = isNegative ? -integer : integer;\n    while (remaining > 0) {\n        // tslint:disable-next-line:no-expression-statement no-bitwise\n        bytes.push(Number(remaining & BigInt(byteStates)));\n        // tslint:disable-next-line:no-expression-statement no-bitwise\n        remaining >>= BigInt(bitsPerByte);\n    }\n    const signFlippingByte = 0x80;\n    // tslint:disable-next-line:no-if-statement no-bitwise\n    if ((bytes[bytes.length - 1] & signFlippingByte) > 0) {\n        // tslint:disable-next-line:no-expression-statement\n        bytes.push(isNegative ? signFlippingByte : 0x00);\n        // tslint:disable-next-line:no-if-statement\n    }\n    else if (isNegative) {\n        // tslint:disable-next-line:no-expression-statement no-object-mutation no-bitwise\n        bytes[bytes.length - 1] |= signFlippingByte;\n    }\n    return new Uint8Array(bytes);\n};\n/**\n * Returns true if the provided stack item is \"truthy\" in the sense required\n * by several operations (anything but zero and \"negative zero\").\n *\n * The Satoshi implementation calls this method `CastToBool`.\n *\n * @param item the stack item to check for truthiness\n */\nexport const stackItemIsTruthy = (item) => {\n    const signFlippingByte = 0x80;\n    // tslint:disable-next-line:no-let\n    for (let i = 0; i < item.length; i++) {\n        // tslint:disable-next-line:no-if-statement\n        if (item[i] !== 0) {\n            // tslint:disable-next-line:no-if-statement\n            if (i === item.length - 1 && item[i] === signFlippingByte) {\n                return false;\n            }\n            return true;\n        }\n    }\n    return false;\n};\n/**\n * Convert a boolean into Script Number format (the type used to express\n * boolean values emitted by several operations).\n *\n * @param value the boolean value to convert\n */\nexport const booleanToScriptNumber = (value) => value ? bigIntToScriptNumber(BigInt(1)) : bigIntToScriptNumber(BigInt(0));\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHlwZXMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9zcmMvbGliL2F1dGgvaW5zdHJ1Y3Rpb24tc2V0cy9jb21tb24vdHlwZXMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTSxDQUFOLElBQVksaUJBR1g7QUFIRCxXQUFZLGlCQUFpQjtJQUMzQixpR0FBNEUsQ0FBQTtJQUM1RSw0R0FBdUYsQ0FBQTtBQUN6RixDQUFDLEVBSFcsaUJBQWlCLEtBQWpCLGlCQUFpQixRQUc1QjtBQUVELGtDQUFrQztBQUNsQyxNQUFNLENBQUMsTUFBTSxtQkFBbUIsR0FBRyxDQUNqQyxLQUFpQyxFQUNMLEVBQUUsQ0FDOUIsS0FBSyxLQUFLLGlCQUFpQixDQUFDLFVBQVU7SUFDdEMsS0FBSyxLQUFLLGlCQUFpQixDQUFDLGVBQWUsQ0FBQztBQUU5Qzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztHQXdDRztBQUNILGlEQUFpRDtBQUNqRCxNQUFNLENBQUMsTUFBTSx3QkFBd0IsR0FBRyxDQUN0QyxLQUFpQixFQUNqQixzQkFBc0IsR0FBRyxJQUFJLEVBQzdCLDZCQUE2QixHQUFHLENBQUMsRUFDTCxFQUFFO0lBQzlCLDJDQUEyQztJQUMzQyxJQUFJLEtBQUssQ0FBQyxNQUFNLEtBQUssQ0FBQyxFQUFFO1FBQ3RCLE9BQU8sTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDO0tBQ2xCO0lBQ0QsMkNBQTJDO0lBQzNDLElBQUksS0FBSyxDQUFDLE1BQU0sR0FBRyw2QkFBNkIsRUFBRTtRQUNoRCxPQUFPLGlCQUFpQixDQUFDLFVBQVUsQ0FBQztLQUNyQztJQUNELE1BQU0sbUJBQW1CLEdBQUcsS0FBSyxDQUFDLEtBQUssQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFDLENBQUM7SUFDcEQsTUFBTSx5QkFBeUIsR0FBRyxLQUFLLENBQUMsS0FBSyxDQUFDLE1BQU0sR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFD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","import { binToHex, flattenBinArray } from '../../utils/utils';\nimport { OpcodesBCH } from './bch/bch';\nimport { OpcodesBTC } from './btc/btc';\nexport * from './btc/btc';\nexport * from './bch/bch';\nexport * from './common/common';\nexport const authenticationInstructionIsMalformed = (instruction) => instruction\n    .malformed === true;\nexport const authenticationInstructionsAreMalformed = (instructions) => instructions.length > 0 &&\n    authenticationInstructionIsMalformed(instructions[instructions.length - 1]);\nexport const authenticationInstructionsAreNotMalformed = (instructions) => !authenticationInstructionsAreMalformed(instructions);\nvar CommonPushOpcodes;\n(function (CommonPushOpcodes) {\n    CommonPushOpcodes[CommonPushOpcodes[\"OP_0\"] = 0] = \"OP_0\";\n    CommonPushOpcodes[CommonPushOpcodes[\"OP_PUSHDATA_1\"] = 76] = \"OP_PUSHDATA_1\";\n    CommonPushOpcodes[CommonPushOpcodes[\"OP_PUSHDATA_2\"] = 77] = \"OP_PUSHDATA_2\";\n    CommonPushOpcodes[CommonPushOpcodes[\"OP_PUSHDATA_4\"] = 78] = \"OP_PUSHDATA_4\";\n})(CommonPushOpcodes || (CommonPushOpcodes = {}));\nexport var Bytes;\n(function (Bytes) {\n    Bytes[Bytes[\"Uint8\"] = 1] = \"Uint8\";\n    Bytes[Bytes[\"Uint16\"] = 2] = \"Uint16\";\n    Bytes[Bytes[\"Uint32\"] = 4] = \"Uint32\";\n})(Bytes || (Bytes = {}));\n/**\n * Note: this implementation assumes `script` is defined and long enough to read\n * the specified number of bytes. If necessary, validation should be done before\n * calling this method.\n *\n * @param script the Uint8Array from which to read\n * @param index the index from which to begin reading\n * @param length the number of bytes to read\n */\nexport const readLittleEndianNumber = (script, index, length) => {\n    const view = new DataView(script.buffer, index, length);\n    const readAsLittleEndian = true;\n    return length === Bytes.Uint8\n        ? view.getUint8(0)\n        : length === Bytes.Uint16\n            ? view.getUint16(0, readAsLittleEndian)\n            : view.getUint32(0, readAsLittleEndian);\n};\n/**\n * Note: this implementation assumes `script` is defined and long enough to\n * write the specified number of bytes. It also assumes the provided `number` is\n * representable in `length` bytes.\n *\n * If necessary, validation should be done before calling this method.\n *\n * @param script the Uint8Array to which the number should be written\n * @param index the index at which to begin reading\n * @param length the number of bytes to use\n * @param value the number to write at `script[index]`\n */\nexport const writeLittleEndianNumber = (script, index, length, value) => {\n    const view = new DataView(script.buffer, index, length);\n    const writeAsLittleEndian = true;\n    // tslint:disable-next-line:no-expression-statement\n    length === Bytes.Uint8\n        ? view.setUint8(0, value) // tslint:disable-line: no-void-expression\n        : length === Bytes.Uint16\n            ? view.setUint16(0, value, writeAsLittleEndian) // tslint:disable-line: no-void-expression\n            : view.setUint32(0, value, writeAsLittleEndian); // tslint:disable-line: no-void-expression\n    return script;\n};\nexport const numberToLittleEndianBin = (value, length) => {\n    const array = new Uint8Array(length);\n    return writeLittleEndianNumber(array, 0, length, value);\n};\n/**\n * Returns the number of bytes used to indicate the length of the push in this\n * operation.\n * @param opcode an opcode between 0x00 and 0x4e\n */\nexport const lengthBytesForPushOpcode = (opcode) => opcode < CommonPushOpcodes.OP_PUSHDATA_1\n    ? 0\n    : opcode === CommonPushOpcodes.OP_PUSHDATA_1\n        ? Bytes.Uint8\n        : opcode === CommonPushOpcodes.OP_PUSHDATA_2\n            ? Bytes.Uint16\n            : Bytes.Uint32;\n/**\n * Parse one instruction from the provided script.\n *\n * Returns an object with an `instruction` referencing a\n * `ParsedAuthenticationInstruction`, and a `nextIndex` indicating the next\n * index from which to read. If the next index is greater than or equal to the\n * length of the script, the script has been fully parsed.\n *\n * The final `ParsedAuthenticationInstruction` from a serialized script may be\n * malformed if 1) the final operation is a push and 2) too few bytes remain for\n * the push operation to complete.\n *\n * @param script the script from which to read the next instruction\n * @param index the offset from which to begin reading\n */\n// tslint:disable-next-line:cyclomatic-complexity\nexport const readAuthenticationInstruction = (script, index) => {\n    const opcode = script[index];\n    // tslint:disable-next-line:no-if-statement\n    if (opcode > CommonPushOpcodes.OP_PUSHDATA_4) {\n        return {\n            instruction: {\n                opcode: opcode\n            },\n            nextIndex: index + 1\n        };\n    }\n    const lengthBytes = lengthBytesForPushOpcode(opcode);\n    const pushBytes = lengthBytes === 0;\n    // tslint:disable-next-line:no-if-statement\n    if (!pushBytes && index + lengthBytes >= script.length) {\n        const sliceStart = index + 1;\n        const sliceEnd = sliceStart + lengthBytes;\n        return {\n            instruction: {\n                expectedLengthBytes: lengthBytes,\n                length: script.slice(sliceStart, sliceEnd),\n                malformed: true,\n                opcode: opcode\n            },\n            nextIndex: sliceEnd\n        };\n    }\n    const dataBytes = pushBytes\n        ? opcode\n        : readLittleEndianNumber(script, index + 1, lengthBytes);\n    const dataStart = index + 1 + lengthBytes;\n    const dataEnd = dataStart + dataBytes;\n    return {\n        instruction: {\n            data: script.slice(dataStart, dataEnd),\n            ...(dataEnd > script.length\n                ? {\n                    expectedDataBytes: dataEnd - dataStart,\n                    malformed: true\n                }\n                : undefined),\n            opcode: opcode\n        },\n        nextIndex: dataEnd\n    };\n};\n/**\n * Parse authentication bytecode (`lockingBytecode` or `unlockingBytecode`)\n * into `ParsedAuthenticationInstructions`. The method\n * `authenticationInstructionsAreMalformed` can be used to check if these\n * instructions include a malformed instruction. If not, they are valid\n * `AuthenticationInstructions`.\n *\n * This implementation is common to most bitcoin forks, but the type parameter\n * can be used to strongly type the resulting instructions. For example:\n *\n * ```js\n *  const instructions = parseAuthenticationBytecode<OpcodesBCH>(script);\n * ```\n *\n * @param script the serialized script to parse\n */\nexport const parseBytecode = (script) => {\n    const instructions = [];\n    // tslint:disable-next-line:no-let\n    let i = 0;\n    while (i < script.length) {\n        const { instruction, nextIndex } = readAuthenticationInstruction(script, i);\n        // tslint:disable-next-line:no-expression-statement\n        i = nextIndex;\n        // tslint:disable-next-line:no-expression-statement\n        instructions.push(instruction);\n    }\n    return instructions;\n};\nconst isPush = (instruction) => \n// tslint:disable-next-line: strict-type-predicates\ninstruction.data !== undefined;\n/**\n * OP_0 is the only single-word push. All other push instructions will\n * disassemble to multiple ASM words. (OP_1-OP_16 are handled like normal\n * operations.)\n */\nconst isMultiWordPush = (opcode) => opcode !== CommonPushOpcodes.OP_0;\nconst formatAsmPushHex = (data) => data.length > 0 ? `0x${binToHex(data)}` : '';\nconst formatMissingBytesAsm = (missing) => `[missing ${missing} byte${missing === 1 ? '' : 's'}]`;\nconst hasMalformedLength = (instruction) => \n// tslint:disable-next-line: strict-type-predicates\ninstruction\n    .length !== undefined;\nconst isPushData = (pushOpcode) => lengthBytesForPushOpcode(pushOpcode) > 0;\nexport const disassembleParsedAuthenticationInstructionMalformed = (opcodes, instruction) => `${opcodes[instruction.opcode]} ${hasMalformedLength(instruction)\n    ? `${formatAsmPushHex(instruction.length)}${formatMissingBytesAsm(instruction.expectedLengthBytes - instruction.length.length)}`\n    : `${isPushData(instruction.opcode)\n        ? `${instruction.expectedDataBytes} `\n        : ''}${formatAsmPushHex(instruction.data)}${formatMissingBytesAsm(instruction.expectedDataBytes - instruction.data.length)}`}`;\nexport const disassembleAuthenticationInstruction = (opcodes, instruction) => `${opcodes[instruction.opcode]}${isPush(instruction) &&\n    isMultiWordPush(instruction.opcode)\n    ? ` ${isPushData(instruction.opcode)\n        ? `${instruction.data.length} `\n        : ''}${formatAsmPushHex(instruction.data)}`\n    : ''}`;\nexport const disassembleParsedAuthenticationInstruction = (opcodes, instruction) => authenticationInstructionIsMalformed(instruction)\n    ? disassembleParsedAuthenticationInstructionMalformed(opcodes, instruction)\n    : disassembleAuthenticationInstruction(opcodes, instruction);\n/**\n * Disassemble an array of `ParsedAuthenticationInstructions` (including\n * potentially malformed instructions) into its ASM representation.\n *\n * @param script the array of instructions to disassemble\n */\nexport const disassembleParsedAuthenticationInstructions = (opcodes, instructions) => instructions\n    .map(instruction => disassembleParsedAuthenticationInstruction(opcodes, instruction))\n    .join(' ');\n/**\n * Disassemble authentication bytecode into a lossless ASM representation.\n *\n * TODO: a similar method which re-formats ASM strings, converting HexLiterals to Script Numbers or UTF8Literals.\n *\n * @param opcodes the set to use when determining the name of opcodes, e.g. `OpcodesBCH`\n * @param bytecode the authentication bytecode to disassemble\n */\nexport const disassembleBytecode = (opcodes, bytecode) => disassembleParsedAuthenticationInstructions(opcodes, parseBytecode(bytecode));\n/**\n * Disassemble BCH authentication bytecode into its ASM representation.\n * @param bytecode the authentication bytecode to disassemble\n */\nexport const disassembleBytecodeBCH = (bytecode) => disassembleParsedAuthenticationInstructions(OpcodesBCH, parseBytecode(bytecode));\n// TODO: assembleBytecodeBCH – instantiate synchronous compiler, throw any errors\n// TODO: assembleBytecodeBTC\n/**\n * Disassemble BTC authentication bytecode into its ASM representation.\n * @param bytecode the authentication bytecode to disassemble\n */\nexport const disassembleBytecodeBTC = (bytecode) => disassembleParsedAuthenticationInstructions(OpcodesBTC, parseBytecode(bytecode));\nconst getLengthBytes = (instruction) => numberToLittleEndianBin(instruction.data.length, lengthBytesForPushOpcode(instruction.opcode));\nexport const serializeAuthenticationInstruction = (instruction) => Uint8Array.from([\n    instruction.opcode,\n    ...(isPush(instruction)\n        ? [\n            ...(isPushData(instruction.opcode)\n                ? getLengthBytes(instruction)\n                : []),\n            ...instruction.data\n        ]\n        : [])\n]);\nexport const serializeParsedAuthenticationInstructionMalformed = (instruction) => Uint8Array.from([\n    instruction.opcode,\n    ...(hasMalformedLength(instruction)\n        ? instruction.length\n        : isPushData(instruction.opcode)\n            ? numberToLittleEndianBin(instruction.expectedDataBytes, lengthBytesForPushOpcode(instruction.opcode))\n            : []),\n    ...(!hasMalformedLength(instruction) ? instruction.data : [])\n]);\nexport const serializeParsedAuthenticationInstruction = (instruction) => authenticationInstructionIsMalformed(instruction)\n    ? serializeParsedAuthenticationInstructionMalformed(instruction)\n    : serializeAuthenticationInstruction(instruction);\nexport const serializeAuthenticationInstructions = (instructions) => flattenBinArray(instructions.map(serializeAuthenticationInstruction));\nexport const serializeParsedAuthenticationInstructions = (instructions) => flattenBinArray(instructions.map(serializeParsedAuthenticationInstruction));\n/**\n * Create an object where each key is an opcode identifier and each value is\n * the bytecode value (`Uint8Array`) it represents.\n * @param opcodes An opcode enum, e.g. `OpcodesBCH`\n */\nexport const generateBytecodeMap = (opcodes) => Object.entries(opcodes) // tslint:disable-line: no-inferred-empty-object-type\n    .filter((entry) => typeof entry[1] === 'number')\n    .reduce((identifiers, pair) => ({\n    ...identifiers,\n    [pair[0]]: Uint8Array.of(pair[1])\n}), {});\n//# sourceMappingURL=data:application/json;base64,","import { getResolutionErrors } from './errors';\nimport { parseScript } from './parse';\nimport { reduceScript } from './reduce';\nimport { createIdentifierResolver, resolveScriptSegment } from './resolve';\n/**\n * Note, `compileScript` is the recommended API for using this method.\n */\n// tslint:disable-next-line: cyclomatic-complexity\nexport const compileScriptText = (script, data, environment, scriptId) => {\n    const parseResult = parseScript(script);\n    // tslint:disable-next-line: no-if-statement\n    if (!parseResult.status) {\n        return {\n            errorType: 'parse',\n            errors: [\n                {\n                    error: `Encountered unexpected input while parsing script. Expected ${parseResult.expected.join(', ')}`,\n                    range: {\n                        endColumn: parseResult.index.line,\n                        endLineNumber: parseResult.index.line,\n                        startColumn: parseResult.index.line,\n                        startLineNumber: parseResult.index.line\n                    }\n                }\n            ],\n            success: false\n        };\n    }\n    const resolver = createIdentifierResolver(scriptId, data, environment);\n    const resolvedScript = resolveScriptSegment(parseResult.value, resolver);\n    const resolutionErrors = getResolutionErrors(resolvedScript);\n    // tslint:disable-next-line: no-if-statement\n    if (resolutionErrors.length !== 0) {\n        return {\n            errorType: 'resolve',\n            errors: resolutionErrors,\n            parse: parseResult.value,\n            resolve: resolvedScript,\n            success: false\n        };\n    }\n    const reduction = reduceScript(resolvedScript, environment.vm, environment.createState);\n    return {\n        ...(reduction.errors === undefined\n            ? { success: true }\n            : { success: false, errorType: 'reduce', errors: reduction.errors }),\n        bytecode: reduction.bytecode,\n        parse: parseResult.value,\n        reduce: reduction,\n        resolve: resolvedScript\n    };\n};\n/**\n * Parse, resolve, and reduce the provided Bitauth script using the provided\n * `data` and `environment`.\n */\nexport const compileScript = (scriptId, data, environment) => {\n    const script = environment.scripts[scriptId];\n    // tslint:disable-next-line: no-if-statement\n    if (script === undefined) {\n        return {\n            errorType: 'parse',\n            errors: [\n                {\n                    error: `No script with an ID of '${scriptId}' was provided in the compilation environment.`,\n                    range: {\n                        endColumn: 0,\n                        endLineNumber: 0,\n                        startColumn: 0,\n                        startLineNumber: 0\n                    }\n                }\n            ],\n            success: false\n        };\n    }\n    return compileScriptText(script, data, environment, scriptId);\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tcGlsZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3NyYy9saWIvYXV0aC90ZW1wbGF0ZXMvbGFuZ3VhZ2UvY29tcGlsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQSxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSxVQUFVLENBQUM7QUFDL0MsT0FBTyxFQUF3QixXQUFXLEVBQUUsTUFBTSxTQUFTLENBQUM7QUFDNUQsT0FBTyxFQUFFLFlBQVksRUFBcUMsTUFBTSxVQUFVLENBQUM7QUFDM0UsT0FBTyxFQUdMLHdCQUF3QixFQUd4QixvQkFBb0IsRUFDckIsTUFBTSxXQUFXLENBQUM7QUE0RG5COztHQUVHO0FBQ0gsa0RBQWtEO0FBQ2xELE1BQU0sQ0FBQyxNQUFNLGlCQUFpQixHQUFHLENBSS9CLE1BQWMsRUFDZCxJQUE0QyxFQUM1QyxXQUEwRCxFQUMxRCxRQUFpQixFQUNnQixFQUFFO0lBQ25DLE1BQU0sV0FBVyxHQUFHLFdBQVcsQ0FBQyxNQUFNLENBQUMsQ0FBQztJQUN4Qyw0Q0FBNEM7SUFDNUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxNQUFNLEVBQUU7UUFDdkIsT0FBTztZQUNMLFNBQVMsRUFBRSxPQUFPO1lBQ2xCLE1BQU0sRUFBRTtnQkFDTjtvQkFDRSxLQUFLLEVBQUUsK0RBQStELFdBQVcsQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUM3RixJQUFJLENBQ0wsRUFBRTtvQkFDSCxLQUFLLEVBQUU7d0JBQ0wsU0FBUyxFQUFFLFdBQVcsQ0FBQyxLQUFLLENBQUMsSUFBSTt3QkFDakMsYUFBYSxFQUFFLFdBQVcsQ0FBQyxLQUFLLENBQUMsSUFBSTt3QkFDckMsV0FBVyxFQUFFLFdBQVcsQ0FBQyxLQUFLLENBQUMsSUFBSTt3QkFDbkMsZUFBZSxFQUFFLFdBQVcsQ0FBQyxLQUFLLENBQUMsSUFBSTtxQkFDeEM7aUJBQ0Y7YUFDRjtZQUNELE9BQU8sRUFBRSxLQUFLO1NBQ2YsQ0FBQztLQUNIO0lBQ0QsTUFBTSxRQUFRLEdBQUcsd0JBQXdCLENBQUMsUUFBUSxFQUFFLElBQUksRUFBRSxXQUFXLENBQUMsQ0FBQztJQUN2RSxNQUFNLGNBQWMsR0FBRyxvQkFBb0IsQ0FBQyxXQUFXLENBQUMsS0FBSyxFQUFFLFFBQVEsQ0FBQyxDQUFDO0lBQ3pFLE1BQU0sZ0JBQWdCLEdBQUcsbUJBQW1CLENBQUMsY0FBYyxDQUFDLENBQUM7SUFDN0QsNENBQTRDO0lBQzVDLElBQUksZ0JBQWdCLENBQUMsTUFBTSxLQUFLLENBQUMsRUFBRTtRQUNqQyxPQUFPO1lBQ0wsU0FBUyxFQUFFLFNBQVM7WUFDcEIsTUFBTSxFQUFFLGdCQUFnQjtZQUN4QixLQUFLLEVBQUUsV0FBVyxDQUFDLEtBQUs7WUFDeEIsT0FBTyxFQUFFLGNBQWM7WUFDdkIsT0FBTyxFQUFFLEtBQUs7U0FDZixDQUFDO0tBQ0g7SUFDRCxNQUFNLFNBQVMsR0FBRyxZQUFZLENBQzVCLGNBQWMsRUFDZCxXQUFXLENBQUMsRUFBRSxFQUNkLFdBQVcsQ0FBQyxXQUFXLENBQ3hCLENBQUM7SUFDRixPQUFPO1FBQ0wsR0FBRyxDQUFDLFNBQVMsQ0FBQyxNQUFNLEtBQUssU0FBUztZQUNoQyxDQUFDLENBQUMsRUFBRSxPQUFPLEVBQUUsSUFBSSxFQUFFO1lBQ25CLENBQUMsQ0FBQyxFQUFFLE9BQU8sRUFBRSxLQUFLLEVBQUUsU0FBUyxFQUFFLFFBQVEsRUFBRSxNQUFNLEVBQUUsU0FBUyxDQUFDLE1BQU0sRUFBRSxDQUFDO1FBQ3RFLFFBQVEsRUFBRSxTQUFTLENBQUMsUUFBUTtRQUM1QixLQUFLLEVBQUUsV0FBVyxDQUFDLEtBQUs7UUFDeEIsTUFBTSxFQUFFLFNBQVM7UUFDakIsT0FBTyxFQUFFLGNBQWM7S0FDeEIsQ0FBQztBQUNKLENBQUMsQ0FBQztBQUVGOzs7R0FHRztBQUNILE1BQU0sQ0FBQyxNQUFNLGFBQWEsR0FBRyxDQUkzQixRQUFnQixFQUNoQixJQUE0QyxFQUM1QyxXQUEwRCxFQUN6QixFQUFFO0lBQ25DLE1BQU0sTUFBTSxHQUFHLFdBQVcsQ0FBQyxPQUFPLENBQUMsUUFBUSxDQUF1QixDQUFDO0lBQ25FLDRDQUE0QztJQUM1QyxJQUFJLE1BQU0sS0FBSyxTQUFTLEVBQUU7UUFDeEIsT0FBTztZQUNMLFNBQVMsRUFBRSxPQUFPO1lBQ2xCLE1BQU0sRUFBRTtnQkFDTjtvQkFDRSxLQUFLLEVBQUUsNEJBQTRCLFFBQVEsZ0RBQWdEO29CQUMzRixLQUFLLEVBQUU7d0JBQ0wsU0FBUyxFQUFFLENBQUM7d0JBQ1osYUFBYSxFQUFFLENBQUM7d0JBQ2hCLFdBQVcsRUFBRSxDQUFDO3dCQUNkLGVBQWUsRUFBRSxDQUFDO3FCQUNuQjtpQkFDRjthQUNGO1lBQ0QsT0FBTyxFQUFFLEtBQUs7U0FDZixDQUFDO0tBQ0g7SUFDRCxPQUFPLGlCQUFpQixDQUN0QixNQUFNLEVBQ04sSUFBSSxFQUNKLFdBQVcsRUFDWCxRQUFRLENBQ1QsQ0FBQztBQUNKLENBQUMsQ0FBQyJ9","import { instantiateSecp256k1, instantiateSha256 } from '../../../crypto/crypto';\nimport { createAuthenticationProgramExternalStateCommonEmpty, generateBytecodeMap, generateSigningSerializationBCH, OpcodesBCH, SigningSerializationFlag } from '../../auth';\nimport { createAuthenticationProgramStateCommon, instantiateVirtualMachineBCH, instructionSetBCHCurrentStrict } from '../../instruction-sets/instruction-sets';\nimport { compileScript } from './compile';\nimport { resolveScriptIdentifier } from './resolve';\nexport var SigningSerializationIdentifier;\n(function (SigningSerializationIdentifier) {\n    /**\n     * A.K.A. `SIGHASH_ALL`\n     */\n    SigningSerializationIdentifier[\"all_outputs\"] = \"all_outputs\";\n    /**\n     * A.K.A. `SIGHASH_ALL|ANYONE_CAN_PAY`\n     */\n    SigningSerializationIdentifier[\"all_outputs_single_input\"] = \"all_outputs_single_input\";\n    /**\n     * A.K.A. `SIGHASH_SINGLE`\n     */\n    SigningSerializationIdentifier[\"corresponding_output\"] = \"corresponding_output\";\n    /**\n     * A.K.A. `SIGHASH_SINGLE|ANYONE_CAN_PAY`\n     */\n    SigningSerializationIdentifier[\"corresponding_output_single_input\"] = \"corresponding_output_single_input\";\n    /**\n     * A.K.A `SIGHASH_NONE`\n     */\n    SigningSerializationIdentifier[\"no_outputs\"] = \"no_outputs\";\n    /**\n     * A.K.A `SIGHASH_NONE|ANYONE_CAN_PAY`\n     */\n    SigningSerializationIdentifier[\"no_outputs_single_input\"] = \"no_outputs_single_input\";\n})(SigningSerializationIdentifier || (SigningSerializationIdentifier = {}));\nvar ScriptGenerationError;\n(function (ScriptGenerationError) {\n    ScriptGenerationError[\"missingVm\"] = \"An evaluation is required, but no VM was provided.\";\n    ScriptGenerationError[\"missingSha256\"] = \"Sha256 is required, but no implementation was provided.\";\n    ScriptGenerationError[\"missingSecp256k1\"] = \"Secp256k1 is required, but no implementation was provided.\";\n})(ScriptGenerationError || (ScriptGenerationError = {}));\n// tslint:disable-next-line: cyclomatic-complexity\nconst getSigningSerializationType = (signingSerializationIdentifier) => {\n    switch (signingSerializationIdentifier) {\n        case SigningSerializationIdentifier.all_outputs:\n            return Uint8Array.of(\n            // tslint:disable-next-line: no-bitwise\n            SigningSerializationFlag.all_outputs | SigningSerializationFlag.fork_id);\n        case SigningSerializationIdentifier.all_outputs_single_input:\n            return Uint8Array.of(\n            // tslint:disable-next-line: no-bitwise\n            SigningSerializationFlag.all_outputs |\n                SigningSerializationFlag.single_input |\n                SigningSerializationFlag.fork_id);\n        case SigningSerializationIdentifier.corresponding_output:\n            return Uint8Array.of(\n            // tslint:disable-next-line: no-bitwise\n            SigningSerializationFlag.corresponding_output |\n                SigningSerializationFlag.fork_id);\n        case SigningSerializationIdentifier.corresponding_output_single_input:\n            return Uint8Array.of(\n            // tslint:disable-next-line: no-bitwise\n            SigningSerializationFlag.corresponding_output |\n                SigningSerializationFlag.single_input |\n                SigningSerializationFlag.fork_id);\n        case SigningSerializationIdentifier.no_outputs:\n            return Uint8Array.of(\n            // tslint:disable-next-line: no-bitwise\n            SigningSerializationFlag.no_outputs | SigningSerializationFlag.fork_id);\n        case SigningSerializationIdentifier.no_outputs_single_input:\n            return Uint8Array.of(\n            // tslint:disable-next-line: no-bitwise\n            SigningSerializationFlag.no_outputs |\n                SigningSerializationFlag.single_input |\n                SigningSerializationFlag.fork_id);\n        default:\n            return undefined;\n    }\n};\nvar SignatureIdentifier;\n(function (SignatureIdentifier) {\n    SignatureIdentifier[SignatureIdentifier[\"variableIdIndex\"] = 0] = \"variableIdIndex\";\n    SignatureIdentifier[SignatureIdentifier[\"signingTargetIndex\"] = 2] = \"signingTargetIndex\";\n    SignatureIdentifier[SignatureIdentifier[\"expectedSegments\"] = 3] = \"expectedSegments\";\n})(SignatureIdentifier || (SignatureIdentifier = {}));\nexport const compilerOperationBCHGenerateSignature = (name, signingAlgorithm) => (\n// tslint:disable-next-line: cyclomatic-complexity\nidentifier, data, environment) => {\n    const keys = data.keys;\n    const signatures = keys.signatures;\n    const privateKeys = keys.privateKeys;\n    // tslint:disable-next-line: no-if-statement\n    if (signatures !== undefined &&\n        signatures[identifier] !== undefined) {\n        return signatures[identifier];\n    }\n    const identifierSegments = identifier.split('.');\n    // tslint:disable-next-line: no-if-statement\n    if (identifierSegments.length !== SignatureIdentifier.expectedSegments) {\n        return `Invalid signature identifier. Signatures must be of the form: \"[name].${name}.[signing serialization type]\".`;\n    }\n    const variableId = identifierSegments[SignatureIdentifier.variableIdIndex];\n    const signingSerializationIdentifier = identifierSegments[SignatureIdentifier.signingTargetIndex];\n    const signingSerializationType = getSigningSerializationType(signingSerializationIdentifier);\n    // tslint:disable-next-line: no-if-statement\n    if (signingSerializationType === undefined) {\n        return `Unknown signing serialization identifier, \"${signingSerializationIdentifier}\".`;\n    }\n    // tslint:disable-next-line: no-if-statement\n    if (privateKeys !== undefined &&\n        privateKeys[variableId] !== undefined) {\n        const privateKey = privateKeys[variableId];\n        const operationData = data.operationData;\n        // tslint:disable-next-line: no-if-statement\n        if (operationData === undefined) {\n            return `Could not construct the signature \"${identifier}\", signing serialization data was not provided in the compilation data.`;\n        }\n        const secp256k1 = environment.secp256k1;\n        // tslint:disable-next-line: no-if-statement\n        if (secp256k1 === undefined) {\n            return ScriptGenerationError.missingSecp256k1;\n        }\n        const sha256 = environment.sha256;\n        // tslint:disable-next-line: no-if-statement\n        if (sha256 === undefined) {\n            return ScriptGenerationError.missingSha256;\n        }\n        const serialization = generateSigningSerializationBCH(operationData.version, operationData.hashTransactionOutpoints, operationData.hashTransactionSequenceNumbers, operationData.outpointTransactionHash, operationData.outpointIndex, operationData.coveredBytecode, operationData.outputValue, operationData.sequenceNumber, operationData.hashCorrespondingOutput, operationData.hashTransactionOutputs, operationData.locktime, signingSerializationType);\n        const digest = sha256.hash(sha256.hash(serialization));\n        const bitcoinEncodedSignature = Uint8Array.from([\n            ...signingAlgorithm(secp256k1)(privateKey, digest),\n            ...signingSerializationType\n        ]);\n        return bitcoinEncodedSignature;\n    }\n    return `Identifier \"${identifier}\" refers to a signature, but no signatures or private keys for \"${variableId}\" were provided in the compilation data.`;\n};\nexport const compilerOperationBCHGenerateDataSignature = (name, signingAlgorithm) => (\n// tslint:disable-next-line: cyclomatic-complexity\nidentifier, data, environment) => {\n    const keys = data.keys;\n    const signatures = keys.signatures;\n    const privateKeys = keys.privateKeys;\n    // tslint:disable-next-line: no-if-statement\n    if (signatures !== undefined &&\n        signatures[identifier] !== undefined) {\n        return signatures[identifier];\n    }\n    const identifierSegments = identifier.split('.');\n    // tslint:disable-next-line: no-if-statement\n    if (identifierSegments.length !== SignatureIdentifier.expectedSegments) {\n        return `Invalid data signature identifier. Data signatures must be of the form: \"[name].${name}.[target script ID]\".`;\n    }\n    const variableId = identifierSegments[SignatureIdentifier.variableIdIndex];\n    const scriptId = identifierSegments[SignatureIdentifier.signingTargetIndex];\n    const signingTarget = environment.scripts[scriptId];\n    const compiledTarget = resolveScriptIdentifier(scriptId, data, environment);\n    // tslint:disable-next-line: no-if-statement\n    if (signingTarget === undefined || compiledTarget === false) {\n        return `Data signature tried to sign an unknown target script, \"${scriptId}\".`;\n    }\n    // tslint:disable-next-line: no-if-statement\n    if (typeof compiledTarget === 'string') {\n        return compiledTarget;\n    }\n    // tslint:disable-next-line: no-if-statement\n    if (privateKeys !== undefined &&\n        privateKeys[variableId] !== undefined) {\n        const privateKey = privateKeys[variableId];\n        const secp256k1 = environment.secp256k1;\n        // tslint:disable-next-line: no-if-statement\n        if (secp256k1 === undefined) {\n            return ScriptGenerationError.missingSecp256k1;\n        }\n        const sha256 = environment.sha256;\n        // tslint:disable-next-line: no-if-statement\n        if (sha256 === undefined) {\n            return ScriptGenerationError.missingSha256;\n        }\n        const digest = sha256.hash(compiledTarget);\n        return signingAlgorithm(secp256k1)(privateKey, digest);\n    }\n    return `Identifier \"${identifier}\" refers to a data signature, but no signatures or private keys for \"${variableId}\" were provided in the compilation data.`;\n};\nexport const getCompilerOperationsBCH = () => ({\n    Key: {\n        data_signature: compilerOperationBCHGenerateDataSignature('data_signature', secp256k1 => secp256k1.signMessageHashDER),\n        // tslint:disable-next-line: cyclomatic-complexity\n        public_key: (identifier, data, environment) => {\n            const keys = data.keys;\n            const publicKeys = keys.publicKeys;\n            const privateKeys = keys.privateKeys;\n            const variableId = identifier.split('.')[0];\n            // tslint:disable-next-line: no-if-statement\n            if (publicKeys !== undefined &&\n                publicKeys[variableId] !== undefined) {\n                return publicKeys[variableId];\n            }\n            // tslint:disable-next-line: no-if-statement\n            if (privateKeys !== undefined &&\n                privateKeys[variableId] !== undefined) {\n                const secp256k1 = environment.secp256k1;\n                return secp256k1 === undefined\n                    ? ScriptGenerationError.missingSecp256k1\n                    : secp256k1.derivePublicKeyCompressed(privateKeys[variableId]);\n            }\n            return `Identifier \"${identifier}\" refers to a public key, but no public or private keys for \"${variableId}\" were provided in the compilation data.`;\n        },\n        schnorr_data_signature: compilerOperationBCHGenerateDataSignature('schnorr_data_signature', secp256k1 => secp256k1.signMessageHashSchnorr),\n        schnorr_signature: compilerOperationBCHGenerateSignature('schnorr_signature', secp256k1 => secp256k1.signMessageHashSchnorr),\n        signature: compilerOperationBCHGenerateSignature('signature', secp256k1 => secp256k1.signMessageHashDER)\n    }\n});\n/**\n * TODO: describe\n * @param compilationEnvironment the environment from which to create the compiler\n */\nexport const createCompiler = (compilationEnvironment) => ({\n    debug: (script, data) => compileScript(script, data, compilationEnvironment),\n    generate: (script, data) => {\n        const result = compileScript(script, data, compilationEnvironment);\n        return result.success\n            ? { success: true, bytecode: result.bytecode }\n            : { success: false, errorType: result.errorType, errors: result.errors };\n    }\n});\n/**\n * TODO: describe\n *\n * @param overrides a compilation environment from which properties will be used\n * to override properties of the default BCH environment\n */\nexport const createCompilerBCH = async (overrides) => {\n    const [sha256, secp256k1, vm] = await Promise.all([\n        instantiateSha256(),\n        instantiateSecp256k1(),\n        instantiateVirtualMachineBCH(instructionSetBCHCurrentStrict)\n    ]);\n    return createCompiler({\n        ...{\n            createState: (\n            // tslint:disable-next-line: no-any\n            instructions) => createAuthenticationProgramStateCommon(instructions, [], createAuthenticationProgramExternalStateCommonEmpty()),\n            opcodes: generateBytecodeMap(OpcodesBCH),\n            operations: getCompilerOperationsBCH(),\n            secp256k1,\n            sha256,\n            vm\n        },\n        ...overrides\n    });\n};\n//# sourceMappingURL=data:application/json;base64,","export const getResolutionErrors = (compiledScript) => compiledScript.reduce((errors, segment) => {\n    switch (segment.type) {\n        case 'error':\n            return [\n                ...errors,\n                {\n                    error: segment.value,\n                    range: segment.range\n                }\n            ];\n        case 'push':\n        case 'evaluation':\n            return [...errors, ...getResolutionErrors(segment.value)];\n        default:\n            return errors;\n    }\n}, []);\n// export const getReductionErrors = () => {};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXJyb3JzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vc3JjL2xpYi9hdXRoL3RlbXBsYXRlcy9sYW5ndWFnZS9lcnJvcnMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBT0EsTUFBTSxDQUFDLE1BQU0sbUJBQW1CLEdBQUcsQ0FDakMsY0FBOEIsRUFDVixFQUFFLENBQ3RCLGNBQWMsQ0FBQyxNQUFNLENBQXFCLENBQUMsTUFBTSxFQUFFLE9BQU8sRUFBRSxFQUFFO0lBQzVELFFBQVEsT0FBTyxDQUFDLElBQUksRUFBRTtRQUNwQixLQUFLLE9BQU87WUFDVixPQUFPO2dCQUNMLEdBQUcsTUFBTTtnQkFDVDtvQkFDRSxLQUFLLEVBQUUsT0FBTyxDQUFDLEtBQUs7b0JBQ3BCLEtBQUssRUFBRSxPQUFPLENBQUMsS0FBSztpQkFDckI7YUFDRixDQUFDO1FBQ0osS0FBSyxNQUFNLENBQUM7UUFDWixLQUFLLFlBQVk7WUFDZixPQUFPLENBQUMsR0FBRyxNQUFNLEVBQUUsR0FBRyxtQkFBbUIsQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQztRQUM1RDtZQUNFLE9BQU8sTUFBTSxDQUFDO0tBQ2pCO0FBQ0gsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDO0FBRVQsOENBQThDIn0=","export * from './compile';\nexport * from './compiler';\nexport * from './errors';\nexport * from './parse';\nexport * from './reduce';\nexport * from './resolve';\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGFuZ3VhZ2UuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9zcmMvbGliL2F1dGgvdGVtcGxhdGVzL2xhbmd1YWdlL2xhbmd1YWdlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLGNBQWMsV0FBVyxDQUFDO0FBQzFCLGNBQWMsWUFBWSxDQUFDO0FBQzNCLGNBQWMsVUFBVSxDQUFDO0FBQ3pCLGNBQWMsU0FBUyxDQUFDO0FBQ3hCLGNBQWMsVUFBVSxDQUFDO0FBQ3pCLGNBQWMsV0FBVyxDQUFDIn0=","import * as P from './parsimmon.js';\n/**\n * TODO: @types/parsimmon is not in use because of some early hacks. Ideally,\n * this can be cleaned up by converting parsimmon.js to TypeScript, and trimming\n * out the parts we don't need.\n */\nconst authenticationScriptParser = P.createLanguage({\n    script: r => P.seqMap(P.regexp(/[\\s]*/), r.expression.sepBy(P.regexp(/[\\s]+/)).node('Script'), P.regexp(/[\\s]*/), (_, expressions) => expressions),\n    // tslint:disable-next-line: object-literal-sort-keys\n    expression: r => P.alt(r.comment, r.push, r.evaluation, r.utf8, r.hex, r.bigint, r.identifier),\n    comment: r => P.alt(r.singleLineComment, r.multiLineComment)\n        .desc('a comment')\n        .node('Comment'),\n    singleLineComment: _ => P.seqMap(P.string('//'), P.regexp(/[^\\n]*/), P.string('\\n'), (__, comment) => comment.trim()),\n    multiLineComment: _ => P.seqMap(P.string('/*'), P.regexp(/[\\s\\S]*(?=\\*\\/)/), P.string('*/'), (__, comment) => comment.trim()),\n    push: r => \n    // tslint:disable-next-line: no-unsafe-any\n    P.seqMap(P.string('<'), r.script, P.string('>'), (_, push) => push)\n        .desc('a push expression')\n        .node('Push'),\n    evaluation: r => P.seqMap(P.string('$('), r.script, P.string(')'), \n    // tslint:disable-next-line: no-unsafe-any\n    (_, evaluation) => evaluation)\n        .desc('an evaluation expression')\n        .node('Evaluation'),\n    identifier: _ => P.regexp(/[a-zA-Z_][\\.a-zA-Z0-9_-]*/)\n        .desc('a valid identifier')\n        .node('Identifier'),\n    utf8: _ => P.alt(P.seqMap(P.string('\"'), P.regexp(/[^\"]*/), P.string('\"'), (__, literal) => literal), P.seqMap(P.string(\"'\"), P.regexp(/[^']*/), P.string(\"'\"), (__, literal) => literal))\n        .desc('a UTF8 literal')\n        .node('UTF8Literal'),\n    hex: _ => P.seqMap(P.string('0x'), P.regexp(/(?:[0-9a-f]{2})+/i).desc('a valid hexadecimal string'), (__, literal) => literal)\n        .desc('a hexadecimal literal')\n        .node('HexLiteral'),\n    bigint: (_ // TODO: support negative numbers – add tests for positive and negative numbers at each byte length\n    ) => P.regexp(/[0-9]+/)\n        .desc('an integer')\n        .map(BigInt)\n        .desc('an integer literal')\n        .node('BigIntLiteral')\n});\nexport const parseScript = (script) => authenticationScriptParser.script.parse(script);\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGFyc2UuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9zcmMvbGliL2F1dGgvdGVtcGxhdGVzL2xhbmd1YWdlL3BhcnNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sS0FBSyxDQUFDLE1BQU0sZ0JBQWdCLENBQUM7QUFFcEM7Ozs7R0FJRztBQUNILE1BQU0sMEJBQTBCLEdBQUcsQ0FBQyxDQUFDLGNBQWMsQ0FBQztJQUNsRCxNQUFNLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FDVixDQUFDLENBQUMsTUFBTSxDQUNOLENBQUMsQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUFDLEVBQ2pCLENBQUMsQ0FBQyxVQUFVLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLEVBQ3BELENBQUMsQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUFDLEVBQ2pCLENBQUMsQ0FBQyxFQUFFLFdBQVcsRUFBRSxFQUFFLENBQUMsV0FBVyxDQUNoQztJQUNILHFEQUFxRDtJQUNyRCxVQUFVLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FDZCxDQUFDLENBQUMsR0FBRyxDQUNILENBQUMsQ0FBQyxPQUFPLEVBQ1QsQ0FBQyxDQUFDLElBQUksRUFDTixDQUFDLENBQUMsVUFBVSxFQUNaLENBQUMsQ0FBQyxJQUFJLEVBQ04sQ0FBQyxDQUFDLEdBQUcsRUFDTCxDQUFDLENBQUMsTUFBTSxFQUNSLENBQUMsQ0FBQyxVQUFVLENBQ2I7SUFDSCxPQUFPLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FDWCxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxpQkFBaUIsRUFBRSxDQUFDLENBQUMsZ0JBQWdCLENBQUM7U0FDM0MsSUFBSSxDQUFDLFdBQVcsQ0FBQztTQUNqQixJQUFJLENBQUMsU0FBUyxDQUFDO0lBQ3BCLGlCQUFpQixFQUFFLENBQUMsQ0FBQyxFQUFFLENBQ3JCLENBQUMsQ0FBQyxNQUFNLENBQ04sQ0FBQyxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsRUFDZCxDQUFDLENBQUMsTUFBTSxDQUFDLFFBQVEsQ0FBQyxFQUNsQixDQUFDLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxFQUNkLENBQUMsRUFBRSxFQUFFLE9BQU8sRUFBRSxFQUFFLENBQUMsT0FBTyxDQUFDLElBQUksRUFBRSxDQUNoQztJQUNILGdCQUFnQixFQUFFLENBQUMsQ0FBQyxFQUFFLENBQ3BCLENBQUMsQ0FBQyxNQUFNLENBQ04sQ0FBQyxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsRUFDZCxDQUFDLENBQUMsTUFBTSxDQUFDLGlCQUFpQixDQUFDLEVBQzNCLENBQUMsQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLEVBQ2QsQ0FBQyxFQUFFLEVBQUUsT0FBTyxFQUFFLEVBQUUsQ0FBQyxPQUFPLENBQUMsSUFBSSxFQUFFLENBQ2hDO0lBQ0gsSUFBSSxFQUFFLENBQUMsQ0FBQyxFQUFFO0lBQ1IsMENBQTBDO0lBQzFDLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLENBQUMsTUFBTSxFQUFFLENBQUMsQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxDQUFDLEVBQUUsSUFBSSxFQUFFLEVBQUUsQ0FBQyxJQUFJLENBQUM7U0FDaEUsSUFBSSxDQUFDLG1CQUFtQixDQUFDO1NBQ3pCLElBQUksQ0FBQyxNQUFNLENBQUM7SUFDakIsVUFBVSxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQ2QsQ0FBQyxDQUFDLE1BQU0sQ0FDTixDQUFDLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxFQUNkLENBQUMsQ0FBQyxNQUFNLEVBQ1IsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUM7SUFDYiwwQ0FBMEM7SUFDMUMsQ0FBQyxDQUFDLEVBQUUsVUFBVSxFQUFFLEVBQUUsQ0FBQyxVQUFVLENBQzlCO1NBQ0UsSUFBSSxDQUFDLDBCQUEwQixDQUFDO1NBQ2hDLElBQUksQ0FBQyxZQUFZLENBQUM7SUFDdkIsVUFBVSxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQ2QsQ0FBQyxDQUFDLE1BQU0sQ0FBQywyQkFBMkIsQ0FBQztTQUNsQyxJQUFJLENBQUMsb0JBQW9CLENBQUM7U0FDMUIsSUFBSSxDQUFDLFlBQVksQ0FBQztJQUN2QixJQUFJLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FDUixDQUFDLENBQUMsR0FBRyxDQUNILENBQUMsQ0FBQyxNQUFNLENBQ04sQ0FBQyxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsRUFDYixDQUFDLENBQUMsTUFBTSxDQUFDLE9BQU8sQ0FBQyxFQUNqQixDQUFDLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxFQUNiLENBQUMsRUFBRSxFQUFFLE9BQU8sRUFBRSxFQUFFLENBQUMsT0FBTyxDQUN6QixFQUNELENBQUMsQ0FBQyxNQUFNLENBQ04sQ0FBQyxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsRUFDYixDQUFDLENBQUMsTUFBTSxDQUFDLE9BQU8sQ0FBQyxFQUNqQixDQUFDLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxFQUNiLENBQUMsRUFBRSxFQUFFLE9BQU8sRUFBRSxFQUFFLENBQUMsT0FBTyxDQUN6QixDQUNGO1NBQ0UsSUFBSSxDQUFDLGdCQUFnQixDQUFDO1NBQ3RCLElBQUksQ0FBQyxhQUFhLENBQUM7SUFDeEIsR0FBRyxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQ1AsQ0FBQyxDQUFDLE1BQU0sQ0FDTixDQUFDLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxFQUNkLENBQUMsQ0FBQyxNQUFNLENBQUMsbUJBQW1CLENBQUMsQ0FBQyxJQUFJLENBQUMsNEJBQTRCLENBQUMsRUFDaEUsQ0FBQyxFQUFFLEVBQUUsT0FBTyxFQUFFLEVBQUUsQ0FBQyxPQUFPLENBQ3pCO1NBQ0UsSUFBSSxDQUFDLHVCQUF1QixDQUFDO1NBQzdCLElBQUksQ0FBQyxZQUFZLENBQUM7SUFDdkIsTUFBTSxFQUFFLENBQ04sQ0FBQyxDQUFDLG1HQUFtRztNQUNyRyxFQUFFLENBQ0YsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxRQUFRLENBQUM7U0FDZixJQUFJLENBQUMsWUFBWSxDQUFDO1NBQ2xCLEdBQUcsQ0FBQyxNQUFNLENBQUM7U0FDWCxJQUFJLENBQUMsb0JBQW9CLENBQUM7U0FDMUIsSUFBSSxDQUFDLGVBQWUsQ0FBQztDQUMzQixDQUFDLENBQUM7QUFtREgsTUFBTSxDQUFDLE1BQU0sV0FBVyxHQUFHLENBQUMsTUFBYyxFQUFlLEVBQUUsQ0FDekQsMEJBQTBCLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxNQUFNLENBQUMsQ0FBQyJ9","'use strict';\n\nfunction Parsimmon(action) {\n  if (!(this instanceof Parsimmon)) {\n    return new Parsimmon(action);\n  }\n  this._ = action;\n}\n\nvar _ = Parsimmon.prototype;\n\nfunction times(n, f) {\n  var i = 0;\n  for (i; i < n; i++) {\n    f(i);\n  }\n}\n\nfunction forEach(f, arr) {\n  times(arr.length, function(i) {\n    f(arr[i], i, arr);\n  });\n}\n\nfunction reduce(f, seed, arr) {\n  forEach(function(elem, i, arr) {\n    seed = f(seed, elem, i, arr);\n  }, arr);\n  return seed;\n}\n\nfunction map(f, arr) {\n  return reduce(\n    function(acc, elem, i, a) {\n      return acc.concat([f(elem, i, a)]);\n    },\n    [],\n    arr\n  );\n}\n\nfunction lshiftBuffer(input) {\n  var asTwoBytes = reduce(\n    function(a, v, i, b) {\n      return a.concat(\n        i === b.length - 1\n          ? Buffer.from([v, 0]).readUInt16BE(0)\n          : b.readUInt16BE(i)\n      );\n    },\n    [],\n    input\n  );\n  return Buffer.from(\n    map(function(x) {\n      return ((x << 1) & 0xffff) >> 8;\n    }, asTwoBytes)\n  );\n}\n\nfunction consumeBitsFromBuffer(n, input) {\n  var state = { v: 0, buf: input };\n  times(n, function() {\n    state = {\n      v: (state.v << 1) | bitPeekBuffer(state.buf),\n      buf: lshiftBuffer(state.buf)\n    };\n  });\n  return state;\n}\n\nfunction bitPeekBuffer(input) {\n  return input[0] >> 7;\n}\n\nfunction sum(numArr) {\n  return reduce(\n    function(x, y) {\n      return x + y;\n    },\n    0,\n    numArr\n  );\n}\n\nfunction find(pred, arr) {\n  return reduce(\n    function(found, elem) {\n      return found || (pred(elem) ? elem : found);\n    },\n    null,\n    arr\n  );\n}\n\nfunction bufferExists() {\n  return typeof Buffer !== 'undefined';\n}\n\nfunction ensureBuffer() {\n  if (!bufferExists()) {\n    throw new Error(\n      'Buffer global does not exist; please consider using https://github.com/feross/buffer if you are running Parsimmon in a browser.'\n    );\n  }\n}\n\nfunction bitSeq(alignments) {\n  ensureBuffer();\n  var totalBits = sum(alignments);\n  if (totalBits % 8 !== 0) {\n    throw new Error(\n      'The bits [' +\n        alignments.join(', ') +\n        '] add up to ' +\n        totalBits +\n        ' which is not an even number of bytes; the total should be divisible by 8'\n    );\n  }\n  var bytes = totalBits / 8;\n\n  var tooBigRange = find(function(x) {\n    return x > 48;\n  }, alignments);\n  if (tooBigRange) {\n    throw new Error(\n      tooBigRange + ' bit range requested exceeds 48 bit (6 byte) Number max.'\n    );\n  }\n\n  return new Parsimmon(function(input, i) {\n    var newPos = bytes + i;\n    if (newPos > input.length) {\n      return makeFailure(i, bytes.toString() + ' bytes');\n    }\n    return makeSuccess(\n      newPos,\n      reduce(\n        function(acc, bits) {\n          var state = consumeBitsFromBuffer(bits, acc.buf);\n          return {\n            coll: acc.coll.concat(state.v),\n            buf: state.buf\n          };\n        },\n        { coll: [], buf: input.slice(i, newPos) },\n        alignments\n      ).coll\n    );\n  });\n}\n\nfunction bitSeqObj(namedAlignments) {\n  ensureBuffer();\n  var seenKeys = {};\n  var totalKeys = 0;\n  var fullAlignments = map(function(item) {\n    if (isArray(item)) {\n      var pair = item;\n      if (pair.length !== 2) {\n        throw new Error(\n          '[' +\n            pair.join(', ') +\n            '] should be length 2, got length ' +\n            pair.length\n        );\n      }\n      assertString(pair[0]);\n      assertNumber(pair[1]);\n      if (Object.prototype.hasOwnProperty.call(seenKeys, pair[0])) {\n        throw new Error('duplicate key in bitSeqObj: ' + pair[0]);\n      }\n      seenKeys[pair[0]] = true;\n      totalKeys++;\n      return pair;\n    } else {\n      assertNumber(item);\n      return [null, item];\n    }\n  }, namedAlignments);\n  if (totalKeys < 1) {\n    throw new Error(\n      'bitSeqObj expects at least one named pair, got [' +\n        namedAlignments.join(', ') +\n        ']'\n    );\n  }\n  var namesOnly = map(function(pair) {\n    return pair[0];\n  }, fullAlignments);\n  var alignmentsOnly = map(function(pair) {\n    return pair[1];\n  }, fullAlignments);\n\n  return bitSeq(alignmentsOnly).map(function(parsed) {\n    var namedParsed = map(function(name, i) {\n      return [name, parsed[i]];\n    }, namesOnly);\n\n    return reduce(\n      function(obj, kv) {\n        if (kv[0] !== null) {\n          obj[kv[0]] = kv[1];\n        }\n        return obj;\n      },\n      {},\n      namedParsed\n    );\n  });\n}\n\nfunction parseBufferFor(other, length) {\n  ensureBuffer();\n  return new Parsimmon(function(input, i) {\n    if (i + length > input.length) {\n      return makeFailure(i, length + ' bytes for ' + other);\n    }\n    return makeSuccess(i + length, input.slice(i, i + length));\n  });\n}\n\nfunction parseBuffer(length) {\n  return parseBufferFor('buffer', length).map(function(unsafe) {\n    return Buffer.from(unsafe);\n  });\n}\n\nfunction encodedString(encoding, length) {\n  return parseBufferFor('string', length).map(function(buff) {\n    return buff.toString(encoding);\n  });\n}\n\nfunction isInteger(value) {\n  return typeof value === 'number' && Math.floor(value) === value;\n}\n\nfunction assertValidIntegerByteLengthFor(who, length) {\n  if (!isInteger(length) || length < 0 || length > 6) {\n    throw new Error(who + ' requires integer length in range [0, 6].');\n  }\n}\n\nfunction uintBE(length) {\n  assertValidIntegerByteLengthFor('uintBE', length);\n  return parseBufferFor('uintBE(' + length + ')', length).map(function(buff) {\n    return buff.readUIntBE(0, length);\n  });\n}\n\nfunction uintLE(length) {\n  assertValidIntegerByteLengthFor('uintLE', length);\n  return parseBufferFor('uintLE(' + length + ')', length).map(function(buff) {\n    return buff.readUIntLE(0, length);\n  });\n}\n\nfunction intBE(length) {\n  assertValidIntegerByteLengthFor('intBE', length);\n  return parseBufferFor('intBE(' + length + ')', length).map(function(buff) {\n    return buff.readIntBE(0, length);\n  });\n}\n\nfunction intLE(length) {\n  assertValidIntegerByteLengthFor('intLE', length);\n  return parseBufferFor('intLE(' + length + ')', length).map(function(buff) {\n    return buff.readIntLE(0, length);\n  });\n}\n\nfunction floatBE() {\n  return parseBufferFor('floatBE', 4).map(function(buff) {\n    return buff.readFloatBE(0);\n  });\n}\n\nfunction floatLE() {\n  return parseBufferFor('floatLE', 4).map(function(buff) {\n    return buff.readFloatLE(0);\n  });\n}\n\nfunction doubleBE() {\n  return parseBufferFor('doubleBE', 8).map(function(buff) {\n    return buff.readDoubleBE(0);\n  });\n}\n\nfunction doubleLE() {\n  return parseBufferFor('doubleLE', 8).map(function(buff) {\n    return buff.readDoubleLE(0);\n  });\n}\n\nfunction toArray(arrLike) {\n  return Array.prototype.slice.call(arrLike);\n}\n// -*- Helpers -*-\n\nfunction isParser(obj) {\n  return obj instanceof Parsimmon;\n}\n\nfunction isArray(x) {\n  return {}.toString.call(x) === '[object Array]';\n}\n\nfunction isBuffer(x) {\n  /* global Buffer */\n  return bufferExists() && Buffer.isBuffer(x);\n}\n\nfunction makeSuccess(index, value) {\n  return {\n    status: true,\n    index: index,\n    value: value,\n    furthest: -1,\n    expected: []\n  };\n}\n\nfunction makeFailure(index, expected) {\n  if (!isArray(expected)) {\n    expected = [expected];\n  }\n  return {\n    status: false,\n    index: -1,\n    value: null,\n    furthest: index,\n    expected: expected\n  };\n}\n\nfunction mergeReplies(result, last) {\n  if (!last) {\n    return result;\n  }\n  if (result.furthest > last.furthest) {\n    return result;\n  }\n  var expected =\n    result.furthest === last.furthest\n      ? union(result.expected, last.expected)\n      : last.expected;\n  return {\n    status: result.status,\n    index: result.index,\n    value: result.value,\n    furthest: last.furthest,\n    expected: expected\n  };\n}\n\nfunction makeLineColumnIndex(input, i) {\n  if (isBuffer(input)) {\n    return {\n      offset: i,\n      line: -1,\n      column: -1\n    };\n  }\n  var lines = input.slice(0, i).split('\\n');\n  // Note that unlike the character offset, the line and column offsets are\n  // 1-based.\n  var lineWeAreUpTo = lines.length;\n  var columnWeAreUpTo = lines[lines.length - 1].length + 1;\n  return {\n    offset: i,\n    line: lineWeAreUpTo,\n    column: columnWeAreUpTo\n  };\n}\n\n// Returns the sorted set union of two arrays of strings\nfunction union(xs, ys) {\n  var obj = {};\n  for (var i = 0; i < xs.length; i++) {\n    obj[xs[i]] = true;\n  }\n  for (var j = 0; j < ys.length; j++) {\n    obj[ys[j]] = true;\n  }\n  var keys = [];\n  for (var k in obj) {\n    if ({}.hasOwnProperty.call(obj, k)) {\n      keys.push(k);\n    }\n  }\n  keys.sort();\n  return keys;\n}\n\nfunction assertParser(p) {\n  if (!isParser(p)) {\n    throw new Error('not a parser: ' + p);\n  }\n}\n\nfunction get(input, i) {\n  if (typeof input === 'string') {\n    return input.charAt(i);\n  }\n  return input[i];\n}\n\n// TODO[ES5]: Switch to Array.isArray eventually.\nfunction assertArray(x) {\n  if (!isArray(x)) {\n    throw new Error('not an array: ' + x);\n  }\n}\n\nfunction assertNumber(x) {\n  if (typeof x !== 'number') {\n    throw new Error('not a number: ' + x);\n  }\n}\n\nfunction assertRegexp(x) {\n  if (!(x instanceof RegExp)) {\n    throw new Error('not a regexp: ' + x);\n  }\n  var f = flags(x);\n  for (var i = 0; i < f.length; i++) {\n    var c = f.charAt(i);\n    // Only allow regexp flags [imu] for now, since [g] and [y] specifically\n    // mess up Parsimmon. If more non-stateful regexp flags are added in the\n    // future, this will need to be revisited.\n    if (c !== 'i' && c !== 'm' && c !== 'u') {\n      throw new Error('unsupported regexp flag \"' + c + '\": ' + x);\n    }\n  }\n}\n\nfunction assertFunction(x) {\n  if (typeof x !== 'function') {\n    throw new Error('not a function: ' + x);\n  }\n}\n\nfunction assertString(x) {\n  if (typeof x !== 'string') {\n    throw new Error('not a string: ' + x);\n  }\n}\n\n// -*- Error Formatting -*-\n\nvar linesBeforeStringError = 2;\nvar linesAfterStringError = 3;\nvar bytesPerLine = 8;\nvar bytesBefore = bytesPerLine * 5;\nvar bytesAfter = bytesPerLine * 4;\nvar defaultLinePrefix = '  ';\n\nfunction repeat(string, amount) {\n  return new Array(amount + 1).join(string);\n}\n\nfunction formatExpected(expected) {\n  if (expected.length === 1) {\n    return 'Expected:\\n\\n' + expected[0];\n  }\n  return 'Expected one of the following: \\n\\n' + expected.join(', ');\n}\n\nfunction leftPad(str, pad, char) {\n  var add = pad - str.length;\n  if (add <= 0) {\n    return str;\n  }\n  return repeat(char, add) + str;\n}\n\nfunction toChunks(arr, chunkSize) {\n  var length = arr.length;\n  var chunks = [];\n  var chunkIndex = 0;\n\n  if (length <= chunkSize) {\n    return [arr.slice()];\n  }\n\n  for (var i = 0; i < length; i++) {\n    if (!chunks[chunkIndex]) {\n      chunks.push([]);\n    }\n\n    chunks[chunkIndex].push(arr[i]);\n\n    if ((i + 1) % chunkSize === 0) {\n      chunkIndex++;\n    }\n  }\n\n  return chunks;\n}\n\n// Get a range of indexes including `i`-th element and `before` and `after` amount of elements from `arr`.\nfunction rangeFromIndexAndOffsets(i, before, after, length) {\n  return {\n    // Guard against the negative upper bound for lines included in the output.\n    from: i - before > 0 ? i - before : 0,\n    to: i + after > length ? length : i + after\n  };\n}\n\nfunction byteRangeToRange(byteRange) {\n  // Exception for inputs smaller than `bytesPerLine`\n  if (byteRange.from === 0 && byteRange.to === 1) {\n    return {\n      from: byteRange.from,\n      to: byteRange.to\n    };\n  }\n\n  return {\n    from: byteRange.from / bytesPerLine,\n    // Round `to`, so we don't get float if the amount of bytes is not divisible by `bytesPerLine`\n    to: Math.floor(byteRange.to / bytesPerLine)\n  };\n}\n\nfunction formatGot(input, error) {\n  var index = error.index;\n  var i = index.offset;\n\n  var verticalMarkerLength = 1;\n  var column;\n  var lineWithErrorIndex;\n  var lines;\n  var lineRange;\n  var lastLineNumberLabelLength;\n\n  if (i === input.length) {\n    return 'Got the end of the input';\n  }\n\n  if (isBuffer(input)) {\n    var byteLineWithErrorIndex = i - (i % bytesPerLine);\n    var columnByteIndex = i - byteLineWithErrorIndex;\n    var byteRange = rangeFromIndexAndOffsets(\n      byteLineWithErrorIndex,\n      bytesBefore,\n      bytesAfter + bytesPerLine,\n      input.length\n    );\n    var bytes = input.slice(byteRange.from, byteRange.to);\n    var bytesInChunks = toChunks(bytes.toJSON().data, bytesPerLine);\n\n    var byteLines = map(function(byteRow) {\n      return map(function(byteValue) {\n        // Prefix byte values with a `0` if they are shorter than 2 characters.\n        return leftPad(byteValue.toString(16), 2, '0');\n      }, byteRow);\n    }, bytesInChunks);\n\n    lineRange = byteRangeToRange(byteRange);\n    lineWithErrorIndex = byteLineWithErrorIndex / bytesPerLine;\n    column = columnByteIndex * 3;\n\n    // Account for an extra space.\n    if (columnByteIndex >= 4) {\n      column += 1;\n    }\n\n    verticalMarkerLength = 2;\n    lines = map(function(byteLine) {\n      return byteLine.length <= 4\n        ? byteLine.join(' ')\n        : byteLine.slice(0, 4).join(' ') + '  ' + byteLine.slice(4).join(' ');\n    }, byteLines);\n    lastLineNumberLabelLength = (\n      (lineRange.to > 0 ? lineRange.to - 1 : lineRange.to) * 8\n    ).toString(16).length;\n\n    if (lastLineNumberLabelLength < 2) {\n      lastLineNumberLabelLength = 2;\n    }\n  } else {\n    var inputLines = input.split(/\\r\\n|[\\n\\r\\u2028\\u2029]/);\n    column = index.column - 1;\n    lineWithErrorIndex = index.line - 1;\n    lineRange = rangeFromIndexAndOffsets(\n      lineWithErrorIndex,\n      linesBeforeStringError,\n      linesAfterStringError,\n      inputLines.length\n    );\n\n    lines = inputLines.slice(lineRange.from, lineRange.to);\n    lastLineNumberLabelLength = lineRange.to.toString().length;\n  }\n\n  var lineWithErrorCurrentIndex = lineWithErrorIndex - lineRange.from;\n\n  if (isBuffer(input)) {\n    lastLineNumberLabelLength = (\n      (lineRange.to > 0 ? lineRange.to - 1 : lineRange.to) * 8\n    ).toString(16).length;\n\n    if (lastLineNumberLabelLength < 2) {\n      lastLineNumberLabelLength = 2;\n    }\n  }\n\n  var linesWithLineNumbers = reduce(\n    function(acc, lineSource, index) {\n      var isLineWithError = index === lineWithErrorCurrentIndex;\n      var prefix = isLineWithError ? '> ' : defaultLinePrefix;\n      var lineNumberLabel;\n\n      if (isBuffer(input)) {\n        lineNumberLabel = leftPad(\n          ((lineRange.from + index) * 8).toString(16),\n          lastLineNumberLabelLength,\n          '0'\n        );\n      } else {\n        lineNumberLabel = leftPad(\n          (lineRange.from + index + 1).toString(),\n          lastLineNumberLabelLength,\n          ' '\n        );\n      }\n\n      return [].concat(\n        acc,\n        [prefix + lineNumberLabel + ' | ' + lineSource],\n        isLineWithError\n          ? [\n              defaultLinePrefix +\n                repeat(' ', lastLineNumberLabelLength) +\n                ' | ' +\n                leftPad('', column, ' ') +\n                repeat('^', verticalMarkerLength)\n            ]\n          : []\n      );\n    },\n    [],\n    lines\n  );\n\n  return linesWithLineNumbers.join('\\n');\n}\n\nfunction formatError(input, error) {\n  return [\n    '\\n',\n    '-- PARSING FAILED ' + repeat('-', 50),\n    '\\n\\n',\n    formatGot(input, error),\n    '\\n\\n',\n    formatExpected(error.expected),\n    '\\n'\n  ].join('');\n}\n\nfunction flags(re) {\n  var s = '' + re;\n  return s.slice(s.lastIndexOf('/') + 1);\n}\n\nfunction anchoredRegexp(re) {\n  return RegExp('^(?:' + re.source + ')', flags(re));\n}\n\n// -*- Combinators -*-\n\nfunction seq() {\n  var parsers = [].slice.call(arguments);\n  var numParsers = parsers.length;\n  for (var j = 0; j < numParsers; j += 1) {\n    assertParser(parsers[j]);\n  }\n  return Parsimmon(function(input, i) {\n    var result;\n    var accum = new Array(numParsers);\n    for (var j = 0; j < numParsers; j += 1) {\n      result = mergeReplies(parsers[j]._(input, i), result);\n      if (!result.status) {\n        return result;\n      }\n      accum[j] = result.value;\n      i = result.index;\n    }\n    return mergeReplies(makeSuccess(i, accum), result);\n  });\n}\n\nfunction seqObj() {\n  var seenKeys = {};\n  var totalKeys = 0;\n  var parsers = toArray(arguments);\n  var numParsers = parsers.length;\n  for (var j = 0; j < numParsers; j += 1) {\n    var p = parsers[j];\n    if (isParser(p)) {\n      continue;\n    }\n    if (isArray(p)) {\n      var isWellFormed =\n        p.length === 2 && typeof p[0] === 'string' && isParser(p[1]);\n      if (isWellFormed) {\n        var key = p[0];\n        if (Object.prototype.hasOwnProperty.call(seenKeys, key)) {\n          throw new Error('seqObj: duplicate key ' + key);\n        }\n        seenKeys[key] = true;\n        totalKeys++;\n        continue;\n      }\n    }\n    throw new Error(\n      'seqObj arguments must be parsers or [string, parser] array pairs.'\n    );\n  }\n  if (totalKeys === 0) {\n    throw new Error('seqObj expects at least one named parser, found zero');\n  }\n  return Parsimmon(function(input, i) {\n    var result;\n    var accum = {};\n    for (var j = 0; j < numParsers; j += 1) {\n      var name;\n      var parser;\n      if (isArray(parsers[j])) {\n        name = parsers[j][0];\n        parser = parsers[j][1];\n      } else {\n        name = null;\n        parser = parsers[j];\n      }\n      result = mergeReplies(parser._(input, i), result);\n      if (!result.status) {\n        return result;\n      }\n      if (name) {\n        accum[name] = result.value;\n      }\n      i = result.index;\n    }\n    return mergeReplies(makeSuccess(i, accum), result);\n  });\n}\n\nfunction seqMap() {\n  var args = [].slice.call(arguments);\n  if (args.length === 0) {\n    throw new Error('seqMap needs at least one argument');\n  }\n  var mapper = args.pop();\n  assertFunction(mapper);\n  return seq.apply(null, args).map(function(results) {\n    return mapper.apply(null, results);\n  });\n}\n\n// TODO[ES5]: Revisit this with Object.keys and .bind.\nfunction createLanguage(parsers) {\n  var language = {};\n  for (var key in parsers) {\n    if ({}.hasOwnProperty.call(parsers, key)) {\n      (function(key) {\n        var func = function() {\n          return parsers[key](language);\n        };\n        language[key] = lazy(func);\n      })(key);\n    }\n  }\n  return language;\n}\n\nfunction alt() {\n  var parsers = [].slice.call(arguments);\n  var numParsers = parsers.length;\n  if (numParsers === 0) {\n    return fail('zero alternates');\n  }\n  for (var j = 0; j < numParsers; j += 1) {\n    assertParser(parsers[j]);\n  }\n  return Parsimmon(function(input, i) {\n    var result;\n    for (var j = 0; j < parsers.length; j += 1) {\n      result = mergeReplies(parsers[j]._(input, i), result);\n      if (result.status) {\n        return result;\n      }\n    }\n    return result;\n  });\n}\n\nfunction sepBy(parser, separator) {\n  // Argument asserted by sepBy1\n  return sepBy1(parser, separator).or(succeed([]));\n}\n\nfunction sepBy1(parser, separator) {\n  assertParser(parser);\n  assertParser(separator);\n  var pairs = separator.then(parser).many();\n  return seqMap(parser, pairs, function(r, rs) {\n    return [r].concat(rs);\n  });\n}\n\n// -*- Core Parsing Methods -*-\n\n_.parse = function(input) {\n  if (typeof input !== 'string' && !isBuffer(input)) {\n    throw new Error(\n      '.parse must be called with a string or Buffer as its argument'\n    );\n  }\n  var result = this.skip(eof)._(input, 0);\n  if (result.status) {\n    return {\n      status: true,\n      value: result.value\n    };\n  }\n  return {\n    status: false,\n    index: makeLineColumnIndex(input, result.furthest),\n    expected: result.expected\n  };\n};\n\n// -*- Other Methods -*-\n\n_.tryParse = function(str) {\n  var result = this.parse(str);\n  if (result.status) {\n    return result.value;\n  } else {\n    var msg = formatError(str, result);\n    var err = new Error(msg);\n    err.type = 'ParsimmonError';\n    err.result = result;\n    throw err;\n  }\n};\n\n_.or = function(alternative) {\n  return alt(this, alternative);\n};\n\n_.trim = function(parser) {\n  return this.wrap(parser, parser);\n};\n\n_.wrap = function(leftParser, rightParser) {\n  return seqMap(leftParser, this, rightParser, function(left, middle) {\n    return middle;\n  });\n};\n\n_.thru = function(wrapper) {\n  return wrapper(this);\n};\n\n_.then = function(next) {\n  assertParser(next);\n  return seq(this, next).map(function(results) {\n    return results[1];\n  });\n};\n\n_.many = function() {\n  var self = this;\n\n  return Parsimmon(function(input, i) {\n    var accum = [];\n    var result = undefined;\n\n    for (;;) {\n      result = mergeReplies(self._(input, i), result);\n      if (result.status) {\n        if (i === result.index) {\n          throw new Error(\n            'infinite loop detected in .many() parser --- calling .many() on ' +\n              'a parser which can accept zero characters is usually the cause'\n          );\n        }\n        i = result.index;\n        accum.push(result.value);\n      } else {\n        return mergeReplies(makeSuccess(i, accum), result);\n      }\n    }\n  });\n};\n\n_.tieWith = function(separator) {\n  assertString(separator);\n  return this.map(function(args) {\n    assertArray(args);\n    if (args.length) {\n      assertString(args[0]);\n      var s = args[0];\n      for (var i = 1; i < args.length; i++) {\n        assertString(args[i]);\n        s += separator + args[i];\n      }\n      return s;\n    } else {\n      return '';\n    }\n  });\n};\n\n_.tie = function() {\n  return this.tieWith('');\n};\n\n_.times = function(min, max) {\n  var self = this;\n  if (arguments.length < 2) {\n    max = min;\n  }\n  assertNumber(min);\n  assertNumber(max);\n  return Parsimmon(function(input, i) {\n    var accum = [];\n    var result = undefined;\n    var prevResult = undefined;\n    for (var times = 0; times < min; times += 1) {\n      result = self._(input, i);\n      prevResult = mergeReplies(result, prevResult);\n      if (result.status) {\n        i = result.index;\n        accum.push(result.value);\n      } else {\n        return prevResult;\n      }\n    }\n    for (; times < max; times += 1) {\n      result = self._(input, i);\n      prevResult = mergeReplies(result, prevResult);\n      if (result.status) {\n        i = result.index;\n        accum.push(result.value);\n      } else {\n        break;\n      }\n    }\n    return mergeReplies(makeSuccess(i, accum), prevResult);\n  });\n};\n\n_.result = function(res) {\n  return this.map(function() {\n    return res;\n  });\n};\n\n_.atMost = function(n) {\n  return this.times(0, n);\n};\n\n_.atLeast = function(n) {\n  return seqMap(this.times(n), this.many(), function(init, rest) {\n    return init.concat(rest);\n  });\n};\n\n_.map = function(fn) {\n  assertFunction(fn);\n  var self = this;\n  return Parsimmon(function(input, i) {\n    var result = self._(input, i);\n    if (!result.status) {\n      return result;\n    }\n    return mergeReplies(makeSuccess(result.index, fn(result.value)), result);\n  });\n};\n\n_.contramap = function(fn) {\n  assertFunction(fn);\n  var self = this;\n  return Parsimmon(function(input, i) {\n    var result = self.parse(fn(input.slice(i)));\n    if (!result.status) {\n      return result;\n    }\n    return makeSuccess(i + input.length, result.value);\n  });\n};\n\n_.promap = function(f, g) {\n  assertFunction(f);\n  assertFunction(g);\n  return this.contramap(f).map(g);\n};\n\n_.skip = function(next) {\n  return seq(this, next).map(function(results) {\n    return results[0];\n  });\n};\n\n_.mark = function() {\n  return seqMap(index, this, index, function(start, value, end) {\n    return {\n      start: start,\n      value: value,\n      end: end\n    };\n  });\n};\n\n_.node = function(name) {\n  return seqMap(index, this, index, function(start, value, end) {\n    return {\n      name: name,\n      value: value,\n      start: start,\n      end: end\n    };\n  });\n};\n\n_.sepBy = function(separator) {\n  return sepBy(this, separator);\n};\n\n_.sepBy1 = function(separator) {\n  return sepBy1(this, separator);\n};\n\n_.lookahead = function(x) {\n  return this.skip(lookahead(x));\n};\n\n_.notFollowedBy = function(x) {\n  return this.skip(notFollowedBy(x));\n};\n\n_.desc = function(expected) {\n  if (!isArray(expected)) {\n    expected = [expected];\n  }\n  var self = this;\n  return Parsimmon(function(input, i) {\n    var reply = self._(input, i);\n    if (!reply.status) {\n      reply.expected = expected;\n    }\n    return reply;\n  });\n};\n\n_.fallback = function(result) {\n  return this.or(succeed(result));\n};\n\n_.ap = function(other) {\n  return seqMap(other, this, function(f, x) {\n    return f(x);\n  });\n};\n\n_.chain = function(f) {\n  var self = this;\n  return Parsimmon(function(input, i) {\n    var result = self._(input, i);\n    if (!result.status) {\n      return result;\n    }\n    var nextParser = f(result.value);\n    return mergeReplies(nextParser._(input, result.index), result);\n  });\n};\n\n// -*- Constructors -*-\n\nfunction string(str) {\n  assertString(str);\n  var expected = \"'\" + str + \"'\";\n  return Parsimmon(function(input, i) {\n    var j = i + str.length;\n    var head = input.slice(i, j);\n    if (head === str) {\n      return makeSuccess(j, head);\n    } else {\n      return makeFailure(i, expected);\n    }\n  });\n}\n\nfunction byte(b) {\n  ensureBuffer();\n  assertNumber(b);\n  if (b > 0xff) {\n    throw new Error(\n      'Value specified to byte constructor (' +\n        b +\n        '=0x' +\n        b.toString(16) +\n        ') is larger in value than a single byte.'\n    );\n  }\n  var expected = (b > 0xf ? '0x' : '0x0') + b.toString(16);\n  return Parsimmon(function(input, i) {\n    var head = get(input, i);\n    if (head === b) {\n      return makeSuccess(i + 1, head);\n    } else {\n      return makeFailure(i, expected);\n    }\n  });\n}\n\nfunction regexp(re, group) {\n  assertRegexp(re);\n  if (arguments.length >= 2) {\n    assertNumber(group);\n  } else {\n    group = 0;\n  }\n  var anchored = anchoredRegexp(re);\n  var expected = '' + re;\n  return Parsimmon(function(input, i) {\n    var match = anchored.exec(input.slice(i));\n    if (match) {\n      if (0 <= group && group <= match.length) {\n        var fullMatch = match[0];\n        var groupMatch = match[group];\n        return makeSuccess(i + fullMatch.length, groupMatch);\n      }\n      var message =\n        'valid match group (0 to ' + match.length + ') in ' + expected;\n      return makeFailure(i, message);\n    }\n    return makeFailure(i, expected);\n  });\n}\n\nfunction succeed(value) {\n  return Parsimmon(function(input, i) {\n    return makeSuccess(i, value);\n  });\n}\n\nfunction fail(expected) {\n  return Parsimmon(function(input, i) {\n    return makeFailure(i, expected);\n  });\n}\n\nfunction lookahead(x) {\n  if (isParser(x)) {\n    return Parsimmon(function(input, i) {\n      var result = x._(input, i);\n      result.index = i;\n      result.value = '';\n      return result;\n    });\n  } else if (typeof x === 'string') {\n    return lookahead(string(x));\n  } else if (x instanceof RegExp) {\n    return lookahead(regexp(x));\n  }\n  throw new Error('not a string, regexp, or parser: ' + x);\n}\n\nfunction notFollowedBy(parser) {\n  assertParser(parser);\n  return Parsimmon(function(input, i) {\n    var result = parser._(input, i);\n    var text = input.slice(i, result.index);\n    return result.status\n      ? makeFailure(i, 'not \"' + text + '\"')\n      : makeSuccess(i, null);\n  });\n}\n\nfunction test(predicate) {\n  assertFunction(predicate);\n  return Parsimmon(function(input, i) {\n    var char = get(input, i);\n    if (i < input.length && predicate(char)) {\n      return makeSuccess(i + 1, char);\n    } else {\n      return makeFailure(i, 'a character/byte matching ' + predicate);\n    }\n  });\n}\n\nfunction oneOf(str) {\n  var expected = str.split('');\n  for (var idx = 0; idx < expected.length; idx++) {\n    expected[idx] = \"'\" + expected[idx] + \"'\";\n  }\n  return test(function(ch) {\n    return str.indexOf(ch) >= 0;\n  }).desc(expected);\n}\n\nfunction noneOf(str) {\n  return test(function(ch) {\n    return str.indexOf(ch) < 0;\n  }).desc(\"none of '\" + str + \"'\");\n}\n\nfunction custom(parsingFunction) {\n  return Parsimmon(parsingFunction(makeSuccess, makeFailure));\n}\n\n// TODO[ES5]: Improve error message using JSON.stringify eventually.\nfunction range(begin, end) {\n  return test(function(ch) {\n    return begin <= ch && ch <= end;\n  }).desc(begin + '-' + end);\n}\n\nfunction takeWhile(predicate) {\n  assertFunction(predicate);\n\n  return Parsimmon(function(input, i) {\n    var j = i;\n    while (j < input.length && predicate(get(input, j))) {\n      j++;\n    }\n    return makeSuccess(j, input.slice(i, j));\n  });\n}\n\nfunction lazy(desc, f) {\n  if (arguments.length < 2) {\n    f = desc;\n    desc = undefined;\n  }\n\n  var parser = Parsimmon(function(input, i) {\n    parser._ = f()._;\n    return parser._(input, i);\n  });\n\n  if (desc) {\n    return parser.desc(desc);\n  } else {\n    return parser;\n  }\n}\n\n// -*- Fantasy Land Extras -*-\n\nfunction empty() {\n  return fail('fantasy-land/empty');\n}\n\n_.concat = _.or;\n_.empty = empty;\n_.of = succeed;\n_['fantasy-land/ap'] = _.ap;\n_['fantasy-land/chain'] = _.chain;\n_['fantasy-land/concat'] = _.concat;\n_['fantasy-land/empty'] = _.empty;\n_['fantasy-land/of'] = _.of;\n_['fantasy-land/map'] = _.map;\n\n// -*- Base Parsers -*-\n\nvar index = Parsimmon(function(input, i) {\n  return makeSuccess(i, makeLineColumnIndex(input, i));\n});\n\nvar any = Parsimmon(function(input, i) {\n  if (i >= input.length) {\n    return makeFailure(i, 'any character/byte');\n  }\n  return makeSuccess(i + 1, get(input, i));\n});\n\nvar all = Parsimmon(function(input, i) {\n  return makeSuccess(input.length, input.slice(i));\n});\n\nvar eof = Parsimmon(function(input, i) {\n  if (i < input.length) {\n    return makeFailure(i, 'EOF');\n  }\n  return makeSuccess(i, null);\n});\n\nvar digit = regexp(/[0-9]/).desc('a digit');\nvar digits = regexp(/[0-9]*/).desc('optional digits');\nvar letter = regexp(/[a-z]/i).desc('a letter');\nvar letters = regexp(/[a-z]*/i).desc('optional letters');\nvar optWhitespace = regexp(/\\s*/).desc('optional whitespace');\nvar whitespace = regexp(/\\s+/).desc('whitespace');\nvar cr = string('\\r');\nvar lf = string('\\n');\nvar crlf = string('\\r\\n');\nvar newline = alt(crlf, lf, cr).desc('newline');\nvar end = alt(newline, eof);\n\nParsimmon.all = all;\nParsimmon.alt = alt;\nParsimmon.any = any;\nParsimmon.cr = cr;\nParsimmon.createLanguage = createLanguage;\nParsimmon.crlf = crlf;\nParsimmon.custom = custom;\nParsimmon.digit = digit;\nParsimmon.digits = digits;\nParsimmon.empty = empty;\nParsimmon.end = end;\nParsimmon.eof = eof;\nParsimmon.fail = fail;\nParsimmon.formatError = formatError;\nParsimmon.index = index;\nParsimmon.isParser = isParser;\nParsimmon.lazy = lazy;\nParsimmon.letter = letter;\nParsimmon.letters = letters;\nParsimmon.lf = lf;\nParsimmon.lookahead = lookahead;\nParsimmon.makeFailure = makeFailure;\nParsimmon.makeSuccess = makeSuccess;\nParsimmon.newline = newline;\nParsimmon.noneOf = noneOf;\nParsimmon.notFollowedBy = notFollowedBy;\nParsimmon.of = succeed;\nParsimmon.oneOf = oneOf;\nParsimmon.optWhitespace = optWhitespace;\nParsimmon.Parser = Parsimmon;\nParsimmon.range = range;\nParsimmon.regex = regexp;\nParsimmon.regexp = regexp;\nParsimmon.sepBy = sepBy;\nParsimmon.sepBy1 = sepBy1;\nParsimmon.seq = seq;\nParsimmon.seqMap = seqMap;\nParsimmon.seqObj = seqObj;\nParsimmon.string = string;\nParsimmon.succeed = succeed;\nParsimmon.takeWhile = takeWhile;\nParsimmon.test = test;\nParsimmon.whitespace = whitespace;\nParsimmon['fantasy-land/empty'] = empty;\nParsimmon['fantasy-land/of'] = succeed;\n\nParsimmon.Binary = {\n  bitSeq: bitSeq,\n  bitSeqObj: bitSeqObj,\n  byte: byte,\n  buffer: parseBuffer,\n  encodedString: encodedString,\n  uintBE: uintBE,\n  uint8BE: uintBE(1),\n  uint16BE: uintBE(2),\n  uint32BE: uintBE(4),\n  uintLE: uintLE,\n  uint8LE: uintLE(1),\n  uint16LE: uintLE(2),\n  uint32LE: uintLE(4),\n  intBE: intBE,\n  int8BE: intBE(1),\n  int16BE: intBE(2),\n  int32BE: intBE(4),\n  intLE: intLE,\n  int8LE: intLE(1),\n  int16LE: intLE(2),\n  int32LE: intLE(4),\n  floatBE: floatBE(),\n  floatLE: floatLE(),\n  doubleBE: doubleBE(),\n  doubleLE: doubleLE()\n};\n\nmodule.exports = Parsimmon;\n","import { flattenBinArray } from '../../../utils/utils';\nimport { authenticationInstructionsAreNotMalformed, disassembleBytecode, encodeDataPush, parseBytecode } from '../../auth';\nimport { OpcodesCommon } from '../../instruction-sets/common/opcodes';\nconst pluckStartPosition = (range) => ({\n    startColumn: range.startColumn,\n    startLineNumber: range.startLineNumber\n});\nconst pluckEndPosition = (range) => ({\n    endColumn: range.endColumn,\n    endLineNumber: range.endLineNumber\n});\nconst mergeRanges = (ranges) => {\n    const unsortedMerged = ranges.reduce(\n    // tslint:disable-next-line: cyclomatic-complexity\n    (merged, range) => ({\n        ...(range.startLineNumber < merged.startLineNumber\n            ? pluckStartPosition(range)\n            : range.startLineNumber === merged.startLineNumber &&\n                range.startColumn < merged.startColumn\n                ? pluckStartPosition(range)\n                : pluckStartPosition(merged)),\n        ...(range.endLineNumber > merged.endLineNumber\n            ? pluckEndPosition(range)\n            : range.endLineNumber === merged.endLineNumber &&\n                range.endColumn > merged.endColumn\n                ? pluckEndPosition(range)\n                : pluckEndPosition(merged))\n    }), ranges[0]);\n    return {\n        ...pluckStartPosition(unsortedMerged),\n        ...pluckEndPosition(unsortedMerged)\n    };\n};\nconst emptyReductionTraceNode = (range) => ({\n    bytecode: Uint8Array.of(),\n    range\n});\n/**\n * Aggregate instructions to build groups of non-malformed instructions.\n *\n * --- TODO: delete old stuff below? ––-\n *\n * So users can write constructions like `OP_PUSHBYTES_2 0x0102` which will\n * evaluate successfully, but instructions which must read over a new-line to\n * make sense (e.g. `OP_PUSHBYTES_2\\n0x0102`) should error. This allows for a\n * nice omniscient-debugging experience.\n *\n * **This makes new lines important in evaluations.** However, things\n * can only \"break\" when new lines are inserted, not when they are removed (e.g.\n * if a script is \"minified\" to a single line for deployment.)\n *\n * **Implementation note**\n * This method aggregates arrays of instructions by line... a little like\n * Automatic Semicolon Insertion in ECMAScript. 👀 In fact, that's a good\n * sign that we're missing a useful language construct here. Maybe instead\n * of this algorithm, we need a new type of wrapper in the language to indicate\n * that bytecode segments are intended to go together.\n *\n * Interestingly, we already use \"Containers\" in both pushes and evaluations, so\n * this might be quite easy. E.g. wrapping with `()` or `{}`. However, we also\n * want disassembled instructions to be valid input in BitAuth Script, so some\n * form of this line-based logic will still be required unless we also change\n * script disassembly form. E.g. instead of `OP_PUSHBYTES_2 0x0102`, something\n * like `(OP_PUSHBYTES_2 0x0102)` or `<0x0102>`. This is something to consider\n * in future versions.\n */\n// tslint:disable-next-line: cyclomatic-complexity\nconst aggregatedParseReductionTraceNodes = (nodes) => {\n    const aggregations = [];\n    // tslint:disable-next-line: no-let\n    let ip = 0;\n    // tslint:disable-next-line: no-let\n    let incomplete;\n    for (const node of nodes) {\n        const bytecode = incomplete !== undefined\n            ? flattenBinArray([incomplete.bytecode, node.bytecode])\n            : node.bytecode;\n        const range = incomplete !== undefined\n            ? mergeRanges([incomplete.range, node.range])\n            : node.range;\n        // tslint:disable-next-line: no-expression-statement\n        incomplete = undefined;\n        const parsed = parseBytecode(bytecode);\n        // tslint:disable-next-line: no-if-statement\n        if (parsed.length === 0) {\n            // tslint:disable-next-line: no-expression-statement\n            aggregations.push({\n                instructions: [],\n                lastIp: ip,\n                range\n            });\n            // tslint:disable-next-line: no-if-statement\n        }\n        else if (authenticationInstructionsAreNotMalformed(parsed)) {\n            // tslint:disable-next-line: no-expression-statement\n            ip = ip + parsed.length;\n            // tslint:disable-next-line: no-expression-statement\n            aggregations.push({\n                instructions: parsed,\n                lastIp: ip,\n                range\n            });\n        }\n        else {\n            // tslint:disable-next-line: no-expression-statement\n            incomplete = { bytecode, range };\n        }\n    }\n    return {\n        aggregations,\n        success: true,\n        ...(incomplete !== undefined\n            ? {\n                remainingBytecode: incomplete.bytecode,\n                remainingRange: incomplete.range,\n                success: false\n            }\n            : undefined)\n    };\n};\n/**\n * Evaluate an array of `InstructionAggregation`s with the provided\n * `AuthenticationVirtualMachine`, matching the results back to their source\n * ranges.\n */\nexport const evaluateInstructionAggregations = (aggregations, \n// TODO: more specific signature?\n// tslint:disable-next-line: no-any\nvm, getState) => {\n    const nonEmptyAggregations = aggregations.filter(aggregation => aggregation.instructions.length > 0);\n    const evaluationPlan = nonEmptyAggregations.reduce((plan, aggregation) => {\n        const instructions = [...plan.instructions, ...aggregation.instructions];\n        return {\n            breakpoints: [\n                ...plan.breakpoints,\n                { ip: aggregation.lastIp, range: aggregation.range }\n            ],\n            instructions\n        };\n    }, { instructions: [], breakpoints: [] });\n    const trace = vm.stateDebug(getState(evaluationPlan.instructions));\n    const samples = evaluationPlan.breakpoints.map(breakpoint => ({\n        range: breakpoint.range,\n        state: trace[breakpoint.ip - 1]\n    }));\n    const firstInvalidSample = samples.findIndex(sample => sample.state === undefined);\n    const errorSample = samples[firstInvalidSample - 1];\n    return errorSample === undefined\n        ? {\n            samples: samples,\n            success: true\n        }\n        : {\n            errors: [\n                {\n                    error: errorSample.state === undefined\n                        ? `Failed to reduce evaluation: vm.debug produced no valid program states.`\n                        : `Failed to reduce evaluation: ${errorSample.state.error}`,\n                    range: errorSample.range\n                }\n            ],\n            samples,\n            success: false\n        };\n};\n/**\n * Incrementally evaluate an array of `ScriptReductionTraceNode`s, returning a\n * trace of the evaluation and the resulting top stack item (`evaluationResult`)\n * if successful.\n *\n * @param nodes an array of reduced nodes (from a returned `source` of\n * `reduceBitAuthScript`)\n * @param vm the `AuthenticationVirtualMachine` to use in the evaluation\n * @param getState a method which should generate a new ProgramState given an\n * array of `instructions`\n */\n// tslint:disable-next-line: cyclomatic-complexity\nexport const sampledEvaluateReductionTraceNodes = (nodes, \n// TODO: more specific signature?\n// tslint:disable-next-line: no-any\nvm, getState) => {\n    const parsed = aggregatedParseReductionTraceNodes(nodes);\n    const evaluated = evaluateInstructionAggregations(parsed.aggregations, vm, getState);\n    // tslint:disable-next-line: no-if-statement\n    if (parsed.success && evaluated.success) {\n        const samples = evaluated.samples.length > 0\n            ? evaluated.samples\n            : [{ range: parsed.aggregations[0].range, state: getState([]) }];\n        const lastSample = samples[samples.length - 1];\n        const lastStackItem = lastSample.state.stack[lastSample.state.stack.length - 1];\n        const evaluationResult = lastStackItem !== undefined ? lastStackItem.slice() : Uint8Array.of();\n        return {\n            bytecode: evaluationResult,\n            samples,\n            success: true\n        };\n    }\n    return {\n        bytecode: Uint8Array.of(),\n        errors: [\n            ...(parsed.success\n                ? []\n                : [\n                    {\n                        error: `A sample is malformed and cannot be evaluated: ${disassembleBytecode(OpcodesCommon, parsed.remainingBytecode)}`,\n                        range: parsed.remainingRange\n                    }\n                ]),\n            ...(evaluated.success ? [] : evaluated.errors)\n        ],\n        samples: evaluated.samples,\n        success: false\n    };\n};\n/**\n * This method will throw an error if provided a `compiledScript` with\n * compilation errors. To check for compilation errors, use `getCompileErrors`.\n * @param compiledScript the `CompiledScript` to reduce\n * @param vm the `AuthenticationVirtualMachine` to use for evaluations\n * @param createState a method which returns the base `ProgramState` used when initializing evaluations\n */\nexport const reduceScript = (compiledScript, \n// TODO: more specific signature?\n// tslint:disable-next-line: no-any\nvm, createState) => {\n    const source = compiledScript.map(segment => {\n        // tslint:disable-next-line: switch-default\n        switch (segment.type) {\n            case 'bytecode':\n                return { bytecode: segment.value, range: segment.range };\n            case 'push':\n                // tslint:disable-next-line: no-if-statement\n                if (segment.value.length === 0) {\n                    return emptyReductionTraceNode(segment.range);\n                }\n                const push = reduceScript(segment.value, vm, createState);\n                const bytecode = encodeDataPush(push.bytecode);\n                return {\n                    bytecode,\n                    ...(push.errors ? { errors: push.errors } : undefined),\n                    range: segment.range,\n                    source: [push]\n                };\n            case 'evaluation':\n                // tslint:disable-next-line: no-if-statement\n                if (segment.value.length === 0) {\n                    return emptyReductionTraceNode(segment.range);\n                }\n                // tslint:disable-next-line: no-if-statement\n                if (typeof vm === 'undefined' || typeof createState === 'undefined') {\n                    return {\n                        errors: [\n                            {\n                                error: 'Both a VM and a createState method are required to reduce evaluations.',\n                                range: segment.range\n                            }\n                        ],\n                        ...emptyReductionTraceNode(segment.range)\n                    };\n                }\n                const reductionTrace = reduceScript(segment.value, vm, createState);\n                const evaluated = sampledEvaluateReductionTraceNodes(reductionTrace.source, vm, createState);\n                const errors = [\n                    ...(reductionTrace.errors !== undefined ? reductionTrace.errors : []),\n                    ...(!evaluated.success ? evaluated.errors : [])\n                ];\n                return {\n                    ...(errors.length > 0\n                        ? {\n                            errors,\n                            ...emptyReductionTraceNode(segment.range)\n                        }\n                        : {\n                            bytecode: evaluated.bytecode,\n                            range: segment.range\n                        }),\n                    samples: evaluated.samples,\n                    source: [reductionTrace]\n                };\n            case 'comment':\n                return emptyReductionTraceNode(segment.range);\n            case 'error':\n                return {\n                    errors: [\n                        {\n                            error: `Tried to reduce a BitAuth script with resolution errors: ${segment.value}`,\n                            range: segment.range\n                        }\n                    ],\n                    ...emptyReductionTraceNode(segment.range)\n                };\n        }\n    });\n    const reduction = source.reduce((all, segment) => ({\n        bytecode: [...all.bytecode, segment.bytecode],\n        ranges: [...all.ranges, segment.range],\n        ...(all.errors !== undefined || segment.errors !== undefined\n            ? {\n                errors: [\n                    ...(all.errors === undefined ? [] : all.errors),\n                    ...(segment.errors === undefined ? [] : segment.errors)\n                ]\n            }\n            : undefined)\n    }), { bytecode: [], ranges: [] });\n    return {\n        ...(reduction.errors ? { errors: reduction.errors } : undefined),\n        bytecode: flattenBinArray(reduction.bytecode),\n        range: mergeRanges(reduction.ranges),\n        source\n    };\n};\n//# sourceMappingURL=data:application/json;base64,","import { hexToBin, utf8ToBin } from '../../../utils/utils';\nimport { bigIntToScriptNumber } from '../../auth';\nimport { compileScript } from './compile';\nconst pluckRange = (node) => ({\n    endColumn: node.end.column,\n    endLineNumber: node.end.line,\n    startColumn: node.start.column,\n    startLineNumber: node.start.line\n});\nexport var IdentifierResolutionType;\n(function (IdentifierResolutionType) {\n    IdentifierResolutionType[\"opcode\"] = \"opcode\";\n    IdentifierResolutionType[\"variable\"] = \"variable\";\n    IdentifierResolutionType[\"script\"] = \"script\";\n    IdentifierResolutionType[\"unknown\"] = \"unknown\";\n})(IdentifierResolutionType || (IdentifierResolutionType = {}));\nvar Constants;\n(function (Constants) {\n    Constants[Constants[\"hexByte\"] = 2] = \"hexByte\";\n})(Constants || (Constants = {}));\nexport const resolveScriptSegment = (segment, resolveIdentifiers) => {\n    // tslint:disable-next-line: cyclomatic-complexity\n    const resolved = segment.value.map(child => {\n        const range = pluckRange(child);\n        switch (child.name) {\n            case 'Identifier':\n                const identifier = child.value;\n                const result = resolveIdentifiers(identifier);\n                return result.status\n                    ? {\n                        range,\n                        type: 'bytecode',\n                        value: result.bytecode,\n                        ...(result.type === IdentifierResolutionType.variable\n                            ? {\n                                variable: identifier\n                            }\n                            : undefined)\n                    }\n                    : {\n                        range,\n                        type: 'error',\n                        value: result.error\n                    };\n            case 'Push':\n                return {\n                    range,\n                    type: 'push',\n                    value: resolveScriptSegment(child.value, resolveIdentifiers)\n                };\n            case 'Evaluation':\n                return {\n                    range,\n                    type: 'evaluation',\n                    value: resolveScriptSegment(child.value, resolveIdentifiers)\n                };\n            case 'BigIntLiteral':\n                return {\n                    range,\n                    type: 'bytecode',\n                    value: bigIntToScriptNumber(child.value)\n                };\n            case 'HexLiteral':\n                return child.value.length % Constants.hexByte === 0\n                    ? {\n                        range,\n                        type: 'bytecode',\n                        value: hexToBin(child.value)\n                    }\n                    : {\n                        range,\n                        type: 'error',\n                        value: `Improperly formed HexLiteral. HexLiteral must have a length divisible by 2, but this HexLiteral has a length of ${child.value.length}.`\n                    };\n            case 'UTF8Literal':\n                return {\n                    range,\n                    type: 'bytecode',\n                    value: utf8ToBin(child.value)\n                };\n            case 'Comment':\n                return {\n                    range,\n                    type: 'comment',\n                    value: child.value\n                };\n            default:\n                return {\n                    range,\n                    type: 'error',\n                    value: `Unrecognized segment: ${child}`\n                };\n        }\n    });\n    return resolved.length === 0\n        ? [{ range: pluckRange(segment), type: 'comment', value: '' }]\n        : resolved;\n};\n(function (Constants) {\n    Constants[Constants[\"msPerLocktimeSecond\"] = 1000] = \"msPerLocktimeSecond\";\n})(Constants || (Constants = {}));\n/**\n * Convert a Javascript `Date` object to its equivalent LockTime\n * representation in an `AuthenticationVirtualMachine`.\n *\n * TODO: this method should error past the overflow Date and for dates which\n * would become BlockHeights when encoded. Validate correctness after\n * `OP_CHECKLOCKTIMEVERIFY` is implemented.\n *\n * @param date the Date to convert to a BlockTime Uint8Array\n */\nexport const dateToLockTime = (date) => bigIntToScriptNumber(BigInt(Math.round(date.getTime() / Constants.msPerLocktimeSecond)));\nconst articleAndVariableType = (variableType) => `${variableType === 'HDKey' ? 'an' : 'a'} ${variableType}`;\nconst attemptCompilerOperation = (identifier, operationId, variableType, environment, data) => {\n    // tslint:disable-next-line: no-if-statement\n    if (environment.operations !== undefined &&\n        environment.operations[variableType] !== undefined) {\n        const operationsForType = environment.operations[variableType];\n        if (operationsForType !== undefined) {\n            const operation = operationsForType[operationId];\n            // tslint:disable-next-line: no-if-statement\n            if (operation !== undefined) {\n                return operation(identifier, data, environment);\n            }\n        }\n    }\n    return `Identifer \"${identifier}\" refers to ${articleAndVariableType(variableType)} operation \"${operationId}\" which is not available to this compiler.`;\n};\nconst variableTypeToDataProperty = {\n    AddressData: 'addressData',\n    CurrentBlockHeight: 'currentBlockHeight',\n    CurrentBlockTime: 'currentBlockTime',\n    HDKey: 'hdKeys',\n    Key: 'keys',\n    WalletData: 'walletData'\n};\nconst defaultActionByVariableType = {\n    AddressData: (identifier, data, variableId) => data.addressData !== undefined &&\n        data.addressData[variableId] !== undefined\n        ? data.addressData[variableId]\n        : `Identifier \"${identifier}\" refers to a AddressData, but no AddressData for \"${variableId}\" were provided in the compilation data.`,\n    CurrentBlockHeight: (_, data) => bigIntToScriptNumber(BigInt(data.currentBlockHeight)),\n    CurrentBlockTime: (_, data) => dateToLockTime(data.currentBlockTime),\n    HDKey: identifier => `Identifier \"${identifier}\" refers to an HDKey, but does not specify an operation, e.g. \"${identifier}.public_key\".`,\n    Key: identifier => `Identifier \"${identifier}\" refers to a Key, but does not specify an operation, e.g. \"${identifier}.public_key\".`,\n    WalletData: (identifier, data, variableId) => data.walletData !== undefined &&\n        data.walletData[variableId] !== undefined\n        ? data.walletData[variableId]\n        : `Identifier \"${identifier}\" refers to a WalletData, but no WalletData for \"${variableId}\" were provided in the compilation data.`\n};\n/**\n * If the identifer can be successfully resolved as a variable, the result is\n * returned as a Uint8Array. If the identifier references a known variable, but\n * an error occurs in resolving it, the error is returned as a string.\n * Otherwise, the identifier is not recognized as a variable, and this method\n * simply returns `false`.\n */\nexport const resolveAuthenticationTemplateVariable = (identifier, environment, data) => {\n    const splitId = identifier.split('.');\n    const isOperation = splitId.length > 1;\n    const variableId = splitId[0];\n    const operationId = splitId[1];\n    // tslint:disable-next-line: no-if-statement\n    if (environment.variables === undefined) {\n        return false;\n    }\n    const selected = environment.variables[variableId];\n    // tslint:disable-next-line: no-if-statement\n    if (selected === undefined) {\n        return false;\n    }\n    return data[variableTypeToDataProperty[selected.type]] === undefined\n        ? `Identifier \"${identifier}\" is a ${selected.type}, but the compilation data does not include a \"${variableTypeToDataProperty[selected.type]}\" property.`\n        : isOperation\n            ? attemptCompilerOperation(identifier, operationId, selected.type, environment, data)\n            : defaultActionByVariableType[selected.type](identifier, data, variableId);\n};\n/**\n * Compile an internal script identifier.\n *\n * @remarks\n * If the identifer can be successfully resolved as a script, the script is\n * compiled and returned as a `Uint8Array`. If an error occurs in compiling it,\n * the error is returned as a string.\n *\n * Otherwise, the identifier is not recognized as a script, and this method\n * simply returns `false`.\n *\n * @param identifier the identifier of the script to be resolved\n * @param data the provided CompilationData\n * @param environment the provided CompilationEnvironment\n * @param parentIdentifier the identifier of the script which references the\n * script being resolved (for detecting circular dependencies)\n */\n// tslint:disable-next-line: cyclomatic-complexity\nexport const resolveScriptIdentifier = (identifier, data, environment, parentIdentifier) => {\n    // tslint:disable-next-line: no-if-statement\n    if (environment.scripts[identifier] === undefined) {\n        return false;\n    }\n    // tslint:disable-next-line: no-if-statement\n    if (parentIdentifier !== undefined &&\n        environment.sourceScriptIds !== undefined &&\n        environment.sourceScriptIds.indexOf(parentIdentifier) !== -1) {\n        return `A circular dependency was encountered. Script \"${identifier}\" relies on itself to be generated. (Parent scripts: ${environment.sourceScriptIds.join(', ')})`;\n    }\n    const result = compileScript(identifier, data, {\n        ...environment,\n        sourceScriptIds: [\n            ...(environment.sourceScriptIds !== undefined\n                ? environment.sourceScriptIds\n                : []),\n            ...(parentIdentifier !== undefined ? [parentIdentifier] : [])\n        ]\n    });\n    return result.success\n        ? result.bytecode\n        : `Compilation error in resolved script, ${identifier}: ${result.errors.join(', ')}`;\n};\n/**\n * Return an `IdentifierResolutionFunction` for use in `resolveScriptSegment`.\n *\n * @param scriptId the `id` of the script for which the resulting\n * `IdentifierResolutionFunction` will be used.\n * @param environment a snapshot of the context around `scriptId`. See\n * `CompilationEnvironment` for details.\n * @param data the actual variable values (private keys, shared wallet data,\n * shared transaction data, etc.) to use in resolving variables.\n */\nexport const createIdentifierResolver = (scriptId, data, environment) => \n// tslint:disable-next-line: cyclomatic-complexity\n(identifier) => {\n    const opcodeResult = environment.opcodes &&\n        environment.opcodes[identifier];\n    // tslint:disable-next-line: no-if-statement\n    if (opcodeResult !== undefined) {\n        return {\n            bytecode: opcodeResult,\n            status: true,\n            type: IdentifierResolutionType.opcode\n        };\n    }\n    const variableResult = resolveAuthenticationTemplateVariable(identifier, environment, data);\n    // tslint:disable-next-line: no-if-statement\n    if (variableResult !== false) {\n        return typeof variableResult === 'string'\n            ? { status: false, error: variableResult }\n            : {\n                bytecode: variableResult,\n                status: true,\n                type: IdentifierResolutionType.variable\n            };\n    }\n    const scriptResult = resolveScriptIdentifier(identifier, data, environment, scriptId);\n    // tslint:disable-next-line: no-if-statement\n    if (scriptResult !== false) {\n        return typeof scriptResult === 'string'\n            ? { status: false, error: scriptResult }\n            : {\n                bytecode: scriptResult,\n                status: true,\n                type: IdentifierResolutionType.script\n            };\n    }\n    return { status: false, error: `Unknown identifier '${identifier}'.` };\n};\n//# sourceMappingURL=data:application/json;base64,","export * from './language/language';\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGVtcGxhdGVzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vc3JjL2xpYi9hdXRoL3RlbXBsYXRlcy90ZW1wbGF0ZXMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsY0FBYyxxQkFBcUIsQ0FBQyJ9","import { range } from '../utils/utils';\n/**\n * Create an AuthenticationVirtualMachine to evaluate authentication programs\n * constructed from operations in the `instructionSet`.\n * @param instructionSet an `InstructionSet`\n */\nexport const createAuthenticationVirtualMachine = (instructionSet) => {\n    const availableOpcodes = 256;\n    const operators = range(availableOpcodes).map(codepoint => \n    // tslint:disable-next-line: strict-type-predicates\n    instructionSet.operations[codepoint] === undefined\n        ? instructionSet.undefined\n        : instructionSet.operations[codepoint]);\n    const getCodepoint = (state) => state.instructions[state.ip];\n    const after = (state) => {\n        // tslint:disable-next-line:no-object-mutation no-expression-statement\n        state.ip += 1;\n        return state;\n    };\n    const getOperation = (state) => operators[getCodepoint(state).opcode];\n    const stateStepMutate = (state) => after(getOperation(state)(state));\n    const stateContinue = instructionSet.continue;\n    /**\n     * When we get real tail call optimization, this can be replaced\n     * with recursion.\n     */\n    const untilComplete = (state, stepFunction) => {\n        while (stateContinue(state)) {\n            // tslint:disable-next-line:no-parameter-reassignment no-expression-statement\n            state = stepFunction(state);\n        }\n        return state;\n    };\n    const clone = (state) => instructionSet.clone(state);\n    const verify = instructionSet.verify;\n    const stateEvaluate = (state) => untilComplete(clone(state), stateStepMutate);\n    const stateDebugStep = (state) => {\n        const operator = getOperation(state);\n        return after(operator(clone(state)));\n    };\n    const stateDebug = (state) => {\n        // tslint:disable-next-line:prefer-const no-let\n        let trace = [];\n        untilComplete(state, (currentState) => {\n            const nextState = stateDebugStep(currentState);\n            // tslint:disable-next-line:no-expression-statement\n            trace.push(nextState);\n            return nextState;\n        });\n        return trace;\n    };\n    const stateStep = (state) => stateStepMutate(clone(state));\n    const evaluate = (program) => instructionSet.evaluate(program, stateEvaluate);\n    const debug = (program) => {\n        const results = [];\n        const proxyDebug = (state) => {\n            const debugResult = stateDebug(state);\n            // tslint:disable-next-line: no-expression-statement\n            results.push(...debugResult);\n            return debugResult[debugResult.length - 1];\n        };\n        const finalResult = instructionSet.evaluate(program, proxyDebug);\n        return [...results, finalResult];\n    };\n    return {\n        debug,\n        evaluate,\n        stateContinue,\n        stateDebug,\n        stateEvaluate,\n        stateStep,\n        stateStepMutate,\n        verify\n    };\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidmlydHVhbC1tYWNoaW5lLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL2xpYi9hdXRoL3ZpcnR1YWwtbWFjaGluZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsS0FBSyxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFxTHZDOzs7O0dBSUc7QUFDSCxNQUFNLENBQUMsTUFBTSxrQ0FBa0MsR0FBRyxDQUloRCxjQUFtRSxFQUNBLEVBQUU7SUFDckUsTUFBTSxnQkFBZ0IsR0FBRyxHQUFHLENBQUM7SUFDN0IsTUFBTSxTQUFTLEdBQUcsS0FBSyxDQUFDLGdCQUFnQixDQUFDLENBQUMsR0FBRyxDQUFDLFNBQVMsQ0FBQyxFQUFFO0lBQ3hELG1EQUFtRDtJQUNuRCxjQUFjLENBQUMsVUFBVSxDQUFDLFNBQVMsQ0FBQyxLQUFLLFNBQVM7UUFDaEQsQ0FBQyxDQUFDLGNBQWMsQ0FBQyxTQUFTO1FBQzFCLENBQUMsQ0FBQyxjQUFjLENBQUMsVUFBVSxDQUFDLFNBQVMsQ0FBQyxDQUN6QyxDQUFDO0lBRUYsTUFBTSxZQUFZLEdBQUcsQ0FBQyxLQUFtQixFQUFFLEVBQUUsQ0FBQyxLQUFLLENBQUMsWUFBWSxDQUFDLEtBQUssQ0FBQyxFQUFFLENBQUMsQ0FBQztJQUUzRSxNQUFNLEtBQUssR0FBRyxDQUFDLEtBQW1CLEVBQUUsRUFBRTtRQUNwQyxzRUFBc0U7UUFDdEUsS0FBSyxDQUFDLEVBQUUsSUFBSSxDQUFDLENBQUM7UUFDZCxPQUFPLEtBQUssQ0FBQztJQUNmLENBQUMsQ0FBQztJQUVGLE1BQU0sWUFBWSxHQUFHLENBQUMsS0FBbUIsRUFBRSxFQUFFLENBQzNDLFNBQVMsQ0FBQyxZQUFZLENBQUMsS0FBSyxDQUFDLENBQUMsTUFBTSxDQUFDLENBQUM7SUFFeEMsTUFBTSxlQUFlLEdBQUcsQ0FBQyxLQUFtQixFQUFFLEVBQUUsQ0FDOUMsS0FBSyxDQUFDLFlBQVksQ0FBQyxLQUFLLENBQUMsQ0FBQyxL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","export * from './hashes';\nexport * from './ripemd160/ripemd160.base64';\nexport * from './secp256k1/secp256k1-wasm';\nexport * from './sha1/sha1.base64';\nexport * from './sha256/sha256.base64';\nexport * from './sha512/sha512.base64';\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmluLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL2xpYi9iaW4vYmluLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLGNBQWMsVUFBVSxDQUFDO0FBQ3pCLGNBQWMsOEJBQThCLENBQUM7QUFDN0MsY0FBYyw0QkFBNEIsQ0FBQztBQUMzQyxjQUFjLG9CQUFvQixDQUFDO0FBQ25DLGNBQWMsd0JBQXdCLENBQUM7QUFDdkMsY0FBYyx3QkFBd0IsQ0FBQyJ9","/**\n * Note, most of this method is translated and boiled-down from the wasm-pack\n * workflow. Significant changes to wasm-bindgen or wasm-pack build will likely\n * require modifications to this method.\n */\nexport const instantiateRustWasm = async (webassemblyBytes, expectedImportModuleName, hashExportName, initExportName, updateExportName, finalExportName) => {\n    const wasm = (await WebAssembly.instantiate(webassemblyBytes, {\n        [expectedImportModuleName]: {\n            /**\n             * This would only be called in cases where a `__wbindgen_malloc` failed.\n             * Since `__wbindgen_malloc` isn't exposed to consumers, this error\n             * can only be encountered if the code below is broken.\n             */\n            __wbindgen_throw: /* istanbul ignore next */ (ptr, len) => {\n                throw new Error(Array.from(getUint8Memory().subarray(ptr, ptr + len))\n                    .map(num => String.fromCharCode(num))\n                    .join(''));\n            }\n        }\n    })).instance.exports;\n    // tslint:disable:no-let no-if-statement no-expression-statement no-unsafe-any\n    let cachedUint8Memory;\n    let cachedUint32Memory;\n    let cachedGlobalArgumentPtr;\n    const globalArgumentPtr = () => {\n        if (cachedGlobalArgumentPtr === undefined) {\n            cachedGlobalArgumentPtr = wasm.__wbindgen_global_argument_ptr();\n        }\n        return cachedGlobalArgumentPtr;\n    };\n    /**\n     * Must be hoisted for `__wbindgen_throw`.\n     */\n    // tslint:disable-next-line:only-arrow-functions\n    function getUint8Memory() {\n        if (cachedUint8Memory === undefined ||\n            cachedUint8Memory.buffer !== wasm.memory.buffer) {\n            cachedUint8Memory = new Uint8Array(wasm.memory.buffer);\n        }\n        return cachedUint8Memory;\n    }\n    const getUint32Memory = () => {\n        if (cachedUint32Memory === undefined ||\n            cachedUint32Memory.buffer !== wasm.memory.buffer) {\n            cachedUint32Memory = new Uint32Array(wasm.memory.buffer);\n        }\n        return cachedUint32Memory;\n    };\n    // tslint:enable:no-let no-if-statement\n    const passArray8ToWasm = (array) => {\n        const ptr = wasm.__wbindgen_malloc(array.length);\n        getUint8Memory().set(array, ptr);\n        return [ptr, array.length];\n    };\n    const getArrayU8FromWasm = (ptr, len) => getUint8Memory().subarray(ptr, ptr + len);\n    // tslint:disable:no-magic-numbers\n    const hash = (input) => {\n        const [ptr0, len0] = passArray8ToWasm(input);\n        const retPtr = globalArgumentPtr();\n        try {\n            wasm[hashExportName](retPtr, ptr0, len0);\n            const mem = getUint32Memory();\n            const ptr = mem[retPtr / 4];\n            const len = mem[retPtr / 4 + 1];\n            const realRet = getArrayU8FromWasm(ptr, len).slice();\n            wasm.__wbindgen_free(ptr, len);\n            return realRet;\n        }\n        finally {\n            wasm.__wbindgen_free(ptr0, len0);\n        }\n    };\n    const init = () => {\n        const retPtr = globalArgumentPtr();\n        wasm[initExportName](retPtr);\n        const mem = getUint32Memory();\n        const ptr = mem[retPtr / 4];\n        const len = mem[retPtr / 4 + 1];\n        const realRet = getArrayU8FromWasm(ptr, len).slice();\n        wasm.__wbindgen_free(ptr, len);\n        return realRet;\n    };\n    const update = (rawState, input) => {\n        const [ptr0, len0] = passArray8ToWasm(rawState);\n        const [ptr1, len1] = passArray8ToWasm(input);\n        const retPtr = globalArgumentPtr();\n        try {\n            wasm[updateExportName](retPtr, ptr0, len0, ptr1, len1);\n            const mem = getUint32Memory();\n            const ptr = mem[retPtr / 4];\n            const len = mem[retPtr / 4 + 1];\n            const realRet = getArrayU8FromWasm(ptr, len).slice();\n            wasm.__wbindgen_free(ptr, len * 1);\n            return realRet;\n        }\n        finally {\n            rawState.set(getUint8Memory().subarray(ptr0 / 1, ptr0 / 1 + len0));\n            wasm.__wbindgen_free(ptr0, len0 * 1);\n            wasm.__wbindgen_free(ptr1, len1 * 1);\n        }\n    };\n    const final = (rawState) => {\n        const [ptr0, len0] = passArray8ToWasm(rawState);\n        const retPtr = globalArgumentPtr();\n        try {\n            wasm[finalExportName](retPtr, ptr0, len0);\n            const mem = getUint32Memory();\n            const ptr = mem[retPtr / 4];\n            const len = mem[retPtr / 4 + 1];\n            const realRet = getArrayU8FromWasm(ptr, len).slice();\n            wasm.__wbindgen_free(ptr, len * 1);\n            return realRet;\n        }\n        finally {\n            rawState.set(getUint8Memory().subarray(ptr0 / 1, ptr0 / 1 + len0));\n            wasm.__wbindgen_free(ptr0, len0 * 1);\n        }\n    };\n    // tslint:enable:no-expression-statement\n    return {\n        final,\n        hash,\n        init,\n        update\n    };\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGFzaGVzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL2xpYi9iaW4vaGFzaGVzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQU9BOzs7O0dBSUc7QUFDSCxNQUFNLENBQUMsTUFBTSxtQkFBbUIsR0FBRyxLQUFLLEVBQ3RDLGdCQUE2QixFQUM3Qix3QkFBZ0MsRUFDaEMsY0FBc0IsRUFDdEIsY0FBc0IsRUFDdEIsZ0JBQXdCLEVBQ3hCLGVBQXVCLEVBQ0EsRUFBRTtJQUN6QixNQUFNLElBQUksR0FBRyxDQUFDLE1BQU0sV0FBVyxDQUFDLFdBQVcsQ0FBQyxnQkFBZ0IsRUFBRTtRQUM1RCxDQUFDLHdCQUF3QixDQUFDLEVBQUU7WUFDMUI7Ozs7ZUFJRztZQUNILGdCQUFnQixFQUFFLDBCQUEwQixDQUFDLENBQzNDLEdBQVcsRUFDWCxHQUFXLEVBQ1gsRUFBRTtnQkFDRixNQUFNLElBQUksS0FBSyxDQUNiLEtBQUssQ0FBQyxJQUFJLENBQUMsY0FBYyxFQUFFLENBQUMsUUFBUSxDQUFDLEdBQUcsRUFBRSxHQUFHLEdBQUcsR0FBRyxDQUFDLENBQUM7cUJBQ2xELEdBQUcsQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLE1BQU0sQ0FBQyxZQUFZLENBQUMsR0FBRyxDQUFDLENBQUM7cUJBQ3BDLElBQUksQ0FBQyxFQUFFLENBQUMsQ0FDWixDQUFDO1lBQ0osQ0FBQztTQUNGO0tBQ0YsQ0FBQyxDQUFDLENBQUMsUUFBUSxDQUFDLE9BQU8sQ0FBQztJQUVyQiw4RUFBOEU7SUFDOUUsSUFBSSxpQkFBeUMsQ0FBQztJQUM5QyxJQUFJLGtCQUEyQyxDQUFDO0lBQ2hELElBQUksdUJBQTJDLENBQUM7SUFFaEQsTUFBTSxpQkFBaUIsR0FBRyxHQUFHLEVBQUU7UUFDN0IsSUFBSSx1QkFBdUIsS0FBSyxTQUFTLEVBQUU7WUFDekMsdUJBQXVCLEdBQUcsSUFBSSxDQUFDLDhCQUE4QixFQUFZLENBQUM7U0FDM0U7UUFDRCxPQUFPLHVC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","/**\n * @hidden\n */\n// prettier-ignore\nexport const ripemd160Base64Bytes = '';\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmlwZW1kMTYwLmJhc2U2NC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3NyYy9saWIvYmluL3JpcGVtZDE2MC9yaXBlbWQxNjAuYmFzZTY0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztHQUVHO0FBQ0gsa0JBQWtCO0FBQ2xCLE1BQU0sQ0FBQyxNQUFNLG9CQUFvQixHQUMvQiwwcnVCQUEwcnVCLENBQUMifQ==","// bitflags used in secp256k1's public API (translated from secp256k1.h)\n// tslint:disable:no-bitwise no-magic-numbers\n/** All flags' lower 8 bits indicate what they're for. Do not use directly. */\n// const SECP256K1_FLAGS_TYPE_MASK = (1 << 8) - 1;\nconst SECP256K1_FLAGS_TYPE_CONTEXT = 1 << 0;\nconst SECP256K1_FLAGS_TYPE_COMPRESSION = 1 << 1;\n/** The higher bits contain the actual data. Do not use directly. */\nconst SECP256K1_FLAGS_BIT_CONTEXT_VERIFY = 1 << 8;\nconst SECP256K1_FLAGS_BIT_CONTEXT_SIGN = 1 << 9;\nconst SECP256K1_FLAGS_BIT_COMPRESSION = 1 << 8;\n/** Flags to pass to secp256k1_context_create. */\nconst SECP256K1_CONTEXT_VERIFY = SECP256K1_FLAGS_TYPE_CONTEXT | SECP256K1_FLAGS_BIT_CONTEXT_VERIFY;\nconst SECP256K1_CONTEXT_SIGN = SECP256K1_FLAGS_TYPE_CONTEXT | SECP256K1_FLAGS_BIT_CONTEXT_SIGN;\nconst SECP256K1_CONTEXT_NONE = SECP256K1_FLAGS_TYPE_CONTEXT;\n/** Flag to pass to secp256k1_ec_pubkey_serialize and secp256k1_ec_privkey_export. */\nconst SECP256K1_EC_COMPRESSED = SECP256K1_FLAGS_TYPE_COMPRESSION | SECP256K1_FLAGS_BIT_COMPRESSION;\nconst SECP256K1_EC_UNCOMPRESSED = SECP256K1_FLAGS_TYPE_COMPRESSION;\n// /** Prefix byte used to tag various encoded curvepoints for specific purposes */\n// const SECP256K1_TAG_PUBKEY_EVEN = 0x02;\n// const SECP256K1_TAG_PUBKEY_ODD = 0x03;\n// const SECP256K1_TAG_PUBKEY_UNCOMPRESSED = 0x04;\n// const SECP256K1_TAG_PUBKEY_HYBRID_EVEN = 0x06;\n// const SECP256K1_TAG_PUBKEY_HYBRID_ODD = 0x07;\n/**\n * Flag to pass to a Secp256k1.contextCreate method.\n *\n * The purpose of context structures is to cache large precomputed data tables\n * that are expensive to construct, and also to maintain the randomization data\n * for blinding.\n *\n * You can create a context with only VERIFY or only SIGN capabilities, or you\n * can use BOTH. (NONE can be used for conversion/serialization.)\n */\nexport var ContextFlag;\n(function (ContextFlag) {\n    ContextFlag[ContextFlag[\"NONE\"] = SECP256K1_CONTEXT_NONE] = \"NONE\";\n    ContextFlag[ContextFlag[\"VERIFY\"] = SECP256K1_CONTEXT_VERIFY] = \"VERIFY\";\n    ContextFlag[ContextFlag[\"SIGN\"] = SECP256K1_CONTEXT_SIGN] = \"SIGN\";\n    ContextFlag[ContextFlag[\"BOTH\"] = SECP256K1_CONTEXT_SIGN | SECP256K1_CONTEXT_VERIFY] = \"BOTH\";\n})(ContextFlag || (ContextFlag = {}));\n/**\n * Flag to pass a Secp256k1 public key serialization method.\n *\n * You can indicate COMPRESSED (33 bytes, header byte 0x02 or 0x03) or\n * UNCOMPRESSED (65 bytes, header byte 0x04) format.\n */\nexport var CompressionFlag;\n(function (CompressionFlag) {\n    CompressionFlag[CompressionFlag[\"COMPRESSED\"] = SECP256K1_EC_COMPRESSED] = \"COMPRESSED\";\n    CompressionFlag[CompressionFlag[\"UNCOMPRESSED\"] = SECP256K1_EC_UNCOMPRESSED] = \"UNCOMPRESSED\";\n})(CompressionFlag || (CompressionFlag = {}));\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2VjcDI1NmsxLXdhc20tdHlwZXMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9zcmMvbGliL2Jpbi9zZWNwMjU2azEvc2VjcDI1NmsxLXdhc20tdHlwZXMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsd0VBQXdFO0FBRXhFLDZDQUE2QztBQUM3Qyw4RUFBOEU7QUFDOUUsa0RBQWtEO0FBQ2xELE1BQU0sNEJBQTRCLEdBQUcsQ0FBQyxJQUFJLENBQUMsQ0FBQztBQUM1QyxNQUFNLGdDQUFnQyxHQUFHLENBQUMsSUFBSSxDQUFDLENBQUM7QUFDaEQsb0VBQW9FO0FBQ3BFLE1BQU0sa0NBQWtDLEdBQUcsQ0FBQyxJQUFJLENBQUMsQ0FBQztBQUNsRCxNQUFNLGdDQUFnQyxHQUFHLENBQUMsSUFBSSxDQUFDLENBQUM7QUFDaEQsTUFBTSwrQkFBK0IsR0FBRyxDQUFDLElBQUksQ0FBQyxDQUFDO0FBRS9DLGlEQUFpRDtBQUNqRCxNQUFNLHdCQUF3QixHQUM1Qiw0QkFBNEIsR0FBRyxrQ0FBa0MsQ0FBQztBQUNwRSxNQUFNLHNCQUFzQixHQUMxQiw0QkFBNEIsR0FBRyxnQ0FBZ0MsQ0FBQztBQUNsRSxNQUFNLHNCQUFzQixHQUFHLDRCQUE0QixDQUFDO0FBRTVELHFGQUFxRjtBQUNyRixNQUFNLHVCQUF1QixHQUMzQixnQ0FBZ0MsR0FBRywrQkFBK0IsQ0FBQztBQUNyRSxNQUFNLHlCQUF5QixHQUFHLGdDQUFnQyxDQUFDO0FBRW5FLG1GQUFtRjtBQUNuRiwwQ0FBMEM7QUFDMUMseUNBQXlDO0FBQ3pDLGtEQUFrRDtBQUNsRCxpREFBaUQ7QUFDakQsZ0RBQWdEO0FBRWhEOzs7Ozs7Ozs7R0FTRztBQUNILE1BQU0sQ0FBTixJQUFZLFdBS1g7QUFMRCxXQUFZLFdBQVc7SUFDckIsa0NBQU8sc0JBQTJCLFVBQUEsQ0FBQTtJQUNsQyxvQ0FBUyx3QkFBK0IsWUFBQSxDQUFBO0lBQ3hDLGtDQUFPLHNCQUE2QixVQUFBLENBQUE7SUFDcEMsa0NBQU8sc0JBQXNCLEdBQUksd0JBQWdDLFVBQUEsQ0FBQTtBQUNuRSxDQUFDLEVBTFcsV0FBVyxLQUFYLFdBQVcsUUFLdEI7QUFFRDs7Ozs7R0FLRztBQUNILE1BQU0sQ0FBTixJQUFZLGVBR1g7QUFIRCxXQUFZLGVBQWU7SUFDekIsZ0RBQWEsdUJBQThCLGdCQUFBLENBQUE7SUFDM0Msa0RBQWUseUJBQThCLGtCQUFBLENBQUE7QUFDL0MsQ0FBQyxFQUhXLGVBQWUsS0FBZixlQUFlLFFBRzFCIn0=","import { base64ToBin } from '../../utils/utils';\nimport { CompressionFlag, ContextFlag } from './secp256k1-wasm-types';\nimport { secp256k1Base64Bytes } from './secp256k1.base64';\nexport { ContextFlag, CompressionFlag };\n// tslint:disable:no-unsafe-any\nconst wrapSecp256k1Wasm = (instance, heapU8, heapU32) => ({\n    contextCreate: context => instance.exports._secp256k1_context_create(context),\n    contextRandomize: (contextPtr, seedPtr) => instance.exports._secp256k1_context_randomize(contextPtr, seedPtr),\n    free: pointer => instance.exports._free(pointer),\n    heapU32,\n    heapU8,\n    instance,\n    malloc: bytes => instance.exports._malloc(bytes),\n    mallocSizeT: num => {\n        // tslint:disable-next-line:no-magic-numbers\n        const pointer = instance.exports._malloc(4);\n        // tslint:disable-next-line:no-bitwise no-magic-numbers\n        const pointerView32 = pointer >> 2;\n        // tslint:disable-next-line:no-expression-statement\n        heapU32.set([num], pointerView32);\n        return pointer;\n    },\n    mallocUint8Array: array => {\n        const pointer = instance.exports._malloc(array.length);\n        // tslint:disable-next-line:no-expression-statement\n        heapU8.set(array, pointer);\n        return pointer;\n    },\n    privkeyTweakAdd: (contextPtr, secretKeyPtr, tweakNum256Ptr) => instance.exports._secp256k1_ec_privkey_tweak_add(contextPtr, secretKeyPtr, tweakNum256Ptr),\n    privkeyTweakMul: (contextPtr, secretKeyPtr, tweakNum256Ptr) => instance.exports._secp256k1_ec_privkey_tweak_mul(contextPtr, secretKeyPtr, tweakNum256Ptr),\n    pubkeyCreate: (contextPtr, publicKeyPtr, secretKeyPtr) => instance.exports._secp256k1_ec_pubkey_create(contextPtr, publicKeyPtr, secretKeyPtr),\n    pubkeyParse: (contextPtr, publicKeyOutPtr, publicKeyInPtr, publicKeyInLength) => instance.exports._secp256k1_ec_pubkey_parse(contextPtr, publicKeyOutPtr, publicKeyInPtr, publicKeyInLength),\n    pubkeySerialize: (contextPtr, outputPtr, outputLengthPtr, publicKeyPtr, compression) => instance.exports._secp256k1_ec_pubkey_serialize(contextPtr, outputPtr, outputLengthPtr, publicKeyPtr, compression),\n    pubkeyTweakAdd: (contextPtr, publicKeyPtr, tweakNum256Ptr) => instance.exports._secp256k1_ec_pubkey_tweak_add(contextPtr, publicKeyPtr, tweakNum256Ptr),\n    pubkeyTweakMul: (contextPtr, publicKeyPtr, tweakNum256Ptr) => instance.exports._secp256k1_ec_pubkey_tweak_mul(contextPtr, publicKeyPtr, tweakNum256Ptr),\n    readHeapU8: (pointer, bytes) => new Uint8Array(heapU8.buffer, pointer, bytes),\n    readSizeT: pointer => {\n        // tslint:disable-next-line:no-bitwise no-magic-numbers\n        const pointerView32 = pointer >> 2;\n        return heapU32[pointerView32];\n    },\n    recover: (contextPtr, outputPubkeyPointer, rSigPtr, msg32Ptr) => instance.exports._secp256k1_ecdsa_recover(contextPtr, outputPubkeyPointer, rSigPtr, msg32Ptr),\n    recoverableSignatureParse: (contextPtr, outputRSigPtr, inputSigPtr, rid) => instance.exports._secp256k1_ecdsa_recoverable_signature_parse_compact(contextPtr, outputRSigPtr, inputSigPtr, rid),\n    recoverableSignatureSerialize: (contextPtr, sigOutPtr, recIDOutPtr, rSigPtr) => instance.exports._secp256k1_ecdsa_recoverable_signature_serialize_compact(contextPtr, sigOutPtr, recIDOutPtr, rSigPtr),\n    schnorrSign: (contextPtr, outputSigPtr, msg32Ptr, secretKeyPtr) => instance.exports._secp256k1_schnorr_sign(contextPtr, outputSigPtr, msg32Ptr, secretKeyPtr),\n    schnorrVerify: (contextPtr, sigPtr, msg32Ptr, publicKeyPtr) => instance.exports._secp256k1_schnorr_verify(contextPtr, sigPtr, msg32Ptr, publicKeyPtr),\n    seckeyVerify: (contextPtr, secretKeyPtr) => instance.exports._secp256k1_ec_seckey_verify(contextPtr, secretKeyPtr),\n    sign: (contextPtr, outputSigPtr, msg32Ptr, secretKeyPtr) => instance.exports._secp256k1_ecdsa_sign(contextPtr, outputSigPtr, msg32Ptr, secretKeyPtr),\n    signRecoverable: (contextPtr, outputRSigPtr, msg32Ptr, secretKeyPtr) => instance.exports._secp256k1_ecdsa_sign_recoverable(contextPtr, outputRSigPtr, msg32Ptr, secretKeyPtr),\n    signatureMalleate: (contextPtr, outputSigPtr, inputSigPtr) => instance.exports._secp256k1_ecdsa_signature_malleate(contextPtr, outputSigPtr, inputSigPtr),\n    signatureNormalize: (contextPtr, outputSigPtr, inputSigPtr) => instance.exports._secp256k1_ecdsa_signature_normalize(contextPtr, outputSigPtr, inputSigPtr),\n    signatureParseCompact: (contextPtr, sigOutPtr, compactSigInPtr) => instance.exports._secp256k1_ecdsa_signature_parse_compact(contextPtr, sigOutPtr, compactSigInPtr),\n    signatureParseDER: (contextPtr, sigOutPtr, sigDERInPtr, sigDERInLength) => instance.exports._secp256k1_ecdsa_signature_parse_der(contextPtr, sigOutPtr, sigDERInPtr, sigDERInLength),\n    signatureSerializeCompact: (contextPtr, outputCompactSigPtr, inputSigPtr) => instance.exports._secp256k1_ecdsa_signature_serialize_compact(contextPtr, outputCompactSigPtr, inputSigPtr),\n    signatureSerializeDER: (contextPtr, outputDERSigPtr, outputDERSigLengthPtr, inputSigPtr) => instance.exports._secp256k1_ecdsa_signature_serialize_der(contextPtr, outputDERSigPtr, outputDERSigLengthPtr, inputSigPtr),\n    verify: (contextPtr, sigPtr, msg32Ptr, pubkeyPtr) => instance.exports._secp256k1_ecdsa_verify(contextPtr, sigPtr, msg32Ptr, pubkeyPtr)\n});\n// tslint:enable:no-unsafe-any\n/**\n * Method extracted from Emscripten's preamble.js\n */\nconst isLittleEndian = (buffer) => {\n    const littleEndian = true;\n    const notLittleEndian = false;\n    const heap16 = new Int16Array(buffer);\n    const heap32 = new Int32Array(buffer);\n    const heapU8 = new Uint8Array(buffer);\n    // tslint:disable:no-expression-statement no-object-mutation no-magic-numbers\n    heap32[0] = 1668509029;\n    heap16[1] = 25459;\n    // tslint:enable:no-expression-statement no-object-mutation\n    // tslint:disable-next-line:no-magic-numbers\n    return heapU8[2] !== 115 || heapU8[3] !== 99\n        ? /* istanbul ignore next */ notLittleEndian\n        : littleEndian;\n};\n/**\n * Method derived from Emscripten's preamble.js\n */\nconst alignMemory = (factor, size) => Math.ceil(size / factor) * factor;\n/**\n * The most performant way to instantiate secp256k1 functionality. To avoid\n * using Node.js or DOM-specific APIs, you can use `instantiateSecp256k1`.\n *\n * Note, most of this method is translated and boiled-down from Emscripten's\n * preamble.js. Significant changes to the WASM build or breaking updates to\n * Emscripten will likely require modifications to this method.\n *\n * @param webassemblyBytes A buffer containing the secp256k1 binary.\n */\nexport const instantiateSecp256k1WasmBytes = async (webassemblyBytes) => {\n    const STACK_ALIGN = 16;\n    const GLOBAL_BASE = 1024;\n    const WASM_PAGE_SIZE = 65536;\n    const TOTAL_STACK = 5242880;\n    const TOTAL_MEMORY = 16777216;\n    const wasmMemory = new WebAssembly.Memory({\n        initial: TOTAL_MEMORY / WASM_PAGE_SIZE,\n        maximum: TOTAL_MEMORY / WASM_PAGE_SIZE\n    });\n    /* istanbul ignore if  */\n    // tslint:disable-next-line:no-if-statement\n    if (!isLittleEndian(wasmMemory.buffer)) {\n        // note: this block is excluded from test coverage. It's A) hard to test\n        // (must be either tested on big-endian hardware or a big-endian buffer\n        // mock) and B) extracted from Emscripten's preamble.js, where it should\n        // be tested properly.\n        throw new Error('Runtime error: expected the system to be little-endian.');\n    }\n    // tslint:disable:no-magic-numbers\n    const STATIC_BASE = GLOBAL_BASE;\n    const STATICTOP_INITIAL = STATIC_BASE + 67696 + 16;\n    const DYNAMICTOP_PTR = STATICTOP_INITIAL;\n    const DYNAMICTOP_PTR_SIZE = 4;\n    // tslint:disable-next-line:no-bitwise\n    const STATICTOP = (STATICTOP_INITIAL + DYNAMICTOP_PTR_SIZE + 15) & -16;\n    const STACKTOP = alignMemory(STACK_ALIGN, STATICTOP);\n    const STACK_BASE = STACKTOP;\n    const STACK_MAX = STACK_BASE + TOTAL_STACK;\n    const DYNAMIC_BASE = alignMemory(STACK_ALIGN, STACK_MAX);\n    const heapU8 = new Uint8Array(wasmMemory.buffer);\n    const heap32 = new Int32Array(wasmMemory.buffer);\n    const heapU32 = new Uint32Array(wasmMemory.buffer);\n    // tslint:disable-next-line:no-expression-statement no-bitwise no-object-mutation\n    heap32[DYNAMICTOP_PTR >> 2] = DYNAMIC_BASE;\n    const TABLE_SIZE = 6;\n    const MAX_TABLE_SIZE = 6;\n    // tslint:enable:no-magic-numbers\n    // tslint:disable-next-line:no-let\n    let getErrNoLocation;\n    // note: A number of methods below are excluded from test coverage. They are\n    // a) not part of the regular usage of this library (should only be evaluated\n    // if the consumer mis-implements the library and exist only to make\n    // debugging easier) and B) already tested adequately in Emscripten, from\n    // which this section is extracted.\n    const env = {\n        DYNAMICTOP_PTR,\n        STACKTOP,\n        ___setErrNo: /* istanbul ignore next */ (value) => {\n            // tslint:disable-next-line:no-if-statement\n            if (getErrNoLocation !== undefined) {\n                // tslint:disable-next-line:no-bitwise no-expression-statement no-object-mutation no-magic-numbers\n                heap32[getErrNoLocation() >> 2] = value;\n            }\n            return value;\n        },\n        _abort: /* istanbul ignore next */ (err = 'Secp256k1 Error') => {\n            throw new Error(err);\n        },\n        _emscripten_memcpy_big: /* istanbul ignore next */ (dest, src, num) => {\n            // tslint:disable-next-line:no-expression-statement\n            heapU8.set(heapU8.subarray(src, src + num), dest);\n            return dest;\n        },\n        abort: /* istanbul ignore next */ (err = 'Secp256k1 Error') => {\n            throw new Error(err);\n        },\n        abortOnCannotGrowMemory: /* istanbul ignore next */ () => {\n            throw new Error('Secp256k1 Error: abortOnCannotGrowMemory was called.');\n        },\n        enlargeMemory: /* istanbul ignore next */ () => {\n            throw new Error('Secp256k1 Error: enlargeMemory was called.');\n        },\n        getTotalMemory: () => TOTAL_MEMORY\n    };\n    const info = {\n        env: {\n            ...env,\n            memory: wasmMemory,\n            memoryBase: STATIC_BASE,\n            table: new WebAssembly.Table({\n                element: 'anyfunc',\n                initial: TABLE_SIZE,\n                maximum: MAX_TABLE_SIZE\n            }),\n            tableBase: 0\n        },\n        global: { NaN, Infinity }\n    };\n    return WebAssembly.instantiate(webassemblyBytes, info).then(result => {\n        //\n        // tslint:disable-next-line:no-expression-statement no-unsafe-any\n        getErrNoLocation = result.instance.exports.___errno_location;\n        return wrapSecp256k1Wasm(result.instance, heapU8, heapU32);\n    });\n};\nexport const getEmbeddedSecp256k1Binary = () => base64ToBin(secp256k1Base64Bytes).buffer;\n/**\n * An ultimately-portable (but slower) version of `instantiateSecp256k1Bytes`\n * which does not require the consumer to provide the secp256k1 binary buffer.\n */\nexport const instantiateSecp256k1Wasm = async () => instantiateSecp256k1WasmBytes(getEmbeddedSecp256k1Binary());\n//# sourceMappingURL=data:application/json;base64,","/**\n * @hidden\n */\n// prettier-ignore\nexport const secp256k1Base64Bytes = '';\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2VjcDI1NmsxLmJhc2U2NC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3NyYy9saWIvYmluL3NlY3AyNTZrMS9zZWNwMjU2azEuYmFzZTY0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztHQUVHO0FBQ0gsa0JBQWtCO0FBQ2xCLE1BQU0sQ0FBQyxNQUFNLG9CQUFvQixHQUMvQiw4OTBPQUE4OTBPLENBQUMifQ==","/**\n * @hidden\n */\n// prettier-ignore\nexport const sha1Base64Bytes = '';\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2hhMS5iYXNlNjQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9zcmMvbGliL2Jpbi9zaGExL3NoYTEuYmFzZTY0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztHQUVHO0FBQ0gsa0JBQWtCO0FBQ2xCLE1BQU0sQ0FBQyxNQUFNLGVBQWUsR0FDMUIsazh4QkFBazh4QixDQUFDIn0=","/**\n * @hidden\n */\n// prettier-ignore\nexport const sha256Base64Bytes = '';\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2hhMjU2LmJhc2U2NC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3NyYy9saWIvYmluL3NoYTI1Ni9zaGEyNTYuYmFzZTY0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztHQUVHO0FBQ0gsa0JBQWtCO0FBQ2xCLE1BQU0sQ0FBQyxNQUFNLGlCQUFpQixHQUM1QixranhCQUFranhCLENBQUMifQ==","/**\n * @hidden\n */\n// prettier-ignore\nexport const sha512Base64Bytes = '';\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2hhNTEyLmJhc2U2NC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3NyYy9saWIvYmluL3NoYTUxMi9zaGE1MTIuYmFzZTY0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztHQUVHO0FBQ0gsa0JBQWtCO0FBQ2xCLE1BQU0sQ0FBQyxNQUFNLGlCQUFpQixHQUM1QixrdXZCQUFrdXZCLENBQUMifQ==","export * from './secp256k1';\nexport * from './ripemd160';\nexport * from './sha1';\nexport * from './sha256';\nexport * from './sha512';\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY3J5cHRvLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL2xpYi9jcnlwdG8vY3J5cHRvLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLGNBQWMsYUFBYSxDQUFDO0FBQzVCLGNBQWMsYUFBYSxDQUFDO0FBQzVCLGNBQWMsUUFBUSxDQUFDO0FBQ3ZCLGNBQWMsVUFBVSxDQUFDO0FBQ3pCLGNBQWMsVUFBVSxDQUFDIn0=","import { instantiateRustWasm, ripemd160Base64Bytes } from '../bin/bin';\nimport { base64ToBin } from '../utils/utils';\n/**\n * The most performant way to instantiate ripemd160 functionality. To avoid\n * using Node.js or DOM-specific APIs, you can use `instantiateRipemd160`.\n *\n * @param webassemblyBytes A buffer containing the ripemd160 binary.\n */\nexport const instantiateRipemd160Bytes = async (webassemblyBytes) => {\n    const wasm = await instantiateRustWasm(webassemblyBytes, './ripemd160', 'ripemd160', 'ripemd160_init', 'ripemd160_update', 'ripemd160_final');\n    return {\n        final: wasm.final,\n        hash: wasm.hash,\n        init: wasm.init,\n        update: wasm.update\n    };\n};\nexport const getEmbeddedRipemd160Binary = () => base64ToBin(ripemd160Base64Bytes).buffer;\n/**\n * An ultimately-portable (but slower) version of `instantiateRipemd160Bytes`\n * which does not require the consumer to provide the ripemd160 binary buffer.\n */\nexport const instantiateRipemd160 = async () => instantiateRipemd160Bytes(getEmbeddedRipemd160Binary());\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmlwZW1kMTYwLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL2xpYi9jcnlwdG8vcmlwZW1kMTYwLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFFTCxtQkFBbUIsRUFDbkIsb0JBQW9CLEVBQ3JCLE1BQU0sWUFBWSxDQUFDO0FBQ3BCLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQXFEN0M7Ozs7O0dBS0c7QUFDSCxNQUFNLENBQUMsTUFBTSx5QkFBeUIsR0FBRyxLQUFLLEVBQzVDLGdCQUE2QixFQUNULEVBQUU7SUFDdEIsTUFBTSxJQUFJLEdBQUcsTUFBTSxtQkFBbUIsQ0FDcEMsZ0JBQWdCLEVBQ2hCLGFBQWEsRUFDYixXQUFXLEVBQ1gsZ0JBQWdCLEVBQ2hCLGtCQUFrQixFQUNsQixpQkFBaUIsQ0FDbEIsQ0FBQztJQUNGLE9BQU87UUFDTCxLQUFLLEVBQUUsSUFBSSxDQUFDLEtBQUs7UUFDakIsSUFBSSxFQUFFLElBQUksQ0FBQyxJQUFJO1FBQ2YsSUFBSSxFQUFFLElBQUksQ0FBQyxJQUFJO1FBQ2YsTUFBTSxFQUFFLElBQUksQ0FBQyxNQUFNO0tBQ3BCLENBQUM7QUFDSixDQUFDLENBQUM7QUFFRixNQUFNLENBQUMsTUFBTSwwQkFBMEIsR0FBRyxHQUFHLEVBQUUsQ0FDN0MsV0FBVyxDQUFDLG9CQUFvQixDQUFDLENBQUMsTUFBTSxDQUFDO0FBRTNDOzs7R0FHRztBQUNILE1BQU0sQ0FBQyxNQUFNLG9CQUFvQixHQUFHLEtBQUssSUFBd0IsRUFBRSxDQUNqRSx5QkFBeUIsQ0FBQywwQkFBMEIsRUFBRSxDQUFDLENBQUMifQ==","import { CompressionFlag, ContextFlag, instantiateSecp256k1Wasm, instantiateSecp256k1WasmBytes } from '../bin/bin';\n/**\n * @param secp256k1Wasm a Secp256k1Wasm object\n * @param randomSeed a 32-byte random seed used to randomize the context after\n * creation\n */\nconst wrapSecp256k1Wasm = (secp256k1Wasm, randomSeed) => {\n    /**\n     * Currently, this wrapper creates a context with both SIGN and VERIFY\n     * capabilities. For better initialization performance, consumers could\n     * re-implement a wrapper with only the capabilities they require.\n     */\n    const contextPtr = secp256k1Wasm.contextCreate(ContextFlag.BOTH);\n    /**\n     * Since all of these methods are single-threaded and synchronous, we can\n     * reuse allocated WebAssembly memory for each method without worrying about\n     * calls interfering with each other. Likewise, these spaces never need to be\n     * `free`d, since we will continue using them until this entire object (and\n     * with it, the entire WebAssembly instance) is garbage collected.\n     *\n     * If malicious javascript gained access to this object, it should be\n     * considered a critical vulnerability in the consumer. However, as a best\n     * practice, we zero out private keys below when we're finished with them.\n     */\n    const sigScratch = secp256k1Wasm.malloc(72 /* maxECDSASig */);\n    const publicKeyScratch = secp256k1Wasm.malloc(65 /* maxPublicKey */);\n    const messageHashScratch = secp256k1Wasm.malloc(32 /* messageHash */);\n    const internalPublicKeyPtr = secp256k1Wasm.malloc(64 /* internalPublicKey */);\n    const internalSigPtr = secp256k1Wasm.malloc(64 /* internalSig */);\n    const schnorrSigPtr = secp256k1Wasm.malloc(64 /* schnorrSig */);\n    const privateKeyPtr = secp256k1Wasm.malloc(32 /* privateKey */);\n    const internalRSigPtr = secp256k1Wasm.malloc(65 /* recoverableSig */);\n    // tslint:disable-next-line:no-magic-numbers\n    const recoveryNumPtr = secp256k1Wasm.malloc(4);\n    // tslint:disable-next-line:no-bitwise no-magic-numbers\n    const recoveryNumPtrView32 = recoveryNumPtr >> 2;\n    const getRecoveryNumPtr = () => secp256k1Wasm.heapU32[recoveryNumPtrView32];\n    // tslint:disable-next-line:no-magic-numbers\n    const lengthPtr = secp256k1Wasm.malloc(4);\n    // tslint:disable-next-line:no-bitwise no-magic-numbers\n    const lengthPtrView32 = lengthPtr >> 2;\n    // tslint:disable:no-expression-statement no-if-statement\n    const parsePublicKey = (publicKey) => {\n        secp256k1Wasm.heapU8.set(publicKey, publicKeyScratch);\n        return secp256k1Wasm.pubkeyParse(contextPtr, internalPublicKeyPtr, publicKeyScratch, \n        // tslint:disable-next-line:no-magic-numbers\n        publicKey.length) === 1\n            ? true\n            : false;\n    };\n    const setLengthPtr = (value) => {\n        secp256k1Wasm.heapU32.set([value], lengthPtrView32);\n    };\n    const getLengthPtr = () => secp256k1Wasm.heapU32[lengthPtrView32];\n    const serializePublicKey = (length, flag) => {\n        setLengthPtr(length);\n        secp256k1Wasm.pubkeySerialize(contextPtr, publicKeyScratch, lengthPtr, internalPublicKeyPtr, flag);\n        return secp256k1Wasm.readHeapU8(publicKeyScratch, getLengthPtr()).slice();\n    };\n    const getSerializedPublicKey = (compressed) => compressed\n        ? serializePublicKey(33 /* compressedPublicKey */, CompressionFlag.COMPRESSED)\n        : serializePublicKey(65 /* uncompressedPublicKey */, CompressionFlag.UNCOMPRESSED);\n    const convertPublicKey = (compressed) => publicKey => {\n        if (!parsePublicKey(publicKey)) {\n            throw new Error('Failed to parse public key.');\n        }\n        return getSerializedPublicKey(compressed);\n    };\n    const parseSignature = (signature, DER) => {\n        secp256k1Wasm.heapU8.set(signature, sigScratch);\n        return DER\n            ? secp256k1Wasm.signatureParseDER(contextPtr, internalSigPtr, sigScratch, signature.length) === 1\n            : secp256k1Wasm.signatureParseCompact(contextPtr, internalSigPtr, sigScratch) === 1;\n    };\n    const parseOrThrow = (signature, DER) => {\n        if (!parseSignature(signature, DER)) {\n            throw new Error('Failed to parse signature.');\n        }\n    };\n    const getCompactSig = () => {\n        secp256k1Wasm.signatureSerializeCompact(contextPtr, sigScratch, internalSigPtr);\n        return secp256k1Wasm.readHeapU8(sigScratch, 64 /* compactSig */).slice();\n    };\n    const getDERSig = () => {\n        setLengthPtr(72 /* maxECDSASig */);\n        secp256k1Wasm.signatureSerializeDER(contextPtr, sigScratch, lengthPtr, internalSigPtr);\n        return secp256k1Wasm.readHeapU8(sigScratch, getLengthPtr()).slice();\n    };\n    const convertSignature = (wasDER) => signature => {\n        parseOrThrow(signature, wasDER);\n        return wasDER ? getCompactSig() : getDERSig();\n    };\n    const fillPrivateKeyPtr = (privateKey) => {\n        secp256k1Wasm.heapU8.set(privateKey, privateKeyPtr);\n    };\n    const zeroOutPtr = (pointer, bytes) => {\n        secp256k1Wasm.heapU8.fill(0, pointer, pointer + bytes);\n    };\n    const zeroOutPrivateKeyPtr = () => {\n        zeroOutPtr(privateKeyPtr, 32 /* privateKey */);\n    };\n    const withPrivateKey = (privateKey, instructions) => {\n        fillPrivateKeyPtr(privateKey);\n        const ret = instructions();\n        zeroOutPrivateKeyPtr();\n        return ret;\n    };\n    const derivePublicKey = (compressed) => privateKey => {\n        const invalid = withPrivateKey(privateKey, () => secp256k1Wasm.pubkeyCreate(contextPtr, internalPublicKeyPtr, privateKeyPtr) !== 1);\n        if (invalid) {\n            throw new Error('Cannot derive public key from invalid private key.');\n        }\n        return getSerializedPublicKey(compressed);\n    };\n    const fillMessageHashScratch = (messageHash) => {\n        secp256k1Wasm.heapU8.set(messageHash, messageHashScratch);\n    };\n    const normalizeSignature = () => {\n        secp256k1Wasm.signatureNormalize(contextPtr, internalSigPtr, internalSigPtr);\n    };\n    const modifySignature = (DER, normalize) => signature => {\n        parseOrThrow(signature, DER);\n        if (normalize) {\n            normalizeSignature();\n        }\n        else {\n            secp256k1Wasm.signatureMalleate(contextPtr, internalSigPtr, internalSigPtr);\n        }\n        return DER ? getDERSig() : getCompactSig();\n    };\n    const parseAndNormalizeSignature = (signature, DER, normalize) => {\n        const ret = parseSignature(signature, DER);\n        if (normalize) {\n            normalizeSignature();\n        }\n        return ret;\n    };\n    const signMessageHash = (DER) => (privateKey, messageHash) => {\n        fillMessageHashScratch(messageHash);\n        return withPrivateKey(privateKey, () => {\n            const failed = secp256k1Wasm.sign(contextPtr, internalSigPtr, messageHashScratch, privateKeyPtr) !== 1;\n            if (failed) {\n                throw new Error('Failed to sign message hash. The private key is not valid.');\n            }\n            if (DER) {\n                setLengthPtr(72 /* maxECDSASig */);\n                secp256k1Wasm.signatureSerializeDER(contextPtr, sigScratch, lengthPtr, internalSigPtr);\n                return secp256k1Wasm.readHeapU8(sigScratch, getLengthPtr()).slice();\n            }\n            secp256k1Wasm.signatureSerializeCompact(contextPtr, sigScratch, internalSigPtr);\n            return secp256k1Wasm\n                .readHeapU8(sigScratch, 64 /* compactSig */)\n                .slice();\n        });\n    };\n    const signMessageHashSchnorr = () => (privateKey, messageHash) => {\n        fillMessageHashScratch(messageHash);\n        return withPrivateKey(privateKey, () => {\n            const failed = secp256k1Wasm.schnorrSign(contextPtr, schnorrSigPtr, messageHashScratch, privateKeyPtr) !== 1;\n            if (failed) {\n                throw new Error('Failed to sign message hash. The private key is not valid.');\n            }\n            return secp256k1Wasm\n                .readHeapU8(schnorrSigPtr, 64 /* schnorrSig */)\n                .slice();\n        });\n    };\n    const verifyMessage = (messageHash) => {\n        fillMessageHashScratch(messageHash);\n        return (secp256k1Wasm.verify(contextPtr, internalSigPtr, messageHashScratch, internalPublicKeyPtr) === 1);\n    };\n    const verifySignature = (DER, normalize) => (signature, publicKey, messageHash) => parsePublicKey(publicKey) &&\n        parseAndNormalizeSignature(signature, DER, normalize) &&\n        verifyMessage(messageHash);\n    const verifyMessageSchnorr = (messageHash, signature) => {\n        fillMessageHashScratch(messageHash);\n        secp256k1Wasm.heapU8.set(signature, schnorrSigPtr);\n        return secp256k1Wasm.schnorrVerify(contextPtr, schnorrSigPtr, messageHashScratch, internalPublicKeyPtr) === 1\n            ? true\n            : false;\n    };\n    const verifySignatureSchnorr = () => (signature, publicKey, messageHash) => parsePublicKey(publicKey)\n        ? verifyMessageSchnorr(messageHash, signature)\n        : false;\n    const signMessageHashRecoverable = (privateKey, messageHash) => {\n        fillMessageHashScratch(messageHash);\n        return withPrivateKey(privateKey, () => {\n            if (secp256k1Wasm.signRecoverable(contextPtr, internalRSigPtr, messageHashScratch, privateKeyPtr) !== 1) {\n                throw new Error('Failed to sign message hash. The private key is not valid.');\n            }\n            secp256k1Wasm.recoverableSignatureSerialize(contextPtr, sigScratch, recoveryNumPtr, internalRSigPtr);\n            return {\n                recoveryId: getRecoveryNumPtr(),\n                signature: secp256k1Wasm\n                    .readHeapU8(sigScratch, 64 /* compactSig */)\n                    .slice()\n            };\n        });\n    };\n    const recoverPublicKey = (compressed) => (signature, recoveryId, messageHash) => {\n        fillMessageHashScratch(messageHash);\n        secp256k1Wasm.heapU8.set(signature, sigScratch);\n        if (secp256k1Wasm.recoverableSignatureParse(contextPtr, internalRSigPtr, sigScratch, recoveryId) !== 1) {\n            throw new Error('Failed to recover public key. Could not parse signature.');\n        }\n        if (secp256k1Wasm.recover(contextPtr, internalPublicKeyPtr, internalRSigPtr, messageHashScratch) !== 1) {\n            throw new Error('Failed to recover public key. The compact signature, recovery, or message hash is invalid.');\n        }\n        return getSerializedPublicKey(compressed);\n    };\n    const addTweakPrivateKey = (privateKey, tweakValue) => {\n        fillMessageHashScratch(tweakValue);\n        return withPrivateKey(privateKey, () => {\n            if (secp256k1Wasm.privkeyTweakAdd(contextPtr, privateKeyPtr, messageHashScratch) !== 1) {\n                throw new Error('Private key is invalid or adding failed.');\n            }\n            return secp256k1Wasm\n                .readHeapU8(privateKeyPtr, 32 /* privateKey */)\n                .slice();\n        });\n    };\n    const mulTweakPrivateKey = (privateKey, tweakValue) => {\n        fillMessageHashScratch(tweakValue);\n        return withPrivateKey(privateKey, () => {\n            if (secp256k1Wasm.privkeyTweakMul(contextPtr, privateKeyPtr, messageHashScratch) !== 1) {\n                throw new Error('Private key is invalid or multiplying failed.');\n            }\n            return secp256k1Wasm\n                .readHeapU8(privateKeyPtr, 32 /* privateKey */)\n                .slice();\n        });\n    };\n    const addTweakPublicKey = (compressed) => (publicKey, tweakValue) => {\n        if (!parsePublicKey(publicKey)) {\n            throw new Error('Failed to parse public key.');\n        }\n        fillMessageHashScratch(tweakValue);\n        if (secp256k1Wasm.pubkeyTweakAdd(contextPtr, internalPublicKeyPtr, messageHashScratch) !== 1) {\n            throw new Error('Adding failed');\n        }\n        return getSerializedPublicKey(compressed);\n    };\n    const mulTweakPublicKey = (compressed) => (publicKey, tweakValue) => {\n        if (!parsePublicKey(publicKey)) {\n            throw new Error('Failed to parse public key.');\n        }\n        fillMessageHashScratch(tweakValue);\n        if (secp256k1Wasm.pubkeyTweakMul(contextPtr, internalPublicKeyPtr, messageHashScratch) !== 1) {\n            throw new Error('Multiplying failed');\n        }\n        return getSerializedPublicKey(compressed);\n    };\n    /**\n     * The value of this precaution is debatable, especially in the context of\n     * javascript and WebAssembly.\n     *\n     * In the secp256k1 C library, context randomization is an additional layer of\n     * security from side-channel attacks which attempt to extract private key\n     * information by analyzing things like a CPU's emitted radio frequencies or\n     * power usage.\n     *\n     * In this library, these attacks seem even less likely, since the \"platform\"\n     * on which this code will be executed (e.g. V8) is likely to obscure any\n     * such signals.\n     *\n     * Still, out of an abundance of caution (and because no one has produced a\n     * definitive proof indicating that this is not helpful), this library exposes\n     * the ability to randomize the context like the C library. Depending on the\n     * intended application, consumers can decide whether or not to randomize.\n     */\n    if (randomSeed !== undefined) {\n        const randomSeedPtr = messageHashScratch;\n        secp256k1Wasm.heapU8.set(randomSeed, randomSeedPtr);\n        secp256k1Wasm.contextRandomize(contextPtr, randomSeedPtr);\n        zeroOutPtr(randomSeedPtr, 32 /* randomSeed */);\n    }\n    return {\n        addTweakPrivateKey,\n        addTweakPublicKeyCompressed: addTweakPublicKey(true),\n        addTweakPublicKeyUncompressed: addTweakPublicKey(false),\n        compressPublicKey: convertPublicKey(true),\n        derivePublicKeyCompressed: derivePublicKey(true),\n        derivePublicKeyUncompressed: derivePublicKey(false),\n        malleateSignatureCompact: modifySignature(false, false),\n        malleateSignatureDER: modifySignature(true, false),\n        mulTweakPrivateKey,\n        mulTweakPublicKeyCompressed: mulTweakPublicKey(true),\n        mulTweakPublicKeyUncompressed: mulTweakPublicKey(false),\n        normalizeSignatureCompact: modifySignature(false, true),\n        normalizeSignatureDER: modifySignature(true, true),\n        recoverPublicKeyCompressed: recoverPublicKey(true),\n        recoverPublicKeyUncompressed: recoverPublicKey(false),\n        signMessageHashCompact: signMessageHash(false),\n        signMessageHashDER: signMessageHash(true),\n        signMessageHashRecoverableCompact: signMessageHashRecoverable,\n        signMessageHashSchnorr: signMessageHashSchnorr(),\n        signatureCompactToDER: convertSignature(false),\n        signatureDERToCompact: convertSignature(true),\n        uncompressPublicKey: convertPublicKey(false),\n        validatePrivateKey: privateKey => withPrivateKey(privateKey, () => secp256k1Wasm.seckeyVerify(contextPtr, privateKeyPtr) === 1),\n        verifySignatureCompact: verifySignature(false, true),\n        verifySignatureCompactLowS: verifySignature(false, false),\n        verifySignatureDER: verifySignature(true, true),\n        verifySignatureDERLowS: verifySignature(true, false),\n        verifySignatureSchnorr: verifySignatureSchnorr()\n    };\n    // tslint:enable:no-expression-statement no-if-statement\n};\n/**\n * This method is like `instantiateSecp256k1`, but requires the consumer to\n * `Window.fetch` or `fs.readFile` the `secp256k1.wasm` binary and provide it to\n * this method as `webassemblyBytes`. This skips a base64 decoding of an\n * embedded binary.\n *\n * ### Randomizing the Context with `randomSeed`\n * This method also accepts an optional, 32-byte `randomSeed`, which is passed\n * to the `contextRandomize` method in the underlying WebAssembly.\n *\n * The value of this precaution is debatable, especially in the context of\n * javascript and WebAssembly.\n *\n * In the secp256k1 C library, context randomization is an additional layer of\n * security from side-channel attacks which attempt to extract private key\n * information by analyzing things like a CPU's emitted radio frequencies or\n * power usage.\n *\n * In this library, these attacks seem even less likely, since the \"platform\"\n * on which this code will be executed (e.g. V8) is likely to obscure any\n * such signals.\n *\n * Still, out of an abundance of caution (and because no one has produced a\n * definitive proof indicating that this is not helpful), this library exposes\n * the ability to randomize the context like the C library. Depending on the\n * intended application, consumers can decide whether or not to randomize.\n *\n * @param webassemblyBytes an ArrayBuffer containing the bytes from bitcoin-ts'\n * `secp256k1.wasm` binary. Providing this buffer manually may be faster than\n * the internal base64 decode which happens in `instantiateSecp256k1`.\n * @param randomSeed a 32-byte random seed used to randomize the secp256k1\n * context after creation. See above for details.\n */\nexport const instantiateSecp256k1Bytes = async (webassemblyBytes, randomSeed) => wrapSecp256k1Wasm(await instantiateSecp256k1WasmBytes(webassemblyBytes), randomSeed);\n/**\n * Create and wrap a Secp256k1 WebAssembly instance to expose a set of\n * purely-functional Secp256k1 methods. For slightly faster initialization, use\n * `instantiateSecp256k1Bytes`.\n *\n * TODO: cache resulting instance to return in all future calls\n *\n * @param randomSeed a 32-byte random seed used to randomize the secp256k1\n * context after creation. See the description in `instantiateSecp256k1Bytes`\n * for details.\n */\nexport const instantiateSecp256k1 = async (randomSeed) => wrapSecp256k1Wasm(await instantiateSecp256k1Wasm(), randomSeed);\n//# sourceMappingURL=data:application/json;base64,","import { instantiateRustWasm, sha1Base64Bytes } from '../bin/bin';\nimport { base64ToBin } from '../utils/utils';\n/**\n * The most performant way to instantiate sha1 functionality. To avoid\n * using Node.js or DOM-specific APIs, you can use `instantiateSha1`.\n *\n * @param webassemblyBytes A buffer containing the sha1 binary.\n */\nexport const instantiateSha1Bytes = async (webassemblyBytes) => {\n    const wasm = await instantiateRustWasm(webassemblyBytes, './sha1', 'sha1', 'sha1_init', 'sha1_update', 'sha1_final');\n    return {\n        final: wasm.final,\n        hash: wasm.hash,\n        init: wasm.init,\n        update: wasm.update\n    };\n};\nexport const getEmbeddedSha1Binary = () => base64ToBin(sha1Base64Bytes).buffer;\n/**\n * An ultimately-portable (but slower) version of `instantiateSha1Bytes`\n * which does not require the consumer to provide the sha1 binary buffer.\n */\nexport const instantiateSha1 = async () => instantiateSha1Bytes(getEmbeddedSha1Binary());\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2hhMS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9saWIvY3J5cHRvL3NoYTEudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFnQixtQkFBbUIsRUFBRSxlQUFlLEVBQUUsTUFBTSxZQUFZLENBQUM7QUFDaEYsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBcUQ3Qzs7Ozs7R0FLRztBQUNILE1BQU0sQ0FBQyxNQUFNLG9CQUFvQixHQUFHLEtBQUssRUFDdkMsZ0JBQTZCLEVBQ2QsRUFBRTtJQUNqQixNQUFNLElBQUksR0FBRyxNQUFNLG1CQUFtQixDQUNwQyxnQkFBZ0IsRUFDaEIsUUFBUSxFQUNSLE1BQU0sRUFDTixXQUFXLEVBQ1gsYUFBYSxFQUNiLFlBQVksQ0FDYixDQUFDO0lBQ0YsT0FBTztRQUNMLEtBQUssRUFBRSxJQUFJLENBQUMsS0FBSztRQUNqQixJQUFJLEVBQUUsSUFBSSxDQUFDLElBQUk7UUFDZixJQUFJLEVBQUUsSUFBSSxDQUFDLElBQUk7UUFDZixNQUFNLEVBQUUsSUFBSSxDQUFDLE1BQU07S0FDcEIsQ0FBQztBQUNKLENBQUMsQ0FBQztBQUVGLE1BQU0sQ0FBQyxNQUFNLHFCQUFxQixHQUFHLEdBQWdCLEVBQUUsQ0FDckQsV0FBVyxDQUFDLGVBQWUsQ0FBQyxDQUFDLE1BQU0sQ0FBQztBQUV0Qzs7O0dBR0c7QUFDSCxNQUFNLENBQUMsTUFBTSxlQUFlLEdBQUcsS0FBSyxJQUFtQixFQUFFLENBQ3ZELG9CQUFvQixDQUFDLHFCQUFxQixFQUFFLENBQUMsQ0FBQyJ9","import { instantiateRustWasm, sha256Base64Bytes } from '../bin/bin';\nimport { base64ToBin } from '../utils/utils';\n/**\n * The most performant way to instantiate sha256 functionality. To avoid\n * using Node.js or DOM-specific APIs, you can use `instantiateSha256`.\n *\n * @param webassemblyBytes A buffer containing the sha256 binary.\n */\nexport const instantiateSha256Bytes = async (webassemblyBytes) => {\n    const wasm = await instantiateRustWasm(webassemblyBytes, './sha256', 'sha256', 'sha256_init', 'sha256_update', 'sha256_final');\n    return {\n        final: wasm.final,\n        hash: wasm.hash,\n        init: wasm.init,\n        update: wasm.update\n    };\n};\nexport const getEmbeddedSha256Binary = () => base64ToBin(sha256Base64Bytes).buffer;\n/**\n * An ultimately-portable (but possibly slower) version of\n * `instantiateSha256Bytes` which does not require the consumer to provide the\n * sha256 binary buffer.\n *\n * TODO: cache resulting instance to return in all future calls\n */\nexport const instantiateSha256 = async () => instantiateSha256Bytes(getEmbeddedSha256Binary());\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2hhMjU2LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL2xpYi9jcnlwdG8vc2hhMjU2LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFFTCxtQkFBbUIsRUFDbkIsaUJBQWlCLEVBQ2xCLE1BQU0sWUFBWSxDQUFDO0FBQ3BCLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQXFEN0M7Ozs7O0dBS0c7QUFDSCxNQUFNLENBQUMsTUFBTSxzQkFBc0IsR0FBRyxLQUFLLEVBQ3pDLGdCQUE2QixFQUNaLEVBQUU7SUFDbkIsTUFBTSxJQUFJLEdBQUcsTUFBTSxtQkFBbUIsQ0FDcEMsZ0JBQWdCLEVBQ2hCLFVBQVUsRUFDVixRQUFRLEVBQ1IsYUFBYSxFQUNiLGVBQWUsRUFDZixjQUFjLENBQ2YsQ0FBQztJQUNGLE9BQU87UUFDTCxLQUFLLEVBQUUsSUFBSSxDQUFDLEtBQUs7UUFDakIsSUFBSSxFQUFFLElBQUksQ0FBQyxJQUFJO1FBQ2YsSUFBSSxFQUFFLElBQUksQ0FBQyxJQUFJO1FBQ2YsTUFBTSxFQUFFLElBQUksQ0FBQyxNQUFNO0tBQ3BCLENBQUM7QUFDSixDQUFDLENBQUM7QUFFRixNQUFNLENBQUMsTUFBTSx1QkFBdUIsR0FBRyxHQUFHLEVBQUUsQ0FDMUMsV0FBVyxDQUFDLGlCQUFpQixDQUFDLENBQUMsTUFBTSxDQUFDO0FBRXhDOzs7Ozs7R0FNRztBQUNILE1BQU0sQ0FBQyxNQUFNLGlCQUFpQixHQUFHLEtBQUssSUFBcUIsRUFBRSxDQUMzRCxzQkFBc0IsQ0FBQyx1QkFBdUIsRUFBRSxDQUFDLENBQUMifQ==","import { instantiateRustWasm, sha512Base64Bytes } from '../bin/bin';\nimport { base64ToBin } from '../utils/utils';\n/**\n * The most performant way to instantiate sha512 functionality. To avoid\n * using Node.js or DOM-specific APIs, you can use `instantiateSha512`.\n *\n * @param webassemblyBytes A buffer containing the sha512 binary.\n */\nexport const instantiateSha512Bytes = async (webassemblyBytes) => {\n    const wasm = await instantiateRustWasm(webassemblyBytes, './sha512', 'sha512', 'sha512_init', 'sha512_update', 'sha512_final');\n    return {\n        final: wasm.final,\n        hash: wasm.hash,\n        init: wasm.init,\n        update: wasm.update\n    };\n};\nexport const getEmbeddedSha512Binary = () => base64ToBin(sha512Base64Bytes).buffer;\n/**\n * An ultimately-portable (but slower) version of `instantiateSha512Bytes`\n * which does not require the consumer to provide the sha512 binary buffer.\n */\nexport const instantiateSha512 = async () => instantiateSha512Bytes(getEmbeddedSha512Binary());\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2hhNTEyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL2xpYi9jcnlwdG8vc2hhNTEyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFFTCxtQkFBbUIsRUFDbkIsaUJBQWlCLEVBQ2xCLE1BQU0sWUFBWSxDQUFDO0FBQ3BCLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQXFEN0M7Ozs7O0dBS0c7QUFDSCxNQUFNLENBQUMsTUFBTSxzQkFBc0IsR0FBRyxLQUFLLEVBQ3pDLGdCQUE2QixFQUNaLEVBQUU7SUFDbkIsTUFBTSxJQUFJLEdBQUcsTUFBTSxtQkFBbUIsQ0FDcEMsZ0JBQWdCLEVBQ2hCLFVBQVUsRUFDVixRQUFRLEVBQ1IsYUFBYSxFQUNiLGVBQWUsRUFDZixjQUFjLENBQ2YsQ0FBQztJQUNGLE9BQU87UUFDTCxLQUFLLEVBQUUsSUFBSSxDQUFDLEtBQUs7UUFDakIsSUFBSSxFQUFFLElBQUksQ0FBQyxJQUFJO1FBQ2YsSUFBSSxFQUFFLElBQUksQ0FBQyxJQUFJO1FBQ2YsTUFBTSxFQUFFLElBQUksQ0FBQyxNQUFNO0tBQ3BCLENBQUM7QUFDSixDQUFDLENBQUM7QUFFRixNQUFNLENBQUMsTUFBTSx1QkFBdUIsR0FBRyxHQUFHLEVBQUUsQ0FDMUMsV0FBVyxDQUFDLGlCQUFpQixDQUFDLENBQUMsTUFBTSxDQUFDO0FBRXhDOzs7R0FHRztBQUNILE1BQU0sQ0FBQyxNQUFNLGlCQUFpQixHQUFHLEtBQUssSUFBcUIsRUFBRSxDQUMzRCxzQkFBc0IsQ0FBQyx1QkFBdUIsRUFBRSxDQUFDLENBQUMifQ==","export * from './bin/bin';\nexport * from './crypto/crypto';\nexport * from './auth/auth';\nexport * from './transaction';\nexport * from './utils/utils';\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGliLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL2xpYi9saWIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsY0FBYyxXQUFXLENBQUM7QUFDMUIsY0FBYyxpQkFBaUIsQ0FBQztBQUNoQyxjQUFjLGFBQWEsQ0FBQztBQUM1QixjQUFjLGVBQWUsQ0FBQztBQUM5QixjQUFjLGVBQWUsQ0FBQyJ9","import { bigIntToBinUint64LE, bigIntToBitcoinVarInt, binToBigIntUint64LE, binToHex, binToNumberUint32LE, flattenBinArray, numberToBinUint32LE, readBitcoinVarInt } from './utils/utils';\n/**\n * @param bin the raw transaction from which to read the input\n * @param offset the offset at which the input begins\n */\nexport const readTransactionInput = (bin, offset) => {\n    const offsetAfterTxHash = offset + 32 /* sha256Hash */;\n    const outpointTransactionHash = bin\n        .slice(offset, offsetAfterTxHash)\n        .reverse();\n    const offsetAfterOutpointIndex = offsetAfterTxHash + 4 /* uint32 */;\n    const outpointIndex = binToNumberUint32LE(bin.subarray(offsetAfterTxHash, offsetAfterOutpointIndex));\n    const { nextOffset: offsetAfterScriptLength, value: scriptLength } = readBitcoinVarInt(bin, offsetAfterOutpointIndex);\n    const offsetAfterScript = offsetAfterScriptLength + Number(scriptLength);\n    const unlockingBytecode = bin.slice(offsetAfterScriptLength, offsetAfterScript);\n    const nextOffset = offsetAfterScript + 4 /* uint32 */;\n    const sequenceNumber = binToNumberUint32LE(bin.subarray(offsetAfterScript, nextOffset));\n    return {\n        input: {\n            outpointIndex,\n            outpointTransactionHash,\n            sequenceNumber,\n            unlockingBytecode\n        },\n        nextOffset\n    };\n};\n/**\n * Serialize a single input.\n * @param output the input to serialize\n */\nexport const serializeInput = (input) => flattenBinArray([\n    input.outpointTransactionHash.slice().reverse(),\n    numberToBinUint32LE(input.outpointIndex),\n    bigIntToBitcoinVarInt(BigInt(input.unlockingBytecode.length)),\n    input.unlockingBytecode,\n    numberToBinUint32LE(input.sequenceNumber)\n]);\n/**\n * Serialize a set of inputs for inclusion in a serialized transaction.\n *\n * Format: <BitcoinVarInt: input count> <serialized inputs>\n *\n * @param inputs the set of inputs to serialize\n */\nexport const serializeInputs = (inputs) => flattenBinArray([\n    bigIntToBitcoinVarInt(BigInt(inputs.length)),\n    ...inputs.map(serializeInput)\n]);\n/**\n * @param bin the raw transaction from which to read the output\n * @param offset the offset at which the output begins\n */\nexport const readTransactionOutput = (bin, offset) => {\n    const offsetAfterSatoshis = offset + 8 /* uint64 */;\n    const satoshis = binToBigIntUint64LE(bin.subarray(offset, offsetAfterSatoshis));\n    const { nextOffset: offsetAfterScriptLength, value } = readBitcoinVarInt(bin, offsetAfterSatoshis);\n    const scriptLength = Number(value);\n    const nextOffset = offsetAfterScriptLength + scriptLength;\n    const lockingBytecode = scriptLength === 0\n        ? new Uint8Array()\n        : bin.slice(offsetAfterScriptLength, nextOffset);\n    return {\n        nextOffset,\n        output: {\n            lockingBytecode,\n            satoshis\n        }\n    };\n};\n/**\n * Serialize a single output.\n * @param output the output to serialize\n */\nexport const serializeOutput = (output) => flattenBinArray([\n    bigIntToBinUint64LE(BigInt(output.satoshis)),\n    bigIntToBitcoinVarInt(BigInt(output.lockingBytecode.length)),\n    output.lockingBytecode\n]);\n/**\n * Serialize a set of outputs for inclusion in a serialized transaction.\n *\n * Format: <BitcoinVarInt: output count> <serialized outputs>\n *\n * @param outputs the set of outputs to serialize\n */\nexport const serializeOutputs = (outputs) => flattenBinArray([\n    bigIntToBitcoinVarInt(BigInt(outputs.length)),\n    ...outputs.map(serializeOutput)\n]);\n/**\n * TODO: document return type (note outpointTransactionHash is little-endian – most UIs display big-endian transaction hashes)\n *\n * Note: this method throws runtime errors when attempting to decode improperly\n * encoded transactions.\n *\n * @param bin the raw transaction to decode\n */\nexport const deserializeTransaction = (bin) => {\n    const version = binToNumberUint32LE(bin.subarray(0, 4 /* uint32 */));\n    const offsetAfterVersion = 4 /* uint32 */;\n    const { nextOffset: offsetAfterInputCount, value: inputCount } = readBitcoinVarInt(bin, offsetAfterVersion);\n    // tslint:disable-next-line:no-let prefer-const\n    let cursor = offsetAfterInputCount;\n    // tslint:disable-next-line:no-let prefer-const\n    let inputs = [];\n    // tslint:disable-next-line:no-let\n    for (let i = 0; i < Number(inputCount); i++) {\n        const { input, nextOffset } = readTransactionInput(bin, cursor);\n        // tslint:disable-next-line:no-expression-statement\n        cursor = nextOffset;\n        // tslint:disable-next-line:no-expression-statement\n        inputs.push(input);\n    }\n    const { nextOffset: offsetAfterOutputCount, value: outputCount } = readBitcoinVarInt(bin, cursor);\n    // tslint:disable-next-line:no-expression-statement\n    cursor = offsetAfterOutputCount;\n    // tslint:disable-next-line:no-let prefer-const\n    let outputs = [];\n    // tslint:disable-next-line:no-let\n    for (let i = 0; i < Number(outputCount); i++) {\n        const { output, nextOffset } = readTransactionOutput(bin, cursor);\n        // tslint:disable-next-line:no-expression-statement\n        cursor = nextOffset;\n        // tslint:disable-next-line:no-expression-statement\n        outputs.push(output);\n    }\n    const locktime = binToNumberUint32LE(bin.subarray(cursor, cursor + 4 /* uint32 */));\n    return {\n        inputs,\n        locktime,\n        outputs,\n        version\n    };\n};\n/**\n * TODO: doc\n */\nexport const serializeTransaction = (tx) => flattenBinArray([\n    numberToBinUint32LE(tx.version),\n    serializeInputs(tx.inputs),\n    serializeOutputs(tx.outputs),\n    numberToBinUint32LE(tx.locktime)\n]);\n/**\n * Derive a standard identifier from a serialized data structure.\n *\n * @remarks\n * By convention, Bitcoin transaction and block identifiers are derived by\n * double-sha256 hashing their serialized form, and reversing the byte order.\n * (The result of sha256 is defined by its specification as big-endian, and\n * bitcoin displays hashes in little-endian format.)\n *\n * @returns an identifier in little-endian byte order\n *\n * @param data the serialized raw data being identified\n * @param sha256 an implementation of sha256\n */\nexport const getBitcoinIdentifier = (data, sha256) => sha256.hash(sha256.hash(data)).reverse();\n/**\n * Derive a standard transaction identifier from a serialized transaction.\n *\n * @returns a Transaction ID in little-endian byte order\n *\n * @param transaction the serialized transaction\n * @param sha256 an implementation of sha256\n */\nexport const getBitcoinTransactionId = (transaction, sha256) => binToHex(getBitcoinIdentifier(transaction, sha256));\n/**\n * Get the hash of a output. (For use in `hashCorrespondingOutput`.)\n * @param output the output to hash\n * @param sha256 an implementation of sha256\n */\nexport const getOutputHash = (output, sha256) => sha256.hash(sha256.hash(serializeOutput(output)));\n/**\n * Get the hash of all outpoints in a series of inputs. (For use in\n * `hashTransactionOutpoints`.)\n *\n * @param inputs the series of inputs from which to extract the outpoints\n * @param sha256 an implementation of sha256\n */\nexport const getOutpointsHash = (inputs, sha256) => sha256.hash(sha256.hash(flattenBinArray(inputs.map(i => flattenBinArray([\n    i.outpointTransactionHash.slice().reverse(),\n    numberToBinUint32LE(i.outpointIndex)\n])))));\n/**\n * Get the hash of a series of outputs. (Primarily for use in\n * `hashTransactionOutputs`)\n * @param outputs the series of outputs to serialize and hash\n * @param sha256 an implementation of sha256\n */\nexport const getOutputsHash = (outputs, sha256) => sha256.hash(sha256.hash(flattenBinArray(outputs.map(serializeOutput))));\n/**\n * Get the hash of a series of input sequence numbers. (Primarily for use in\n * `hashTransactionSequenceNumbers`)\n *\n * @param inputs the series of inputs from which to extract the sequence numbers\n * @param sha256 an implementation of sha256\n */\nexport const getSequenceNumbersHash = (inputs, sha256) => sha256.hash(sha256.hash(flattenBinArray(inputs.map(i => numberToBinUint32LE(i.sequenceNumber)))));\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHJhbnNhY3Rpb24uanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvbGliL3RyYW5zYWN0aW9uLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBLE9BQU8sRUFDTCxtQkFBbUIsRUFDbkIscUJBQXFCLEVBQ3JCLG1CQUFtQixFQUNuQixRQUFRLEVBQ1IsbUJBQW1CLEVBQ25CLGVBQWUsRUFDZixtQkFBbUIsRUFDbkIsaUJBQWlCLEVBQ2xCLE1BQU0sZUFBZSxDQUFDO0FBOEV2Qjs7O0dBR0c7QUFDSCxNQUFNLENBQUMsTUFBTSxvQkFBb0IsR0FBRyxDQUFDLEdBQWUsRUFBRSxNQUFjLEVBQUUsRUFBRTtJQUN0RSxNQUFNLGlCQUFpQixHQUFHLE1BQU0sc0JBQXdCLENBQUM7SUFDekQsTUFBTSx1QkFBdUIsR0FBRyxHQUFHO1NBQ2hDLEtBQUssQ0FBQyxNQUFNLEVBQUUsaUJBQWlCLENBQUM7U0FDaEMsT0FBTyxFQUFFLENBQUM7SUFDYixNQUFNLHdCQUF3QixHQUFHLGlCQUFpQixpQkFBb0IsQ0FBQztJQUN2RSxNQUFNLGFBQWEsR0FBRyxtQkFBbUIsQ0FDdkMsR0FBRyxDQUFDLFFBQVEsQ0FBQyxpQkFBaUIsRUFBRSx3QkFBd0IsQ0FBQyxDQUMxRCxDQUFDO0lBQ0YsTUFBTSxFQUNKLFVBQVUsRUFBRSx1QkFBdUIsRUFDbkMsS0FBSyxFQUFFLFlBQVksRUFDcEIsR0FBRyxpQkFBaUIsQ0FBQyxHQUFHLEVBQUUsd0JBQXdCLENBQUMsQ0FBQztJQUNyRCxNQUFNLGlCQUFpQixHQUFHLHVCQUF1QixHQUFHLE1BQU0sQ0FBQyxZQUFZLENBQUMsQ0FBQztJQUN6RSxNQUFNLGlCQUFpQixHQUFHLEdBQUcsQ0FBQyxLQUFLLENBQ2pDLHVCQUF1QixFQUN2QixpQkFBaUIsQ0FDbEIsQ0FBQztJQUNGLE1BQU0sVUFBVSxHQUFHLGlCQUFpQixpQkFBb0IsQ0FBQztJQUN6RCxNQUFNLGNBQWMsR0FBRyxtQkFBbUIsQ0FDeEMsR0FBRyxD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","// base64 encode/decode derived from: https://github.com/niklasvh/base64-arraybuffer\nconst chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\nexport const base64ToBin = (base64Text) => {\n    // tslint:disable:no-magic-numbers\n    const lookup = new Uint8Array(123);\n    // tslint:disable-next-line:no-let\n    for (let i = 0; i < chars.length; i++) {\n        // tslint:disable-next-line:no-object-mutation no-expression-statement\n        lookup[chars.charCodeAt(i)] = i;\n    }\n    const bufferLengthEstimate = base64Text.length * 0.75;\n    const stringLength = base64Text.length;\n    const bufferLength = base64Text[base64Text.length - 1] === '='\n        ? base64Text[base64Text.length - 2] === '='\n            ? bufferLengthEstimate - 2\n            : bufferLengthEstimate - 1\n        : bufferLengthEstimate;\n    const buffer = new ArrayBuffer(bufferLength);\n    const bytes = new Uint8Array(buffer);\n    // tslint:disable-next-line:no-let\n    let p = 0;\n    // tslint:disable-next-line:no-let\n    for (let i = 0; i < stringLength; i += 4) {\n        const encoded1 = lookup[base64Text.charCodeAt(i)];\n        const encoded2 = lookup[base64Text.charCodeAt(i + 1)];\n        const encoded3 = lookup[base64Text.charCodeAt(i + 2)];\n        const encoded4 = lookup[base64Text.charCodeAt(i + 3)];\n        // tslint:disable:no-bitwise no-expression-statement no-object-mutation\n        bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n        bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n        bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n        // tslint:enable:no-bitwise no-expression-statement no-object-mutation no-magic-numbers\n    }\n    return bytes;\n};\n// tslint:disable:no-magic-numbers no-bitwise no-expression-statement\nexport const binToBase64 = (bytes) => {\n    let result = ''; // tslint:disable-line: no-let\n    // tslint:disable-next-line: no-let\n    for (let i = 0; i < bytes.length; i += 3) {\n        result += chars[bytes[i] >> 2];\n        result += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n        result += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n        result += chars[bytes[i + 2] & 63];\n    }\n    // tslint:enable:no-bitwise no-expression-statement\n    const padded = bytes.length % 3 === 2\n        ? `${result.substring(0, result.length - 1)}=`\n        : bytes.length % 3 === 1\n            ? `${result.substring(0, result.length - 2)}==`\n            : result;\n    // tslint:enable: no-magic-numbers\n    return padded;\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmFzZTY0LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL2xpYi91dGlscy9iYXNlNjQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsb0ZBQW9GO0FBRXBGLE1BQU0sS0FBSyxHQUNULGtFQUFrRSxDQUFDO0FBRXJFLE1BQU0sQ0FBQyxNQUFNLFdBQVcsR0FBRyxDQUFDLFVBQWtCLEVBQUUsRUFBRTtJQUNoRCxrQ0FBa0M7SUFDbEMsTUFBTSxNQUFNLEdBQUcsSUFBSSxVQUFVLENBQUMsR0FBRyxDQUFDLENBQUM7SUFDbkMsa0NBQWtDO0lBQ2xDLEtBQUssSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxLQUFLLENBQUMsTUFBTSxFQUFFLENBQUMsRUFBRSxFQUFFO1FBQ3JDLHNFQUFzRTtRQUN0RSxNQUFNLENBQUMsS0FBSyxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQztLQUNqQztJQUNELE1BQU0sb0JBQW9CLEdBQUcsVUFBVSxDQUFDLE1BQU0sR0FBRyxJQUFJLENBQUM7SUFDdEQsTUFBTSxZQUFZLEdBQUcsVUFBVSxDQUFDLE1BQU0sQ0FBQztJQUN2QyxNQUFNLFlBQVksR0FDaEIsVUFBVSxDQUFDLFVBQVUsQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFDLEtBQUssR0FBRztRQUN2QyxDQUFDLENBQUMsVUFBVSxDQUFDLFVBQVUsQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFDLEtBQUssR0FBRztZQUN6QyxDQUFDLENBQUMsb0JBQW9CLEdBQUcsQ0FBQztZQUMxQixDQUFDLENBQUMsb0JBQW9CLEdBQUcsQ0FBQztRQUM1QixDQUFDLENBQUMsb0JBQW9CLENBQUM7SUFDM0IsTUFBTSxNQUFNLEdBQUcsSUFBSSxXQUFXLENBQUMsWUFBWSxDQUFDLENBQUM7SUFDN0MsTUFBTSxLQUFLLEdBQUcsSUFBSSxVQUFVLENBQUMsTUFBTSxDQUFDLENBQUM7SUFDckMsa0NBQWtD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","/**\n * Returns an array of incrementing values starting at `begin` and incrementing by one for `length`.\n *\n * E.g.: `range(3)` => `[0, 1, 2]` and `range(3, 1)` => `[1, 2, 3]`\n *\n * @param length the number of elements in the array\n * @param begin the index at which the range starts (default: `0`)\n */\nexport const range = (length, begin = 0) => Array.from({ length }, (_, index) => begin + index);\n/**\n * Split a string into an array of `chunkLength` strings. The final string may have a length between 1 and `chunkLength`.\n *\n * E.g.: `splitEvery('abcde', 2)` => `['ab', 'cd', 'e']`\n */\nexport const splitEvery = (input, chunkLength) => range(Math.ceil(input.length / chunkLength))\n    .map(index => index * chunkLength)\n    .map(begin => input.slice(begin, begin + chunkLength));\nconst hexByteWidth = 2;\nconst hexadecimal = 16;\n/**\n * Decode a hexadecimal-encoded string into a Uint8Array.\n *\n * E.g.: `hexToBin('2a64ff')` => `new Uint8Array([42, 100, 255])`\n *\n * Note, this method always completes. If `wellFormedHex` is not divisible by 2,\n * the final byte will be parsed as if it were prepended with a `0` (e.g. `aaa`\n * is interpreted as `aa0a`). If `wellFormedHex` is potentially malformed, check\n * it with `isHex` before calling this method.\n *\n * @param wellFormedHex a string of valid, hexadecimal-encoded data\n */\nexport const hexToBin = (wellFormedHex) => new Uint8Array(splitEvery(wellFormedHex, hexByteWidth).map(byte => parseInt(byte, hexadecimal)));\nvar Hex;\n(function (Hex) {\n    Hex[Hex[\"byte\"] = 2] = \"byte\";\n})(Hex || (Hex = {}));\n/**\n * For use before `hexToBin`. Returns true if the provided string is divisible\n * by 2 and only uses hex characters.\n * @param maybeHex a string to test\n */\nexport const isHex = (maybeHex) => maybeHex.length % Hex.byte === 0 && !/[^a-fA-F0-9]/.test(maybeHex);\n/**\n * Encode a Uint8Array into a hexadecimal-encoded string.\n *\n * E.g.: `binToHex(new Uint8Array([42, 100, 255]))` => `'2a64ff'`\n *\n * @param bytes a Uint8Array to encode\n */\nexport const binToHex = (bytes) => bytes.reduce((str, byte) => str + byte.toString(hexadecimal).padStart(hexByteWidth, '0'), '');\n/**\n * Decode a hexadecimal-encoded string into bytes, reverse it, then re-encode.\n *\n * @param wellFormedHex a string of valid, hexadecimal-encoded data. See\n * `hexToBin` for more information.\n */\nexport const swapEndianness = (wellFormedHex) => binToHex(hexToBin(wellFormedHex).reverse());\n/**\n * Reduce an array of `Uint8Array`s into a single `Uint8Array`.\n * @param array the array of `Uint8Array`s to flatten\n */\nexport const flattenBinArray = (array) => {\n    const totalLength = array.reduce((total, bin) => total + bin.length, 0);\n    const flattened = new Uint8Array(totalLength);\n    // tslint:disable-next-line:no-expression-statement\n    array.reduce((index, bin) => {\n        // tslint:disable-next-line:no-expression-statement\n        flattened.set(bin, index);\n        return index + bin.length;\n    }, 0);\n    return flattened;\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGV4LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL2xpYi91dGlscy9oZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7R0FPRztBQUNILE1BQU0sQ0FBQyxNQUFNLEtBQUssR0FBRyxDQUFDLE1BQWMsRUFBRSxRQUFnQixDQUFDLEVBQUUsRUFBRSxDQUN6RCxLQUFLLENBQUMsSUFBSSxDQUFDLEVBQUUsTUFBTSxFQUFFLEVBQUUsQ0FBQyxDQUFDLEVBQUUsS0FBSyxFQUFFLEVBQUUsQ0FBQyxLQUFLLEdBQUcsS0FBSyxDQUFDLENBQUM7QUFFdEQ7Ozs7R0FJRztBQUNILE1BQU0sQ0FBQyxNQUFNLFVBQVUsR0FBRyxDQUFDLEtBQWEsRUFBRSxXQUFtQixFQUFFLEVBQUUsQ0FDL0QsS0FBSyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLE1BQU0sR0FBRyxXQUFXLENBQUMsQ0FBQztLQUN6QyxHQUFHLENBQUMsS0FBSyxDQUFDLEVBQUUsQ0FBQyxLQUFLLEdBQUcsV0FBVyxDQUFDO0tBQ2pDLEdBQUcsQ0FBQyxLQUFLLENBQUMsRUFBRSxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsS0FBSyxFQUFFLEtBQUssR0FBRyxXQUFXLENBQUMsQ0FBQyxDQUFDO0FBRTNELE1BQU0sWUFBWSxHQUFHLENBQUMsQ0FBQztBQUN2QixNQUFNLFdBQVcsR0FBRyxFQUFFLENBQUM7QUFFdkI7Ozs7Ozs7Ozs7O0dBV0c7QUFDSCxNQUFNLENBQUMsTUFBTSxRQUFRLEdBQUcsQ0FBQyxhQUFxQixFQUFFLEVBQUUsQ0FDaEQsSUFBSSxVQUFVLENBQ1osVUFBVSxDQUFDLGFBQWEsRUFBRSxZQUFZLENBQUMsQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FDakQsUUFBUSxDQUFDLElBQUksRUFBRSxXQUFXLENBQUMsQ0FDNUIsQ0FDRixDQUFDO0FBRUosSUFBSyxHQUVKO0FBRkQsV0FBSyxHQUFHO0lBQ04sNkJBQVEsQ0FBQTtBQUNWLENBQUMsRUFGSSxHQUFHLEtBQUgsR0FBRyxRQUVQO0FBRUQ7Ozs7R0FJRztBQUNILE1BQU0sQ0FBQyxNQUFNLEtBQUssR0FBRyxDQUFDLFFBQWdCLEVBQUUsRUFBRSxDQUN4QyxRQUFRLENBQUMsTUFBTSxHQUFHLEdBQUcsQ0FBQyxJQUFJLEtBQUssQ0FBQyxJQUFJLENBQUMsY0FBYyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztBQUVyRTs7Ozs7O0dBTUc7QUFDSCxNQUFNLENBQUMsTUFBTSxRQUFRLEdBQUcsQ0FBQyxLQUFpQixFQUFFLEVBQUUsQ0FDNUMsS0FBSyxDQUFDLE1BQU0sQ0FDVixDQUFDLEdBQUcsRUFBRSxJQUFJLEVBQUUsRUFBRSxDQUFDLEdBQUcsR0FBRyxJQUFJLENBQUMsUUFBUSxDQUFDLFdBQVcsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxZQUFZLEVBQUUsR0FBRyxDQUFDLEVBQzNFLEVBQUUsQ0FDSCxDQUFDO0FBRUo7Ozs7O0dBS0c7QUFDSCxNQUFNLENBQUMsTUFBTSxjQUFjLEdBQUcsQ0FBQyxhQUFxQixFQUFFLEVBQUUsQ0FDdEQsUUFBUSxDQUFDLFFBQVEsQ0FBQyxhQUFhLENBQUMsQ0FBQyxPQUFPLEVBQUUsQ0FBQyxDQUFDO0FBRTlDOzs7R0FHRztBQUNILE1BQU0sQ0FBQyxNQUFNLGVBQWUsR0FBRyxDQUFDLEtBQWdDLEVBQUUsRUFBRTtJQUNsRSxNQUFNLFdBQVcsR0FBRyxLQUFLLENBQUMsTUFBTSxDQUFDLENBQUMsS0FBSyxFQUFFLEdBQUcsRUFBRSxFQUFFLENBQUMsS0FBSyxHQUFHLEdBQUcsQ0FBQyxNQUFNLEVBQUUsQ0FBQyxDQUFDLENBQUM7SUFDeEUsTUFBTSxTQUFTLEdBQUcsSUFBSSxVQUFVLENBQUMsV0FBVyxDQUFDLENBQUM7SUFDOUMsbURBQW1EO0lBQ25ELEtBQUssQ0FBQyxNQUFNLENBQUMsQ0FBQyxLQUFLLEVBQUUsR0FBRyxFQUFFLEVBQUU7UUFDMUIsbURBQW1EO1FBQ25ELFNBQVMsQ0FBQyxHQUFHLENBQUMsR0FBRyxFQUFFLEtBQUssQ0FBQyxDQUFDO1FBQzFCLE9BQU8sS0FBSyxHQUFHLEdBQUcsQ0FBQyxNQUFNLENBQUM7SUFDNUIsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO0lBQ04sT0FBTyxTQUFTLENBQUM7QUFDbkIsQ0FBQyxDQUFDIn0=","import { binToHex } from './hex';\n/**\n * A safe method to `JSON.stringify` a value, useful for debugging and logging\n * purposes.\n *\n * @remarks\n * Without modifications, `JSON.stringify` has several shortcomings in\n * debugging and logging usage:\n * - throws when serializing anything containing a `bigint`\n * - `Uint8Array`s are often serialized in base 10 with newlines between each\n *   index item\n * - `functions` and `symbols` are not clearly marked\n *\n * This method is more helpful in these cases:\n * - `bigint`: `0n` => `<bigint: 0n>`\n * - `Uint8Array`: `Uint8Array.of(0,0)` => `<Uint8Array: 0x0000>`\n * - `function`: `(x) => x * 2` => `<function: (x) => x * 2>`\n * - `symbol`: `Symbol(A)` => `<symbol: Symbol(A)>`\n *\n * @param value the data to serialize\n * @param spacing the number of spaces to use in\n */\n// tslint:disable-next-line: no-any\nexport const stringify = (value, spacing = 2) => JSON.stringify(value, \n// tslint:disable-next-line:cyclomatic-complexity\n(_, item) => {\n    const type = typeof item;\n    const name = \n    // tslint:disable-next-line: no-unsafe-any\n    type === 'object' ? item.constructor && item.constructor.name : type;\n    switch (name) {\n        case 'Uint8Array':\n            return `<Uint8Array: 0x${binToHex(item)}>`;\n        case 'bigint':\n            return `<bigint: ${item.toString()}n>`;\n        case 'function':\n        case 'symbol':\n            // tslint:disable-next-line: ban-types\n            return `<${name}: ${item.toString()}>`;\n        default:\n            return item;\n    }\n}, spacing);\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibG9nLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL2xpYi91dGlscy9sb2cudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLE9BQU8sQ0FBQztBQUVqQzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7R0FvQkc7QUFDSCxtQ0FBbUM7QUFDbkMsTUFBTSxDQUFDLE1BQU0sU0FBUyxHQUFHLENBQUMsS0FBVSxFQUFFLE9BQU8sR0FBRyxDQUFDLEVBQUUsRUFBRSxDQUNuRCxJQUFJLENBQUMsU0FBUyxDQUNaLEtBQUs7QUFDTCxpREFBaUQ7QUFDakQsQ0FBQyxDQUFDLEVBQUUsSUFBSSxFQUFFLEVBQUU7SUFDVixNQUFNLElBQUksR0FBRyxPQUFPLElBQUksQ0FBQztJQUN6QixNQUFNLElBQUk7SUFDUiwwQ0FBMEM7SUFDMUMsSUFBSSxLQUFLLFFBQVEsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLFdBQVcsSUFBSSxJQUFJLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDO0lBQ3ZFLFFBQVEsSUFBSSxFQUFFO1FBQ1osS0FBSyxZQUFZO1lBQ2YsT0FBTyxrQkFBa0IsUUFBUSxDQUFDLElBQWtCLENBQUMsR0FBRyxDQUFDO1FBQzNELEtBQUssUUFBUTtZQUNYLE9BQU8sWUFBYSxJQUFlLENBQUMsUUFBUSxFQUFFLElBQUksQ0FBQztRQUNyRCxLQUFLLFVBQVUsQ0FBQztRQUNoQixLQUFLLFFBQVE7WUFDWCxzQ0FBc0M7WUFDdEMsT0FBTyxJQUFJLElBQUksS0FBTSxJQUEwQixDQUFDLFFBQVEsRUFBRSxHQUFHLENBQUM7UUFFaEU7WUFDRSxPQUFPLElBQUksQ0FBQztLQUNmO0FBQ0gsQ0FBQyxFQUNELE9BQU8sQ0FDUixDQUFDIn0=","/**\n * Encode a number as a little-endian Uint8Array.\n *\n * Note: For valid results, value must be within the range representable by the\n * specified number of bytes. For values exceeding Number.MAX_SAFE_INTEGER, use\n * `bigIntToBinUintLE`.\n *\n * @param value the number to convert into a Uint32LE Uint8Array\n * @param bytes the number of bytes to read\n */\nexport const numberToBinUintLE = (value, bytes) => {\n    const bin = new Uint8Array(bytes);\n    // tslint:disable-next-line:no-let\n    for (let offset = 0; offset < bytes; offset++) {\n        // tslint:disable-next-line:no-object-mutation no-expression-statement\n        bin[offset] = value;\n        // tslint:disable-next-line:no-bitwise no-parameter-reassignment no-expression-statement\n        value = value >>> 8 /* bitsInAByte */;\n    }\n    return bin;\n};\n/**\n * Encode a number as a 2-byte Uint16LE Uint8Array.\n *\n * Note: For valid results, value must be between 0 and 0xffff.\n *\n * @param value the number to convert into a Uint16LE Uint8Array\n */\nexport const numberToBinUint16LE = (value) => numberToBinUintLE(value, 2 /* uint16 */);\n/**\n * Encode a number as a 4-byte Uint32LE Uint8Array.\n *\n * Note: For valid results, value must be between 0 and 0xffffffff.\n *\n * @param value the number to convert into a Uint32LE Uint8Array\n */\nexport const numberToBinUint32LE = (value) => numberToBinUintLE(value, 4 /* uint32 */);\n/**\n * Decode a little-endian Uint8Array into a number.\n *\n * @param bin the Uint8Array to decode\n * @param bytes the number of bytes to read\n */\nexport const binToNumberUintLE = (bin, bytes) => {\n    // tslint:disable-next-line:no-let\n    let value = 0;\n    // tslint:disable-next-line:no-let\n    for (let offset = 0; offset < bytes; offset++) {\n        // tslint:disable-next-line:no-bitwise no-expression-statement\n        value += bin[offset] * 2 /* base */ ** (8 /* bitsInAByte */ * offset);\n    }\n    return value;\n};\n/**\n * Decode a 2-byte Uint16LE Uint8Array into a number.\n *\n * @param bin the Uint8Array to decode\n */\nexport const binToNumberUint16LE = (bin) => binToNumberUintLE(bin, 2 /* uint16 */);\n/**\n * Decode a 4-byte Uint32LE Uint8Array into a number.\n *\n * @param bin the Uint8Array to decode\n */\nexport const binToNumberUint32LE = (bin) => binToNumberUintLE(bin, 4 /* uint32 */);\n/**\n * Return a BigInt as little-endian Uint8Array.\n *\n * Note: For valid results, value must be between 0 and 0xffff ffff ffff ffff.\n * @param value the number to convert into a little-endian Uint8Array\n * @param bytes the byte length of the Uint8Array to return\n */\nexport const bigIntToBinUintLE = (value, bytes) => {\n    const bin = new Uint8Array(bytes);\n    // tslint:disable-next-line:no-let\n    for (let offset = 0; offset < bytes; offset++) {\n        // tslint:disable-next-line:no-object-mutation no-expression-statement\n        bin[offset] = Number(value);\n        // tslint:disable-next-line:no-bitwise no-parameter-reassignment no-expression-statement\n        value = value >> BigInt(8 /* bitsInAByte */);\n    }\n    return bin;\n};\n/**\n * Return a BigInt as Uint64LE Uint8Array.\n *\n * Note: For valid results, value must be within the range representable by the\n * specified number of bytes.\n *\n * @param value the number to convert into a little-endian Uint8Array\n */\nexport const bigIntToBinUint64LE = (value) => bigIntToBinUintLE(value, 8 /* uint64 */);\n/**\n * Decode a little-endian Uint8Array into a BigInt.\n *\n * @param bin the Uint8Array to decode\n */\nexport const binToBigIntUintLE = (bin, bytes) => {\n    const base = 2;\n    const bitsInAByte = 8;\n    // tslint:disable-next-line:no-let\n    let value = BigInt(0);\n    // tslint:disable-next-line:no-let\n    for (let offset = 0; offset < bytes; offset++) {\n        // tslint:disable-next-line:no-bitwise no-expression-statement\n        value += BigInt(bin[offset] * base ** (bitsInAByte * offset));\n    }\n    return value;\n};\n/**\n * Decode an 8-byte Uint64LE Uint8Array into a BigInt.\n *\n * @param bin the Uint8Array to decode\n */\nexport const binToBigIntUint64LE = (bin) => binToBigIntUintLE(bin, 8 /* uint64 */);\nconst varIntPrefixToSize = (firstByte) => {\n    switch (firstByte) {\n        default:\n            return 1 /* uint8 */;\n        case 253 /* Uint16Prefix */:\n            return 2 /* uint16 */;\n        case 254 /* Uint32Prefix */:\n            return 4 /* uint32 */;\n        case 255 /* Uint64Prefix */:\n            return 8 /* uint64 */;\n    }\n};\n/**\n * Read a Bitcoin VarInt (Variable-length integer) from a Uint8Array, returning\n * the `nextOffset` after the VarInt and the value as a BigInt.\n *\n * @param bin the Uint8Array from which to read the VarInt\n * @param offset the offset at which the input begins\n */\nexport const readBitcoinVarInt = (bin, offset) => {\n    const bytes = varIntPrefixToSize(bin[offset]);\n    return {\n        nextOffset: offset + bytes,\n        value: binToBigIntUintLE(bin.subarray(offset, offset + bytes), bytes)\n    };\n};\n/**\n * Encode a BigInt as a Bitcoin VarInt (Variable-length integer).\n *\n * Note: the maximum value of a Bitcoin VarInt is 0xffff ffff ffff ffff. This\n * method will produce invalid results for larger values.\n *\n * @param value the BigInt to encode (no larger than 0xffff ffff ffff ffff)\n */\nexport const bigIntToBitcoinVarInt = (value) => value <= BigInt(252 /* Uint8MaxValue */)\n    ? bigIntToBinUintLE(value, 1 /* uint8 */)\n    : value <= BigInt(65535 /* Uint16MaxValue */)\n        ? Uint8Array.from([\n            253 /* Uint16Prefix */,\n            ...bigIntToBinUintLE(value, 2 /* uint16 */)\n        ])\n        : value <= BigInt(4294967295 /* Uint32MaxValue */)\n            ? Uint8Array.from([\n                254 /* Uint32Prefix */,\n                ...bigIntToBinUintLE(value, 4 /* uint32 */)\n            ])\n            : Uint8Array.from([\n                255 /* Uint64Prefix */,\n                ...bigIntToBinUintLE(value, 8 /* uint64 */)\n            ]);\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibnVtYmVycy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9saWIvdXRpbHMvbnVtYmVycy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFZQTs7Ozs7Ozs7O0dBU0c7QUFDSCxNQUFNLENBQUMsTUFBTSxpQkFBaUIsR0FBRyxDQUFDLEtBQWEsRUFBRSxLQUFhLEVBQUUsRUFBRTtJQUNoRSxNQUFNLEdBQUcsR0FBRyxJQUFJLFVBQVUsQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUNsQyxrQ0FBa0M7SUFDbEMsS0FBSyxJQUFJLE1BQU0sR0FBRyxDQUFDLEVBQUUsTUFBTSxHQUFHLEtBQUssRUFBRSxNQUFNLEVBQUUsRUFBRTtRQUM3QyxzRUFBc0U7UUFDdEUsR0FBRyxDQUFDLE1BQU0sQ0FBQyxHQUFHLEtBQUssQ0FBQztRQUNwQix3RkFBd0Y7UUFDeEYsS0FBSyxHQUFHLEtBQUssd0JBQTJCLENBQUM7S0FDMUM7SUFDRCxPQUFPLEdBQUcsQ0FBQztBQUNiLENBQUMsQ0FBQztBQUVGOzs7Ozs7R0FNRztBQUNILE1BQU0sQ0FBQyxNQUFNLG1CQUFtQixHQUFHLENBQUMsS0FBYSxFQUFFLEVBQUUsQ0FDbkQsaUJBQWlCLENBQUMsS0FBSyxpQkFBb0IsQ0FBQztBQUU5Qzs7Ozs7O0dBTUc7QUFDSCxNQUFNLENBQUMsTUFBTSxtQkFBbUIsR0FBRyxDQUFDLEtBQWEsRUFBRSxFQUFFLENBQ25ELGlCQUFpQixDQUFDLEtBQUssaUJBQW9CLENBQUM7QUFFOUM7Ozs7O0dBS0c7QUFDSCxNQUFNLENBQUMsTUFBTSxpQkFBaUIsR0FBRyxDQUFDLEdBQWUsRUFBRSxLQUFhLEVBQUUsRUFBRTtJQUNsRSxrQ0FBa0M7SUFDbEMsSUFBSSxLQUFLLEdBQUcsQ0FBQyxDQUFDO0lBQ2Qsa0NBQWtDO0lBQ2xDLEtBQUssSUFBSSxNQUFNLEdBQUcsQ0FBQyxFQUFFLE1BQU0sR0FBRyxLQUFLLEVBQUUsTUFBTSxFQUFFLEVBQUU7UUFDN0MsOERBQThEO1FBQzlELEtBQUssSUFBSSxHQUFHLENBQUMsTUFBTSxDQUFDLEdBQUcsZ0JBQW1CLENBQUMsc0JBQXlCLE1BQU0sQ0FBQyxDQUFDO0tBQzdFO0lBQ0QsT0FBTyxLQUFLLENBQUM7QUFDZixDQUFDLENBQUM7QUFFRjs7OztHQUlHO0FBQ0gsTUFBTSxDQUFDLE1BQU0sbUJBQW1CLEdBQUcsQ0FBQyxHQUFlLEVBQUUsRUFBRSxDQUNyRCxpQkFBaUIsQ0FBQyxHQUFHLGlCQUFvQixDQUFDO0FBRTVDOzs7O0dBSUc7QUFDSCxNQUFNLENBQUMsTUFBTSxtQkFBbUIsR0FBRyxDQUFDLEdBQWUsRUFBRSxFQUFFLENBQ3JELGlCQUFpQixDQUFDLEdBQUcsaUJBQW9CLENBQUM7QUFFNUM7Ozs7OztHQU1HO0FBQ0gsTUFBTSxDQUFDLE1BQU0saUJBQWlCLEdBQUcsQ0FBQyxLQUFhLEVBQUUsS0FBYSxFQUFFLEVBQUU7SUFDaEUsTUFBTSxHQUFHLEdBQUcsSUFBSSxVQUFVLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDbEMsa0NBQWtDO0lBQ2xDLEtBQUssSUFBSSxNQUFNLEdBQUcsQ0FBQyxFQUFFLE1BQU0sR0FBRyxLQUFLLEVBQUUsTUFBTSxFQUFFLEVBQUU7UUFDN0Msc0VBQXNFO1FBQ3RFLEdBQUcsQ0FBQyxNQUFNLENBQUMsR0FBRyxNQUFNLENBQUMsS0FBSyxDQUFDLENBQUM7UUFDNUIsd0ZBQXdGO1FBQ3hGLEtBQUssR0FBRyxLQUFLLElBQUksTUFBTSxxQkFBd0IsQ0FBQztLQUNqRDtJQUNELE9BQU8sR0FBRyxDQUFDO0FBQ2IsQ0FBQyxDQUFDO0FBRUY7Ozs7Ozs7R0FPRztBQUNILE1BQU0sQ0FBQyxNQUFNLG1CQUFtQixHQUFHLENBQUMsS0FBYSxFQUFFLEVBQUUsQ0FDbkQsaUJBQWlCLENBQUMsS0FBSyxpQkFBb0IsQ0FBQztBQUU5Qzs7OztHQUlHO0FBQ0gsTUFBTSxDQUFDLE1BQU0saUJBQWlCLEdBQUcsQ0FBQyxHQUFlLEVBQUUsS0FBYSxFQUFFLEVBQUU7SUFDbEUsTUFBTSxJQUFJLEdBQUcsQ0FBQyxDQUFDO0lBQ2YsTUFBTSxXQUFXLEdBQUcsQ0FBQyxDQUFDO0lBQ3RCLGtDQUFrQztJQUNsQyxJQUFJLEtBQUssR0FBRyxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDdEIsa0NBQWtDO0lBQ2xDLEtBQUssSUFBSSxNQUFNLEdBQUcsQ0FBQyxFQUFFLE1BQU0sR0FBRyxLQUFLLEVBQUUsTUFBTSxFQUFFLEVBQUU7UUFDN0MsOERBQThEO1FBQzlELEtBQUssSUFBSSxNQUFNLENBQUMsR0FBRyxDQUFDLE1BQU0sQ0FBQyxHQUFHLElBQUksSUFBSSxDQUFDLFdBQVcsR0FBRyxNQUFNLENBQUMsQ0FBQyxDQUFDO0tBQy9EO0lBQ0QsT0FBTyxLQUFLLENBQUM7QUFDZixDQUFDLENBQUM7QUFFRjs7OztHQUlHO0FBQ0gsTUFBTSxDQUFDLE1BQU0sbUJBQW1CLEdBQUcsQ0FBQyxHQUFlLEVBQUUsRUFBRSxDQUNyRCxpQkFBaUIsQ0FBQyxHQUFHLGlCQUFvQixDQUFDO0FBVzVDLE1BQU0sa0JBQWtCLEdBQUcsQ0FBQyxTQUFpQixFQUFFLEVBQUU7SUFDL0MsUUFBUSxTQUFTLEVBQUU7UUFDakI7WUFDRSxxQkFBd0I7UUFDMUI7WUFDRSxzQkFBeUI7UUFDM0I7WUFDRSxzQkFBeUI7UUFDM0I7WUFDRSxzQkFBeUI7S0FDNUI7QUFDSCxDQUFDLENBQUM7QUFFRjs7Ozs7O0dBTUc7QUFDSCxNQUFNLENBQUMsTUFBTSxpQkFBaUIsR0FBRyxDQUFDLEdBQWUsRUFBRSxNQUFjLEVBQUUsRUFBRTtJQUNuRSxNQUFNLEtBQUssR0FBRyxrQkFBa0IsQ0FBQyxHQUFHLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQztJQUM5QyxPQUFPO1FBQ0wsVUFBVSxFQUFFLE1BQU0sR0FBRyxLQUFLO1FBQzFCLEtBQUssRUFBRSxpQkFBaUIsQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLE1BQU0sRUFBRSxNQUFNLEdBQUcsS0FBSyxDQUFDLEVBQUUsS0FBSyxDQUFDO0tBQ3RFLENBQUM7QUFDSixDQUFDLENBQUM7QUFFRjs7Ozs7OztHQU9HO0FBQ0gsTUFBTSxDQUFDLE1BQU0scUJBQXFCLEdBQUcsQ0FBQyxLQUFhLEVBQUUsRUFBRSxDQUNyRCxLQUFLLElBQUksTUFBTSx5QkFBc0I7SUFDbkMsQ0FBQyxDQUFDLGlCQUFpQixDQUFDLEtBQUssZ0JBQW1CO0lBQzVDLENBQUMsQ0FBQyxLQUFLLElBQUksTUFBTSw0QkFBdUI7UUFDeEMsQ0FBQyxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUM7O1lBRWQsR0FBRyxpQkFBaUIsQ0FBQyxLQUFLLGlCQUFvQjtTQUMvQyxDQUFDO1FBQ0osQ0FBQyxDQUFDLEtBQUssSUFBSSxNQUFNLGlDQUF1QjtZQUN4QyxDQUFDLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQzs7Z0JBRWQsR0FBRyxpQkFBaUIsQ0FBQyxLQUFLLGlCQUFvQjthQUMvQyxDQUFDO1lBQ0osQ0FBQyxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUM7O2dCQUVkLEdBQUcsaUJBQWlCLENBQUMsS0FBSyxpQkFBb0I7YUFDL0MsQ0FBQyxDQUFDIn0=","// TODO: clean up - this implementation comes from:\n// https://github.com/google/closure-library/blob/8598d87242af59aac233270742c8984e2b2bdbe0/closure/goog/crypt/crypt.js\n// consider switching to:\n// https://github.com/mathiasbynens/utf8.js/blob/master/utf8.js\n// tslint:disable:cyclomatic-complexity no-let no-if-statement no-magic-numbers no-object-mutation no-expression-statement no-bitwise\nexport const utf8ToBin = (utf8) => {\n    const out = [];\n    let p = 0;\n    for (let i = 0; i < utf8.length; i++) {\n        let c = utf8.charCodeAt(i);\n        if (c < 128) {\n            out[p++] = c;\n        }\n        else if (c < 2048) {\n            out[p++] = (c >> 6) | 192;\n            out[p++] = (c & 63) | 128;\n        }\n        else if ((c & 0xfc00) === 0xd800 &&\n            i + 1 < utf8.length &&\n            (utf8.charCodeAt(i + 1) & 0xfc00) === 0xdc00) {\n            c = ((c & 0x03ff) << 10) + 0x10000 + (utf8.charCodeAt((i += 1)) & 0x03ff);\n            out[p++] = (c >> 18) | 240;\n            out[p++] = ((c >> 12) & 63) | 128;\n            out[p++] = ((c >> 6) & 63) | 128;\n            out[p++] = (c & 63) | 128;\n        }\n        else {\n            out[p++] = (c >> 12) | 224;\n            out[p++] = ((c >> 6) & 63) | 128;\n            out[p++] = (c & 63) | 128;\n        }\n    }\n    return new Uint8Array(out);\n};\n// tslint:enable:cyclomatic-complexity no-let no-if-statement no-magic-numbers no-object-mutation no-expression-statement no-bitwise\n// also compare to:\n// https://gist.github.com/joni/3760795\n// https://gist.github.com/pascaldekloe/62546103a1576803dade9269ccf76330\n// and:\n// function stringFromUTF8Array(data)\n// {\n//   const extraByteMap = [ 1, 1, 1, 1, 2, 2, 3, 0 ];\n//   var count = data.length;\n//   var str = \"\";\n//   for (var index = 0;index < count;)\n//   {\n//     var ch = data[index++];\n//     if (ch & 0x80)\n//     {\n//       var extra = extraByteMap[(ch >> 3) & 0x07];\n//       if (!(ch & 0x40) || !extra || ((index + extra) > count))\n//         return null;\n//       ch = ch & (0x3F >> extra);\n//       for (;extra > 0;extra -= 1)\n//       {\n//         var chx = data[index++];\n//         if ((chx & 0xC0) != 0x80)\n//           return null;\n//         ch = (ch << 6) | (chx & 0x3F);\n//       }\n//     }\n//     str += String.fromCharCode(ch);\n//   }\n//   return str;\n// }\n// tslint:disable:cyclomatic-complexity no-let no-if-statement no-magic-numbers no-object-mutation no-expression-statement no-bitwise\nexport const binToUtf8 = (bytes) => {\n    const out = [];\n    let pos = 0;\n    let c = 0;\n    while (pos < bytes.length) {\n        const c1 = bytes[pos++];\n        if (c1 < 128) {\n            out[c++] = String.fromCharCode(c1);\n        }\n        else if (c1 > 191 && c1 < 224) {\n            const c2 = bytes[pos++];\n            out[c++] = String.fromCharCode(((c1 & 31) << 6) | (c2 & 63));\n        }\n        else if (c1 > 239 && c1 < 365) {\n            const c2 = bytes[pos++];\n            const c3 = bytes[pos++];\n            const c4 = bytes[pos++];\n            const u = (((c1 & 7) << 18) | ((c2 & 63) << 12) | ((c3 & 63) << 6) | (c4 & 63)) -\n                0x10000;\n            out[c++] = String.fromCharCode((u >> 10) + 0xd800);\n            out[c++] = String.fromCharCode((u & 1023) + 0xdc00);\n        }\n        else {\n            const c2 = bytes[pos++];\n            const c3 = bytes[pos++];\n            out[c++] = String.fromCharCode(((c1 & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63));\n        }\n    }\n    return out.join('');\n};\n// tslint:enable:cyclomatic-complexity no-let no-if-statement no-magic-numbers no-object-mutation no-expression-statement no-bitwise\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXRmOC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9saWIvdXRpbHMvdXRmOC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxtREFBbUQ7QUFDbkQsc0hBQXNIO0FBQ3RILHlCQUF5QjtBQUN6QiwrREFBK0Q7QUFFL0QscUlBQXFJO0FBQ3JJLE1BQU0sQ0FBQyxNQUFNLFNBQVMsR0FBRyxDQUFDLElBQVksRUFBRSxFQUFFO0lBQ3hDLE1BQU0sR0FBRyxHQUFHLEVBQUUsQ0FBQztJQUNmLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQztJQUNWLEtBQUssSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxJQUFJLENBQUMsTUFBTSxFQUFFLENBQUMsRUFBRSxFQUFFO1FBQ3BDLElBQUksQ0FBQyxHQUFHLElBQUksQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDM0IsSUFBSSxDQUFDLEdBQUcsR0FBRyxFQUFFO1lBQ1gsR0FBRyxDQUFDLENBQUMsRUFBRSxDQUFDLEdBQUcsQ0FBQyxDQUFDO1NBQ2Q7YUFBTSxJQUFJLENBQUMsR0FBRyxJQUFJLEVBQUU7WUFDbkIsR0FBRyxDQUFDLENBQUMsRUFBRSxDQUFDLEdBQUcsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLEdBQUcsR0FBRyxDQUFDO1lBQzFCLEdBQUcsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLEVBQUUsQ0FBQyxHQUFHLEdBQUcsQ0FBQztTQUMzQjthQUFNLElBQ0wsQ0FBQyxDQUFDLEdBQUcsTUFBTSxDQUFDLEtBQUssTUFBTTtZQUN2QixDQUFDLEdBQUcsQ0FBQyxHQUFHLElBQUksQ0FBQyxNQUFNO1lBQ25CLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsTUFBTSxDQUFDLEtBQUssTUFBTSxFQUM1QztZQUNBLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxHQUFH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","export * from './hex';\nexport * from './base64';\nexport * from './numbers';\nexport * from './log';\nexport * from './utf8';\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXRpbHMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvbGliL3V0aWxzL3V0aWxzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLGNBQWMsT0FBTyxDQUFDO0FBQ3RCLGNBQWMsVUFBVSxDQUFDO0FBQ3pCLGNBQWMsV0FBVyxDQUFDO0FBQzFCLGNBQWMsT0FBTyxDQUFDO0FBQ3RCLGNBQWMsUUFBUSxDQUFDIn0=","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    Buffer = require('buffer').Buffer;\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n    }\n\n    if (base === 16) {\n      this._parseHex(number, start);\n    } else {\n      this._parseBase(number, base, start);\n    }\n\n    if (number[0] === '-') {\n      this.negative = 1;\n    }\n\n    this.strip();\n\n    if (endian !== 'le') return;\n\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [ number & 0x3ffffff ];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [ 0 ];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this.strip();\n  };\n\n  function parseHex (str, start, end) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r <<= 4;\n\n      // 'a' - 'f'\n      if (c >= 49 && c <= 54) {\n        r |= c - 49 + 0xa;\n\n      // 'A' - 'F'\n      } else if (c >= 17 && c <= 22) {\n        r |= c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r |= c & 0xf;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    // Scan 24-bit chunks and add them to the number\n    var off = 0;\n    for (i = number.length - 6, j = 0; i >= start; i -= 6) {\n      w = parseHex(number, i, i + 6);\n      this.words[j] |= (w << off) & 0x3ffffff;\n      // NOTE: `0x3fffff` is intentional here, 26bits max shift + 24bit hex limb\n      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;\n      off += 24;\n      if (off >= 26) {\n        off -= 26;\n        j++;\n      }\n    }\n    if (i + 6 !== start) {\n      w = parseHex(number, start, i + 6);\n      this.words[j] |= (w << off) & 0x3ffffff;\n      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;\n    }\n    this.strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        r += c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        r += c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r += c;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [ 0 ];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype.strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  BN.prototype.inspect = function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  };\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16);\n  };\n\n  BN.prototype.toBuffer = function toBuffer (endian, length) {\n    assert(typeof Buffer !== 'undefined');\n    return this.toArrayLike(Buffer, endian, length);\n  };\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    this.strip();\n    var littleEndian = endian === 'le';\n    var res = new ArrayType(reqLength);\n\n    var b, i;\n    var q = this.clone();\n    if (!littleEndian) {\n      // Assume big-endian\n      for (i = 0; i < reqLength - byteLength; i++) {\n        res[i] = 0;\n      }\n\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[reqLength - i - 1] = b;\n      }\n    } else {\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[i] = b;\n      }\n\n      for (; i < reqLength; i++) {\n        res[i] = 0;\n      }\n    }\n\n    return res;\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this.strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this.strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this.strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    var fftm = new FFTM();\n    return fftm.mulp(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out.strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this.strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) < num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this.strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this.strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q.strip();\n    }\n    a.strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modn = function modn (num) {\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return acc;\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this.strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      r.strip();\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n    return a.umod(this.m)._forceRed(this);\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","var r;\n\nmodule.exports = function rand(len) {\n  if (!r)\n    r = new Rand(null);\n\n  return r.generate(len);\n};\n\nfunction Rand(rand) {\n  this.rand = rand;\n}\nmodule.exports.Rand = Rand;\n\nRand.prototype.generate = function generate(len) {\n  return this._rand(len);\n};\n\n// Emulate crypto API using randy\nRand.prototype._rand = function _rand(n) {\n  if (this.rand.getBytes)\n    return this.rand.getBytes(n);\n\n  var res = new Uint8Array(n);\n  for (var i = 0; i < res.length; i++)\n    res[i] = this.rand.getByte();\n  return res;\n};\n\nif (typeof self === 'object') {\n  if (self.crypto && self.crypto.getRandomValues) {\n    // Modern browsers\n    Rand.prototype._rand = function _rand(n) {\n      var arr = new Uint8Array(n);\n      self.crypto.getRandomValues(arr);\n      return arr;\n    };\n  } else if (self.msCrypto && self.msCrypto.getRandomValues) {\n    // IE\n    Rand.prototype._rand = function _rand(n) {\n      var arr = new Uint8Array(n);\n      self.msCrypto.getRandomValues(arr);\n      return arr;\n    };\n\n  // Safari's WebWorkers do not have `crypto`\n  } else if (typeof window === 'object') {\n    // Old junk\n    Rand.prototype._rand = function() {\n      throw new Error('Not implemented yet');\n    };\n  }\n} else {\n  // Node.js or Web worker with no crypto support\n  try {\n    var crypto = require('crypto');\n    if (typeof crypto.randomBytes !== 'function')\n      throw new Error('Not supported');\n\n    Rand.prototype._rand = function _rand(n) {\n      return crypto.randomBytes(n);\n    };\n  } catch (e) {\n  }\n}\n","var basex = require('base-x')\nvar ALPHABET = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n\nmodule.exports = basex(ALPHABET)\n","'use strict'\n\nvar base58 = require('bs58')\nvar Buffer = require('safe-buffer').Buffer\n\nmodule.exports = function (checksumFn) {\n  // Encode a buffer as a base58-check encoded string\n  function encode (payload) {\n    var checksum = checksumFn(payload)\n\n    return base58.encode(Buffer.concat([\n      payload,\n      checksum\n    ], payload.length + 4))\n  }\n\n  function decodeRaw (buffer) {\n    var payload = buffer.slice(0, -4)\n    var checksum = buffer.slice(-4)\n    var newChecksum = checksumFn(payload)\n\n    if (checksum[0] ^ newChecksum[0] |\n        checksum[1] ^ newChecksum[1] |\n        checksum[2] ^ newChecksum[2] |\n        checksum[3] ^ newChecksum[3]) return\n\n    return payload\n  }\n\n  // Decode a base58-check encoded string to a buffer, no result if checksum is wrong\n  function decodeUnsafe (string) {\n    var buffer = base58.decodeUnsafe(string)\n    if (!buffer) return\n\n    return decodeRaw(buffer)\n  }\n\n  function decode (string) {\n    var buffer = base58.decode(string)\n    var payload = decodeRaw(buffer, checksumFn)\n    if (!payload) throw new Error('Invalid checksum')\n    return payload\n  }\n\n  return {\n    encode: encode,\n    decode: decode,\n    decodeUnsafe: decodeUnsafe\n  }\n}\n","'use strict'\n\nvar createHash = require('create-hash')\nvar bs58checkBase = require('./base')\n\n// SHA256(SHA256(buffer))\nfunction sha256x2 (buffer) {\n  var tmp = createHash('sha256').update(buffer).digest()\n  return createHash('sha256').update(tmp).digest()\n}\n\nmodule.exports = bs58checkBase(sha256x2)\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n","var Buffer = require('safe-buffer').Buffer\nvar Transform = require('stream').Transform\nvar StringDecoder = require('string_decoder').StringDecoder\nvar inherits = require('inherits')\n\nfunction CipherBase (hashMode) {\n  Transform.call(this)\n  this.hashMode = typeof hashMode === 'string'\n  if (this.hashMode) {\n    this[hashMode] = this._finalOrDigest\n  } else {\n    this.final = this._finalOrDigest\n  }\n  if (this._final) {\n    this.__final = this._final\n    this._final = null\n  }\n  this._decoder = null\n  this._encoding = null\n}\ninherits(CipherBase, Transform)\n\nCipherBase.prototype.update = function (data, inputEnc, outputEnc) {\n  if (typeof data === 'string') {\n    data = Buffer.from(data, inputEnc)\n  }\n\n  var outData = this._update(data)\n  if (this.hashMode) return this\n\n  if (outputEnc) {\n    outData = this._toString(outData, outputEnc)\n  }\n\n  return outData\n}\n\nCipherBase.prototype.setAutoPadding = function () {}\nCipherBase.prototype.getAuthTag = function () {\n  throw new Error('trying to get auth tag in unsupported state')\n}\n\nCipherBase.prototype.setAuthTag = function () {\n  throw new Error('trying to set auth tag in unsupported state')\n}\n\nCipherBase.prototype.setAAD = function () {\n  throw new Error('trying to set aad in unsupported state')\n}\n\nCipherBase.prototype._transform = function (data, _, next) {\n  var err\n  try {\n    if (this.hashMode) {\n      this._update(data)\n    } else {\n      this.push(this._update(data))\n    }\n  } catch (e) {\n    err = e\n  } finally {\n    next(err)\n  }\n}\nCipherBase.prototype._flush = function (done) {\n  var err\n  try {\n    this.push(this.__final())\n  } catch (e) {\n    err = e\n  }\n\n  done(err)\n}\nCipherBase.prototype._finalOrDigest = function (outputEnc) {\n  var outData = this.__final() || Buffer.alloc(0)\n  if (outputEnc) {\n    outData = this._toString(outData, outputEnc, true)\n  }\n  return outData\n}\n\nCipherBase.prototype._toString = function (value, enc, fin) {\n  if (!this._decoder) {\n    this._decoder = new StringDecoder(enc)\n    this._encoding = enc\n  }\n\n  if (this._encoding !== enc) throw new Error('can\\'t switch encodings')\n\n  var out = this._decoder.write(value)\n  if (fin) {\n    out += this._decoder.end()\n  }\n\n  return out\n}\n\nmodule.exports = CipherBase\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\n\nfunction isArray(arg) {\n  if (Array.isArray) {\n    return Array.isArray(arg);\n  }\n  return objectToString(arg) === '[object Array]';\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = Buffer.isBuffer;\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n","'use strict'\nvar inherits = require('inherits')\nvar MD5 = require('md5.js')\nvar RIPEMD160 = require('ripemd160')\nvar sha = require('sha.js')\nvar Base = require('cipher-base')\n\nfunction Hash (hash) {\n  Base.call(this, 'digest')\n\n  this._hash = hash\n}\n\ninherits(Hash, Base)\n\nHash.prototype._update = function (data) {\n  this._hash.update(data)\n}\n\nHash.prototype._final = function () {\n  return this._hash.digest()\n}\n\nmodule.exports = function createHash (alg) {\n  alg = alg.toLowerCase()\n  if (alg === 'md5') return new MD5()\n  if (alg === 'rmd160' || alg === 'ripemd160') return new RIPEMD160()\n\n  return new Hash(sha(alg))\n}\n","var MD5 = require('md5.js')\n\nmodule.exports = function (buffer) {\n  return new MD5().update(buffer).digest()\n}\n","'use strict'\nvar inherits = require('inherits')\nvar Legacy = require('./legacy')\nvar Base = require('cipher-base')\nvar Buffer = require('safe-buffer').Buffer\nvar md5 = require('create-hash/md5')\nvar RIPEMD160 = require('ripemd160')\n\nvar sha = require('sha.js')\n\nvar ZEROS = Buffer.alloc(128)\n\nfunction Hmac (alg, key) {\n  Base.call(this, 'digest')\n  if (typeof key === 'string') {\n    key = Buffer.from(key)\n  }\n\n  var blocksize = (alg === 'sha512' || alg === 'sha384') ? 128 : 64\n\n  this._alg = alg\n  this._key = key\n  if (key.length > blocksize) {\n    var hash = alg === 'rmd160' ? new RIPEMD160() : sha(alg)\n    key = hash.update(key).digest()\n  } else if (key.length < blocksize) {\n    key = Buffer.concat([key, ZEROS], blocksize)\n  }\n\n  var ipad = this._ipad = Buffer.allocUnsafe(blocksize)\n  var opad = this._opad = Buffer.allocUnsafe(blocksize)\n\n  for (var i = 0; i < blocksize; i++) {\n    ipad[i] = key[i] ^ 0x36\n    opad[i] = key[i] ^ 0x5C\n  }\n  this._hash = alg === 'rmd160' ? new RIPEMD160() : sha(alg)\n  this._hash.update(ipad)\n}\n\ninherits(Hmac, Base)\n\nHmac.prototype._update = function (data) {\n  this._hash.update(data)\n}\n\nHmac.prototype._final = function () {\n  var h = this._hash.digest()\n  var hash = this._alg === 'rmd160' ? new RIPEMD160() : sha(this._alg)\n  return hash.update(this._opad).update(h).digest()\n}\n\nmodule.exports = function createHmac (alg, key) {\n  alg = alg.toLowerCase()\n  if (alg === 'rmd160' || alg === 'ripemd160') {\n    return new Hmac('rmd160', key)\n  }\n  if (alg === 'md5') {\n    return new Legacy(md5, key)\n  }\n  return new Hmac(alg, key)\n}\n","'use strict'\nvar inherits = require('inherits')\nvar Buffer = require('safe-buffer').Buffer\n\nvar Base = require('cipher-base')\n\nvar ZEROS = Buffer.alloc(128)\nvar blocksize = 64\n\nfunction Hmac (alg, key) {\n  Base.call(this, 'digest')\n  if (typeof key === 'string') {\n    key = Buffer.from(key)\n  }\n\n  this._alg = alg\n  this._key = key\n\n  if (key.length > blocksize) {\n    key = alg(key)\n  } else if (key.length < blocksize) {\n    key = Buffer.concat([key, ZEROS], blocksize)\n  }\n\n  var ipad = this._ipad = Buffer.allocUnsafe(blocksize)\n  var opad = this._opad = Buffer.allocUnsafe(blocksize)\n\n  for (var i = 0; i < blocksize; i++) {\n    ipad[i] = key[i] ^ 0x36\n    opad[i] = key[i] ^ 0x5C\n  }\n\n  this._hash = [ipad]\n}\n\ninherits(Hmac, Base)\n\nHmac.prototype._update = function (data) {\n  this._hash.push(data)\n}\n\nHmac.prototype._final = function () {\n  var h = this._alg(Buffer.concat(this._hash))\n  return this._alg(Buffer.concat([this._opad, h]))\n}\nmodule.exports = Hmac\n","'use strict';\n\nvar elliptic = exports;\n\nelliptic.version = require('../package.json').version;\nelliptic.utils = require('./elliptic/utils');\nelliptic.rand = require('brorand');\nelliptic.curve = require('./elliptic/curve');\nelliptic.curves = require('./elliptic/curves');\n\n// Protocols\nelliptic.ec = require('./elliptic/ec');\nelliptic.eddsa = require('./elliptic/eddsa');\n","'use strict';\n\nvar BN = require('bn.js');\nvar utils = require('../utils');\nvar getNAF = utils.getNAF;\nvar getJSF = utils.getJSF;\nvar assert = utils.assert;\n\nfunction BaseCurve(type, conf) {\n  this.type = type;\n  this.p = new BN(conf.p, 16);\n\n  // Use Montgomery, when there is no fast reduction for the prime\n  this.red = conf.prime ? BN.red(conf.prime) : BN.mont(this.p);\n\n  // Useful for many curves\n  this.zero = new BN(0).toRed(this.red);\n  this.one = new BN(1).toRed(this.red);\n  this.two = new BN(2).toRed(this.red);\n\n  // Curve configuration, optional\n  this.n = conf.n && new BN(conf.n, 16);\n  this.g = conf.g && this.pointFromJSON(conf.g, conf.gRed);\n\n  // Temporary arrays\n  this._wnafT1 = new Array(4);\n  this._wnafT2 = new Array(4);\n  this._wnafT3 = new Array(4);\n  this._wnafT4 = new Array(4);\n\n  // Generalized Greg Maxwell's trick\n  var adjustCount = this.n && this.p.div(this.n);\n  if (!adjustCount || adjustCount.cmpn(100) > 0) {\n    this.redN = null;\n  } else {\n    this._maxwellTrick = true;\n    this.redN = this.n.toRed(this.red);\n  }\n}\nmodule.exports = BaseCurve;\n\nBaseCurve.prototype.point = function point() {\n  throw new Error('Not implemented');\n};\n\nBaseCurve.prototype.validate = function validate() {\n  throw new Error('Not implemented');\n};\n\nBaseCurve.prototype._fixedNafMul = function _fixedNafMul(p, k) {\n  assert(p.precomputed);\n  var doubles = p._getDoubles();\n\n  var naf = getNAF(k, 1);\n  var I = (1 << (doubles.step + 1)) - (doubles.step % 2 === 0 ? 2 : 1);\n  I /= 3;\n\n  // Translate into more windowed form\n  var repr = [];\n  for (var j = 0; j < naf.length; j += doubles.step) {\n    var nafW = 0;\n    for (var k = j + doubles.step - 1; k >= j; k--)\n      nafW = (nafW << 1) + naf[k];\n    repr.push(nafW);\n  }\n\n  var a = this.jpoint(null, null, null);\n  var b = this.jpoint(null, null, null);\n  for (var i = I; i > 0; i--) {\n    for (var j = 0; j < repr.length; j++) {\n      var nafW = repr[j];\n      if (nafW === i)\n        b = b.mixedAdd(doubles.points[j]);\n      else if (nafW === -i)\n        b = b.mixedAdd(doubles.points[j].neg());\n    }\n    a = a.add(b);\n  }\n  return a.toP();\n};\n\nBaseCurve.prototype._wnafMul = function _wnafMul(p, k) {\n  var w = 4;\n\n  // Precompute window\n  var nafPoints = p._getNAFPoints(w);\n  w = nafPoints.wnd;\n  var wnd = nafPoints.points;\n\n  // Get NAF form\n  var naf = getNAF(k, w);\n\n  // Add `this`*(N+1) for every w-NAF index\n  var acc = this.jpoint(null, null, null);\n  for (var i = naf.length - 1; i >= 0; i--) {\n    // Count zeroes\n    for (var k = 0; i >= 0 && naf[i] === 0; i--)\n      k++;\n    if (i >= 0)\n      k++;\n    acc = acc.dblp(k);\n\n    if (i < 0)\n      break;\n    var z = naf[i];\n    assert(z !== 0);\n    if (p.type === 'affine') {\n      // J +- P\n      if (z > 0)\n        acc = acc.mixedAdd(wnd[(z - 1) >> 1]);\n      else\n        acc = acc.mixedAdd(wnd[(-z - 1) >> 1].neg());\n    } else {\n      // J +- J\n      if (z > 0)\n        acc = acc.add(wnd[(z - 1) >> 1]);\n      else\n        acc = acc.add(wnd[(-z - 1) >> 1].neg());\n    }\n  }\n  return p.type === 'affine' ? acc.toP() : acc;\n};\n\nBaseCurve.prototype._wnafMulAdd = function _wnafMulAdd(defW,\n                                                       points,\n                                                       coeffs,\n                                                       len,\n                                                       jacobianResult) {\n  var wndWidth = this._wnafT1;\n  var wnd = this._wnafT2;\n  var naf = this._wnafT3;\n\n  // Fill all arrays\n  var max = 0;\n  for (var i = 0; i < len; i++) {\n    var p = points[i];\n    var nafPoints = p._getNAFPoints(defW);\n    wndWidth[i] = nafPoints.wnd;\n    wnd[i] = nafPoints.points;\n  }\n\n  // Comb small window NAFs\n  for (var i = len - 1; i >= 1; i -= 2) {\n    var a = i - 1;\n    var b = i;\n    if (wndWidth[a] !== 1 || wndWidth[b] !== 1) {\n      naf[a] = getNAF(coeffs[a], wndWidth[a]);\n      naf[b] = getNAF(coeffs[b], wndWidth[b]);\n      max = Math.max(naf[a].length, max);\n      max = Math.max(naf[b].length, max);\n      continue;\n    }\n\n    var comb = [\n      points[a], /* 1 */\n      null, /* 3 */\n      null, /* 5 */\n      points[b] /* 7 */\n    ];\n\n    // Try to avoid Projective points, if possible\n    if (points[a].y.cmp(points[b].y) === 0) {\n      comb[1] = points[a].add(points[b]);\n      comb[2] = points[a].toJ().mixedAdd(points[b].neg());\n    } else if (points[a].y.cmp(points[b].y.redNeg()) === 0) {\n      comb[1] = points[a].toJ().mixedAdd(points[b]);\n      comb[2] = points[a].add(points[b].neg());\n    } else {\n      comb[1] = points[a].toJ().mixedAdd(points[b]);\n      comb[2] = points[a].toJ().mixedAdd(points[b].neg());\n    }\n\n    var index = [\n      -3, /* -1 -1 */\n      -1, /* -1 0 */\n      -5, /* -1 1 */\n      -7, /* 0 -1 */\n      0, /* 0 0 */\n      7, /* 0 1 */\n      5, /* 1 -1 */\n      1, /* 1 0 */\n      3  /* 1 1 */\n    ];\n\n    var jsf = getJSF(coeffs[a], coeffs[b]);\n    max = Math.max(jsf[0].length, max);\n    naf[a] = new Array(max);\n    naf[b] = new Array(max);\n    for (var j = 0; j < max; j++) {\n      var ja = jsf[0][j] | 0;\n      var jb = jsf[1][j] | 0;\n\n      naf[a][j] = index[(ja + 1) * 3 + (jb + 1)];\n      naf[b][j] = 0;\n      wnd[a] = comb;\n    }\n  }\n\n  var acc = this.jpoint(null, null, null);\n  var tmp = this._wnafT4;\n  for (var i = max; i >= 0; i--) {\n    var k = 0;\n\n    while (i >= 0) {\n      var zero = true;\n      for (var j = 0; j < len; j++) {\n        tmp[j] = naf[j][i] | 0;\n        if (tmp[j] !== 0)\n          zero = false;\n      }\n      if (!zero)\n        break;\n      k++;\n      i--;\n    }\n    if (i >= 0)\n      k++;\n    acc = acc.dblp(k);\n    if (i < 0)\n      break;\n\n    for (var j = 0; j < len; j++) {\n      var z = tmp[j];\n      var p;\n      if (z === 0)\n        continue;\n      else if (z > 0)\n        p = wnd[j][(z - 1) >> 1];\n      else if (z < 0)\n        p = wnd[j][(-z - 1) >> 1].neg();\n\n      if (p.type === 'affine')\n        acc = acc.mixedAdd(p);\n      else\n        acc = acc.add(p);\n    }\n  }\n  // Zeroify references\n  for (var i = 0; i < len; i++)\n    wnd[i] = null;\n\n  if (jacobianResult)\n    return acc;\n  else\n    return acc.toP();\n};\n\nfunction BasePoint(curve, type) {\n  this.curve = curve;\n  this.type = type;\n  this.precomputed = null;\n}\nBaseCurve.BasePoint = BasePoint;\n\nBasePoint.prototype.eq = function eq(/*other*/) {\n  throw new Error('Not implemented');\n};\n\nBasePoint.prototype.validate = function validate() {\n  return this.curve.validate(this);\n};\n\nBaseCurve.prototype.decodePoint = function decodePoint(bytes, enc) {\n  bytes = utils.toArray(bytes, enc);\n\n  var len = this.p.byteLength();\n\n  // uncompressed, hybrid-odd, hybrid-even\n  if ((bytes[0] === 0x04 || bytes[0] === 0x06 || bytes[0] === 0x07) &&\n      bytes.length - 1 === 2 * len) {\n    if (bytes[0] === 0x06)\n      assert(bytes[bytes.length - 1] % 2 === 0);\n    else if (bytes[0] === 0x07)\n      assert(bytes[bytes.length - 1] % 2 === 1);\n\n    var res =  this.point(bytes.slice(1, 1 + len),\n                          bytes.slice(1 + len, 1 + 2 * len));\n\n    return res;\n  } else if ((bytes[0] === 0x02 || bytes[0] === 0x03) &&\n              bytes.length - 1 === len) {\n    return this.pointFromX(bytes.slice(1, 1 + len), bytes[0] === 0x03);\n  }\n  throw new Error('Unknown point format');\n};\n\nBasePoint.prototype.encodeCompressed = function encodeCompressed(enc) {\n  return this.encode(enc, true);\n};\n\nBasePoint.prototype._encode = function _encode(compact) {\n  var len = this.curve.p.byteLength();\n  var x = this.getX().toArray('be', len);\n\n  if (compact)\n    return [ this.getY().isEven() ? 0x02 : 0x03 ].concat(x);\n\n  return [ 0x04 ].concat(x, this.getY().toArray('be', len)) ;\n};\n\nBasePoint.prototype.encode = function encode(enc, compact) {\n  return utils.encode(this._encode(compact), enc);\n};\n\nBasePoint.prototype.precompute = function precompute(power) {\n  if (this.precomputed)\n    return this;\n\n  var precomputed = {\n    doubles: null,\n    naf: null,\n    beta: null\n  };\n  precomputed.naf = this._getNAFPoints(8);\n  precomputed.doubles = this._getDoubles(4, power);\n  precomputed.beta = this._getBeta();\n  this.precomputed = precomputed;\n\n  return this;\n};\n\nBasePoint.prototype._hasDoubles = function _hasDoubles(k) {\n  if (!this.precomputed)\n    return false;\n\n  var doubles = this.precomputed.doubles;\n  if (!doubles)\n    return false;\n\n  return doubles.points.length >= Math.ceil((k.bitLength() + 1) / doubles.step);\n};\n\nBasePoint.prototype._getDoubles = function _getDoubles(step, power) {\n  if (this.precomputed && this.precomputed.doubles)\n    return this.precomputed.doubles;\n\n  var doubles = [ this ];\n  var acc = this;\n  for (var i = 0; i < power; i += step) {\n    for (var j = 0; j < step; j++)\n      acc = acc.dbl();\n    doubles.push(acc);\n  }\n  return {\n    step: step,\n    points: doubles\n  };\n};\n\nBasePoint.prototype._getNAFPoints = function _getNAFPoints(wnd) {\n  if (this.precomputed && this.precomputed.naf)\n    return this.precomputed.naf;\n\n  var res = [ this ];\n  var max = (1 << wnd) - 1;\n  var dbl = max === 1 ? null : this.dbl();\n  for (var i = 1; i < max; i++)\n    res[i] = res[i - 1].add(dbl);\n  return {\n    wnd: wnd,\n    points: res\n  };\n};\n\nBasePoint.prototype._getBeta = function _getBeta() {\n  return null;\n};\n\nBasePoint.prototype.dblp = function dblp(k) {\n  var r = this;\n  for (var i = 0; i < k; i++)\n    r = r.dbl();\n  return r;\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar BN = require('bn.js');\nvar inherits = require('inherits');\nvar Base = require('./base');\n\nvar assert = utils.assert;\n\nfunction EdwardsCurve(conf) {\n  // NOTE: Important as we are creating point in Base.call()\n  this.twisted = (conf.a | 0) !== 1;\n  this.mOneA = this.twisted && (conf.a | 0) === -1;\n  this.extended = this.mOneA;\n\n  Base.call(this, 'edwards', conf);\n\n  this.a = new BN(conf.a, 16).umod(this.red.m);\n  this.a = this.a.toRed(this.red);\n  this.c = new BN(conf.c, 16).toRed(this.red);\n  this.c2 = this.c.redSqr();\n  this.d = new BN(conf.d, 16).toRed(this.red);\n  this.dd = this.d.redAdd(this.d);\n\n  assert(!this.twisted || this.c.fromRed().cmpn(1) === 0);\n  this.oneC = (conf.c | 0) === 1;\n}\ninherits(EdwardsCurve, Base);\nmodule.exports = EdwardsCurve;\n\nEdwardsCurve.prototype._mulA = function _mulA(num) {\n  if (this.mOneA)\n    return num.redNeg();\n  else\n    return this.a.redMul(num);\n};\n\nEdwardsCurve.prototype._mulC = function _mulC(num) {\n  if (this.oneC)\n    return num;\n  else\n    return this.c.redMul(num);\n};\n\n// Just for compatibility with Short curve\nEdwardsCurve.prototype.jpoint = function jpoint(x, y, z, t) {\n  return this.point(x, y, z, t);\n};\n\nEdwardsCurve.prototype.pointFromX = function pointFromX(x, odd) {\n  x = new BN(x, 16);\n  if (!x.red)\n    x = x.toRed(this.red);\n\n  var x2 = x.redSqr();\n  var rhs = this.c2.redSub(this.a.redMul(x2));\n  var lhs = this.one.redSub(this.c2.redMul(this.d).redMul(x2));\n\n  var y2 = rhs.redMul(lhs.redInvm());\n  var y = y2.redSqrt();\n  if (y.redSqr().redSub(y2).cmp(this.zero) !== 0)\n    throw new Error('invalid point');\n\n  var isOdd = y.fromRed().isOdd();\n  if (odd && !isOdd || !odd && isOdd)\n    y = y.redNeg();\n\n  return this.point(x, y);\n};\n\nEdwardsCurve.prototype.pointFromY = function pointFromY(y, odd) {\n  y = new BN(y, 16);\n  if (!y.red)\n    y = y.toRed(this.red);\n\n  // x^2 = (y^2 - c^2) / (c^2 d y^2 - a)\n  var y2 = y.redSqr();\n  var lhs = y2.redSub(this.c2);\n  var rhs = y2.redMul(this.d).redMul(this.c2).redSub(this.a);\n  var x2 = lhs.redMul(rhs.redInvm());\n\n  if (x2.cmp(this.zero) === 0) {\n    if (odd)\n      throw new Error('invalid point');\n    else\n      return this.point(this.zero, y);\n  }\n\n  var x = x2.redSqrt();\n  if (x.redSqr().redSub(x2).cmp(this.zero) !== 0)\n    throw new Error('invalid point');\n\n  if (x.fromRed().isOdd() !== odd)\n    x = x.redNeg();\n\n  return this.point(x, y);\n};\n\nEdwardsCurve.prototype.validate = function validate(point) {\n  if (point.isInfinity())\n    return true;\n\n  // Curve: A * X^2 + Y^2 = C^2 * (1 + D * X^2 * Y^2)\n  point.normalize();\n\n  var x2 = point.x.redSqr();\n  var y2 = point.y.redSqr();\n  var lhs = x2.redMul(this.a).redAdd(y2);\n  var rhs = this.c2.redMul(this.one.redAdd(this.d.redMul(x2).redMul(y2)));\n\n  return lhs.cmp(rhs) === 0;\n};\n\nfunction Point(curve, x, y, z, t) {\n  Base.BasePoint.call(this, curve, 'projective');\n  if (x === null && y === null && z === null) {\n    this.x = this.curve.zero;\n    this.y = this.curve.one;\n    this.z = this.curve.one;\n    this.t = this.curve.zero;\n    this.zOne = true;\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    this.z = z ? new BN(z, 16) : this.curve.one;\n    this.t = t && new BN(t, 16);\n    if (!this.x.red)\n      this.x = this.x.toRed(this.curve.red);\n    if (!this.y.red)\n      this.y = this.y.toRed(this.curve.red);\n    if (!this.z.red)\n      this.z = this.z.toRed(this.curve.red);\n    if (this.t && !this.t.red)\n      this.t = this.t.toRed(this.curve.red);\n    this.zOne = this.z === this.curve.one;\n\n    // Use extended coordinates\n    if (this.curve.extended && !this.t) {\n      this.t = this.x.redMul(this.y);\n      if (!this.zOne)\n        this.t = this.t.redMul(this.z.redInvm());\n    }\n  }\n}\ninherits(Point, Base.BasePoint);\n\nEdwardsCurve.prototype.pointFromJSON = function pointFromJSON(obj) {\n  return Point.fromJSON(this, obj);\n};\n\nEdwardsCurve.prototype.point = function point(x, y, z, t) {\n  return new Point(this, x, y, z, t);\n};\n\nPoint.fromJSON = function fromJSON(curve, obj) {\n  return new Point(curve, obj[0], obj[1], obj[2]);\n};\n\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +\n      ' y: ' + this.y.fromRed().toString(16, 2) +\n      ' z: ' + this.z.fromRed().toString(16, 2) + '>';\n};\n\nPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.x.cmpn(0) === 0 &&\n    (this.y.cmp(this.z) === 0 ||\n    (this.zOne && this.y.cmp(this.curve.c) === 0));\n};\n\nPoint.prototype._extDbl = function _extDbl() {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html\n  //     #doubling-dbl-2008-hwcd\n  // 4M + 4S\n\n  // A = X1^2\n  var a = this.x.redSqr();\n  // B = Y1^2\n  var b = this.y.redSqr();\n  // C = 2 * Z1^2\n  var c = this.z.redSqr();\n  c = c.redIAdd(c);\n  // D = a * A\n  var d = this.curve._mulA(a);\n  // E = (X1 + Y1)^2 - A - B\n  var e = this.x.redAdd(this.y).redSqr().redISub(a).redISub(b);\n  // G = D + B\n  var g = d.redAdd(b);\n  // F = G - C\n  var f = g.redSub(c);\n  // H = D - B\n  var h = d.redSub(b);\n  // X3 = E * F\n  var nx = e.redMul(f);\n  // Y3 = G * H\n  var ny = g.redMul(h);\n  // T3 = E * H\n  var nt = e.redMul(h);\n  // Z3 = F * G\n  var nz = f.redMul(g);\n  return this.curve.point(nx, ny, nz, nt);\n};\n\nPoint.prototype._projDbl = function _projDbl() {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-projective.html\n  //     #doubling-dbl-2008-bbjlp\n  //     #doubling-dbl-2007-bl\n  // and others\n  // Generally 3M + 4S or 2M + 4S\n\n  // B = (X1 + Y1)^2\n  var b = this.x.redAdd(this.y).redSqr();\n  // C = X1^2\n  var c = this.x.redSqr();\n  // D = Y1^2\n  var d = this.y.redSqr();\n\n  var nx;\n  var ny;\n  var nz;\n  if (this.curve.twisted) {\n    // E = a * C\n    var e = this.curve._mulA(c);\n    // F = E + D\n    var f = e.redAdd(d);\n    if (this.zOne) {\n      // X3 = (B - C - D) * (F - 2)\n      nx = b.redSub(c).redSub(d).redMul(f.redSub(this.curve.two));\n      // Y3 = F * (E - D)\n      ny = f.redMul(e.redSub(d));\n      // Z3 = F^2 - 2 * F\n      nz = f.redSqr().redSub(f).redSub(f);\n    } else {\n      // H = Z1^2\n      var h = this.z.redSqr();\n      // J = F - 2 * H\n      var j = f.redSub(h).redISub(h);\n      // X3 = (B-C-D)*J\n      nx = b.redSub(c).redISub(d).redMul(j);\n      // Y3 = F * (E - D)\n      ny = f.redMul(e.redSub(d));\n      // Z3 = F * J\n      nz = f.redMul(j);\n    }\n  } else {\n    // E = C + D\n    var e = c.redAdd(d);\n    // H = (c * Z1)^2\n    var h = this.curve._mulC(this.z).redSqr();\n    // J = E - 2 * H\n    var j = e.redSub(h).redSub(h);\n    // X3 = c * (B - E) * J\n    nx = this.curve._mulC(b.redISub(e)).redMul(j);\n    // Y3 = c * E * (C - D)\n    ny = this.curve._mulC(e).redMul(c.redISub(d));\n    // Z3 = E * J\n    nz = e.redMul(j);\n  }\n  return this.curve.point(nx, ny, nz);\n};\n\nPoint.prototype.dbl = function dbl() {\n  if (this.isInfinity())\n    return this;\n\n  // Double in extended coordinates\n  if (this.curve.extended)\n    return this._extDbl();\n  else\n    return this._projDbl();\n};\n\nPoint.prototype._extAdd = function _extAdd(p) {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html\n  //     #addition-add-2008-hwcd-3\n  // 8M\n\n  // A = (Y1 - X1) * (Y2 - X2)\n  var a = this.y.redSub(this.x).redMul(p.y.redSub(p.x));\n  // B = (Y1 + X1) * (Y2 + X2)\n  var b = this.y.redAdd(this.x).redMul(p.y.redAdd(p.x));\n  // C = T1 * k * T2\n  var c = this.t.redMul(this.curve.dd).redMul(p.t);\n  // D = Z1 * 2 * Z2\n  var d = this.z.redMul(p.z.redAdd(p.z));\n  // E = B - A\n  var e = b.redSub(a);\n  // F = D - C\n  var f = d.redSub(c);\n  // G = D + C\n  var g = d.redAdd(c);\n  // H = B + A\n  var h = b.redAdd(a);\n  // X3 = E * F\n  var nx = e.redMul(f);\n  // Y3 = G * H\n  var ny = g.redMul(h);\n  // T3 = E * H\n  var nt = e.redMul(h);\n  // Z3 = F * G\n  var nz = f.redMul(g);\n  return this.curve.point(nx, ny, nz, nt);\n};\n\nPoint.prototype._projAdd = function _projAdd(p) {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-projective.html\n  //     #addition-add-2008-bbjlp\n  //     #addition-add-2007-bl\n  // 10M + 1S\n\n  // A = Z1 * Z2\n  var a = this.z.redMul(p.z);\n  // B = A^2\n  var b = a.redSqr();\n  // C = X1 * X2\n  var c = this.x.redMul(p.x);\n  // D = Y1 * Y2\n  var d = this.y.redMul(p.y);\n  // E = d * C * D\n  var e = this.curve.d.redMul(c).redMul(d);\n  // F = B - E\n  var f = b.redSub(e);\n  // G = B + E\n  var g = b.redAdd(e);\n  // X3 = A * F * ((X1 + Y1) * (X2 + Y2) - C - D)\n  var tmp = this.x.redAdd(this.y).redMul(p.x.redAdd(p.y)).redISub(c).redISub(d);\n  var nx = a.redMul(f).redMul(tmp);\n  var ny;\n  var nz;\n  if (this.curve.twisted) {\n    // Y3 = A * G * (D - a * C)\n    ny = a.redMul(g).redMul(d.redSub(this.curve._mulA(c)));\n    // Z3 = F * G\n    nz = f.redMul(g);\n  } else {\n    // Y3 = A * G * (D - C)\n    ny = a.redMul(g).redMul(d.redSub(c));\n    // Z3 = c * F * G\n    nz = this.curve._mulC(f).redMul(g);\n  }\n  return this.curve.point(nx, ny, nz);\n};\n\nPoint.prototype.add = function add(p) {\n  if (this.isInfinity())\n    return p;\n  if (p.isInfinity())\n    return this;\n\n  if (this.curve.extended)\n    return this._extAdd(p);\n  else\n    return this._projAdd(p);\n};\n\nPoint.prototype.mul = function mul(k) {\n  if (this._hasDoubles(k))\n    return this.curve._fixedNafMul(this, k);\n  else\n    return this.curve._wnafMul(this, k);\n};\n\nPoint.prototype.mulAdd = function mulAdd(k1, p, k2) {\n  return this.curve._wnafMulAdd(1, [ this, p ], [ k1, k2 ], 2, false);\n};\n\nPoint.prototype.jmulAdd = function jmulAdd(k1, p, k2) {\n  return this.curve._wnafMulAdd(1, [ this, p ], [ k1, k2 ], 2, true);\n};\n\nPoint.prototype.normalize = function normalize() {\n  if (this.zOne)\n    return this;\n\n  // Normalize coordinates\n  var zi = this.z.redInvm();\n  this.x = this.x.redMul(zi);\n  this.y = this.y.redMul(zi);\n  if (this.t)\n    this.t = this.t.redMul(zi);\n  this.z = this.curve.one;\n  this.zOne = true;\n  return this;\n};\n\nPoint.prototype.neg = function neg() {\n  return this.curve.point(this.x.redNeg(),\n                          this.y,\n                          this.z,\n                          this.t && this.t.redNeg());\n};\n\nPoint.prototype.getX = function getX() {\n  this.normalize();\n  return this.x.fromRed();\n};\n\nPoint.prototype.getY = function getY() {\n  this.normalize();\n  return this.y.fromRed();\n};\n\nPoint.prototype.eq = function eq(other) {\n  return this === other ||\n         this.getX().cmp(other.getX()) === 0 &&\n         this.getY().cmp(other.getY()) === 0;\n};\n\nPoint.prototype.eqXToP = function eqXToP(x) {\n  var rx = x.toRed(this.curve.red).redMul(this.z);\n  if (this.x.cmp(rx) === 0)\n    return true;\n\n  var xc = x.clone();\n  var t = this.curve.redN.redMul(this.z);\n  for (;;) {\n    xc.iadd(this.curve.n);\n    if (xc.cmp(this.curve.p) >= 0)\n      return false;\n\n    rx.redIAdd(t);\n    if (this.x.cmp(rx) === 0)\n      return true;\n  }\n};\n\n// Compatibility with BaseCurve\nPoint.prototype.toP = Point.prototype.normalize;\nPoint.prototype.mixedAdd = Point.prototype.add;\n","'use strict';\n\nvar curve = exports;\n\ncurve.base = require('./base');\ncurve.short = require('./short');\ncurve.mont = require('./mont');\ncurve.edwards = require('./edwards');\n","'use strict';\n\nvar BN = require('bn.js');\nvar inherits = require('inherits');\nvar Base = require('./base');\n\nvar utils = require('../utils');\n\nfunction MontCurve(conf) {\n  Base.call(this, 'mont', conf);\n\n  this.a = new BN(conf.a, 16).toRed(this.red);\n  this.b = new BN(conf.b, 16).toRed(this.red);\n  this.i4 = new BN(4).toRed(this.red).redInvm();\n  this.two = new BN(2).toRed(this.red);\n  this.a24 = this.i4.redMul(this.a.redAdd(this.two));\n}\ninherits(MontCurve, Base);\nmodule.exports = MontCurve;\n\nMontCurve.prototype.validate = function validate(point) {\n  var x = point.normalize().x;\n  var x2 = x.redSqr();\n  var rhs = x2.redMul(x).redAdd(x2.redMul(this.a)).redAdd(x);\n  var y = rhs.redSqrt();\n\n  return y.redSqr().cmp(rhs) === 0;\n};\n\nfunction Point(curve, x, z) {\n  Base.BasePoint.call(this, curve, 'projective');\n  if (x === null && z === null) {\n    this.x = this.curve.one;\n    this.z = this.curve.zero;\n  } else {\n    this.x = new BN(x, 16);\n    this.z = new BN(z, 16);\n    if (!this.x.red)\n      this.x = this.x.toRed(this.curve.red);\n    if (!this.z.red)\n      this.z = this.z.toRed(this.curve.red);\n  }\n}\ninherits(Point, Base.BasePoint);\n\nMontCurve.prototype.decodePoint = function decodePoint(bytes, enc) {\n  return this.point(utils.toArray(bytes, enc), 1);\n};\n\nMontCurve.prototype.point = function point(x, z) {\n  return new Point(this, x, z);\n};\n\nMontCurve.prototype.pointFromJSON = function pointFromJSON(obj) {\n  return Point.fromJSON(this, obj);\n};\n\nPoint.prototype.precompute = function precompute() {\n  // No-op\n};\n\nPoint.prototype._encode = function _encode() {\n  return this.getX().toArray('be', this.curve.p.byteLength());\n};\n\nPoint.fromJSON = function fromJSON(curve, obj) {\n  return new Point(curve, obj[0], obj[1] || curve.one);\n};\n\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +\n      ' z: ' + this.z.fromRed().toString(16, 2) + '>';\n};\n\nPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.z.cmpn(0) === 0;\n};\n\nPoint.prototype.dbl = function dbl() {\n  // http://hyperelliptic.org/EFD/g1p/auto-montgom-xz.html#doubling-dbl-1987-m-3\n  // 2M + 2S + 4A\n\n  // A = X1 + Z1\n  var a = this.x.redAdd(this.z);\n  // AA = A^2\n  var aa = a.redSqr();\n  // B = X1 - Z1\n  var b = this.x.redSub(this.z);\n  // BB = B^2\n  var bb = b.redSqr();\n  // C = AA - BB\n  var c = aa.redSub(bb);\n  // X3 = AA * BB\n  var nx = aa.redMul(bb);\n  // Z3 = C * (BB + A24 * C)\n  var nz = c.redMul(bb.redAdd(this.curve.a24.redMul(c)));\n  return this.curve.point(nx, nz);\n};\n\nPoint.prototype.add = function add() {\n  throw new Error('Not supported on Montgomery curve');\n};\n\nPoint.prototype.diffAdd = function diffAdd(p, diff) {\n  // http://hyperelliptic.org/EFD/g1p/auto-montgom-xz.html#diffadd-dadd-1987-m-3\n  // 4M + 2S + 6A\n\n  // A = X2 + Z2\n  var a = this.x.redAdd(this.z);\n  // B = X2 - Z2\n  var b = this.x.redSub(this.z);\n  // C = X3 + Z3\n  var c = p.x.redAdd(p.z);\n  // D = X3 - Z3\n  var d = p.x.redSub(p.z);\n  // DA = D * A\n  var da = d.redMul(a);\n  // CB = C * B\n  var cb = c.redMul(b);\n  // X5 = Z1 * (DA + CB)^2\n  var nx = diff.z.redMul(da.redAdd(cb).redSqr());\n  // Z5 = X1 * (DA - CB)^2\n  var nz = diff.x.redMul(da.redISub(cb).redSqr());\n  return this.curve.point(nx, nz);\n};\n\nPoint.prototype.mul = function mul(k) {\n  var t = k.clone();\n  var a = this; // (N / 2) * Q + Q\n  var b = this.curve.point(null, null); // (N / 2) * Q\n  var c = this; // Q\n\n  for (var bits = []; t.cmpn(0) !== 0; t.iushrn(1))\n    bits.push(t.andln(1));\n\n  for (var i = bits.length - 1; i >= 0; i--) {\n    if (bits[i] === 0) {\n      // N * Q + Q = ((N / 2) * Q + Q)) + (N / 2) * Q\n      a = a.diffAdd(b, c);\n      // N * Q = 2 * ((N / 2) * Q + Q))\n      b = b.dbl();\n    } else {\n      // N * Q = ((N / 2) * Q + Q) + ((N / 2) * Q)\n      b = a.diffAdd(b, c);\n      // N * Q + Q = 2 * ((N / 2) * Q + Q)\n      a = a.dbl();\n    }\n  }\n  return b;\n};\n\nPoint.prototype.mulAdd = function mulAdd() {\n  throw new Error('Not supported on Montgomery curve');\n};\n\nPoint.prototype.jumlAdd = function jumlAdd() {\n  throw new Error('Not supported on Montgomery curve');\n};\n\nPoint.prototype.eq = function eq(other) {\n  return this.getX().cmp(other.getX()) === 0;\n};\n\nPoint.prototype.normalize = function normalize() {\n  this.x = this.x.redMul(this.z.redInvm());\n  this.z = this.curve.one;\n  return this;\n};\n\nPoint.prototype.getX = function getX() {\n  // Normalize coordinates\n  this.normalize();\n\n  return this.x.fromRed();\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar BN = require('bn.js');\nvar inherits = require('inherits');\nvar Base = require('./base');\n\nvar assert = utils.assert;\n\nfunction ShortCurve(conf) {\n  Base.call(this, 'short', conf);\n\n  this.a = new BN(conf.a, 16).toRed(this.red);\n  this.b = new BN(conf.b, 16).toRed(this.red);\n  this.tinv = this.two.redInvm();\n\n  this.zeroA = this.a.fromRed().cmpn(0) === 0;\n  this.threeA = this.a.fromRed().sub(this.p).cmpn(-3) === 0;\n\n  // If the curve is endomorphic, precalculate beta and lambda\n  this.endo = this._getEndomorphism(conf);\n  this._endoWnafT1 = new Array(4);\n  this._endoWnafT2 = new Array(4);\n}\ninherits(ShortCurve, Base);\nmodule.exports = ShortCurve;\n\nShortCurve.prototype._getEndomorphism = function _getEndomorphism(conf) {\n  // No efficient endomorphism\n  if (!this.zeroA || !this.g || !this.n || this.p.modn(3) !== 1)\n    return;\n\n  // Compute beta and lambda, that lambda * P = (beta * Px; Py)\n  var beta;\n  var lambda;\n  if (conf.beta) {\n    beta = new BN(conf.beta, 16).toRed(this.red);\n  } else {\n    var betas = this._getEndoRoots(this.p);\n    // Choose the smallest beta\n    beta = betas[0].cmp(betas[1]) < 0 ? betas[0] : betas[1];\n    beta = beta.toRed(this.red);\n  }\n  if (conf.lambda) {\n    lambda = new BN(conf.lambda, 16);\n  } else {\n    // Choose the lambda that is matching selected beta\n    var lambdas = this._getEndoRoots(this.n);\n    if (this.g.mul(lambdas[0]).x.cmp(this.g.x.redMul(beta)) === 0) {\n      lambda = lambdas[0];\n    } else {\n      lambda = lambdas[1];\n      assert(this.g.mul(lambda).x.cmp(this.g.x.redMul(beta)) === 0);\n    }\n  }\n\n  // Get basis vectors, used for balanced length-two representation\n  var basis;\n  if (conf.basis) {\n    basis = conf.basis.map(function(vec) {\n      return {\n        a: new BN(vec.a, 16),\n        b: new BN(vec.b, 16)\n      };\n    });\n  } else {\n    basis = this._getEndoBasis(lambda);\n  }\n\n  return {\n    beta: beta,\n    lambda: lambda,\n    basis: basis\n  };\n};\n\nShortCurve.prototype._getEndoRoots = function _getEndoRoots(num) {\n  // Find roots of for x^2 + x + 1 in F\n  // Root = (-1 +- Sqrt(-3)) / 2\n  //\n  var red = num === this.p ? this.red : BN.mont(num);\n  var tinv = new BN(2).toRed(red).redInvm();\n  var ntinv = tinv.redNeg();\n\n  var s = new BN(3).toRed(red).redNeg().redSqrt().redMul(tinv);\n\n  var l1 = ntinv.redAdd(s).fromRed();\n  var l2 = ntinv.redSub(s).fromRed();\n  return [ l1, l2 ];\n};\n\nShortCurve.prototype._getEndoBasis = function _getEndoBasis(lambda) {\n  // aprxSqrt >= sqrt(this.n)\n  var aprxSqrt = this.n.ushrn(Math.floor(this.n.bitLength() / 2));\n\n  // 3.74\n  // Run EGCD, until r(L + 1) < aprxSqrt\n  var u = lambda;\n  var v = this.n.clone();\n  var x1 = new BN(1);\n  var y1 = new BN(0);\n  var x2 = new BN(0);\n  var y2 = new BN(1);\n\n  // NOTE: all vectors are roots of: a + b * lambda = 0 (mod n)\n  var a0;\n  var b0;\n  // First vector\n  var a1;\n  var b1;\n  // Second vector\n  var a2;\n  var b2;\n\n  var prevR;\n  var i = 0;\n  var r;\n  var x;\n  while (u.cmpn(0) !== 0) {\n    var q = v.div(u);\n    r = v.sub(q.mul(u));\n    x = x2.sub(q.mul(x1));\n    var y = y2.sub(q.mul(y1));\n\n    if (!a1 && r.cmp(aprxSqrt) < 0) {\n      a0 = prevR.neg();\n      b0 = x1;\n      a1 = r.neg();\n      b1 = x;\n    } else if (a1 && ++i === 2) {\n      break;\n    }\n    prevR = r;\n\n    v = u;\n    u = r;\n    x2 = x1;\n    x1 = x;\n    y2 = y1;\n    y1 = y;\n  }\n  a2 = r.neg();\n  b2 = x;\n\n  var len1 = a1.sqr().add(b1.sqr());\n  var len2 = a2.sqr().add(b2.sqr());\n  if (len2.cmp(len1) >= 0) {\n    a2 = a0;\n    b2 = b0;\n  }\n\n  // Normalize signs\n  if (a1.negative) {\n    a1 = a1.neg();\n    b1 = b1.neg();\n  }\n  if (a2.negative) {\n    a2 = a2.neg();\n    b2 = b2.neg();\n  }\n\n  return [\n    { a: a1, b: b1 },\n    { a: a2, b: b2 }\n  ];\n};\n\nShortCurve.prototype._endoSplit = function _endoSplit(k) {\n  var basis = this.endo.basis;\n  var v1 = basis[0];\n  var v2 = basis[1];\n\n  var c1 = v2.b.mul(k).divRound(this.n);\n  var c2 = v1.b.neg().mul(k).divRound(this.n);\n\n  var p1 = c1.mul(v1.a);\n  var p2 = c2.mul(v2.a);\n  var q1 = c1.mul(v1.b);\n  var q2 = c2.mul(v2.b);\n\n  // Calculate answer\n  var k1 = k.sub(p1).sub(p2);\n  var k2 = q1.add(q2).neg();\n  return { k1: k1, k2: k2 };\n};\n\nShortCurve.prototype.pointFromX = function pointFromX(x, odd) {\n  x = new BN(x, 16);\n  if (!x.red)\n    x = x.toRed(this.red);\n\n  var y2 = x.redSqr().redMul(x).redIAdd(x.redMul(this.a)).redIAdd(this.b);\n  var y = y2.redSqrt();\n  if (y.redSqr().redSub(y2).cmp(this.zero) !== 0)\n    throw new Error('invalid point');\n\n  // XXX Is there any way to tell if the number is odd without converting it\n  // to non-red form?\n  var isOdd = y.fromRed().isOdd();\n  if (odd && !isOdd || !odd && isOdd)\n    y = y.redNeg();\n\n  return this.point(x, y);\n};\n\nShortCurve.prototype.validate = function validate(point) {\n  if (point.inf)\n    return true;\n\n  var x = point.x;\n  var y = point.y;\n\n  var ax = this.a.redMul(x);\n  var rhs = x.redSqr().redMul(x).redIAdd(ax).redIAdd(this.b);\n  return y.redSqr().redISub(rhs).cmpn(0) === 0;\n};\n\nShortCurve.prototype._endoWnafMulAdd =\n    function _endoWnafMulAdd(points, coeffs, jacobianResult) {\n  var npoints = this._endoWnafT1;\n  var ncoeffs = this._endoWnafT2;\n  for (var i = 0; i < points.length; i++) {\n    var split = this._endoSplit(coeffs[i]);\n    var p = points[i];\n    var beta = p._getBeta();\n\n    if (split.k1.negative) {\n      split.k1.ineg();\n      p = p.neg(true);\n    }\n    if (split.k2.negative) {\n      split.k2.ineg();\n      beta = beta.neg(true);\n    }\n\n    npoints[i * 2] = p;\n    npoints[i * 2 + 1] = beta;\n    ncoeffs[i * 2] = split.k1;\n    ncoeffs[i * 2 + 1] = split.k2;\n  }\n  var res = this._wnafMulAdd(1, npoints, ncoeffs, i * 2, jacobianResult);\n\n  // Clean-up references to points and coefficients\n  for (var j = 0; j < i * 2; j++) {\n    npoints[j] = null;\n    ncoeffs[j] = null;\n  }\n  return res;\n};\n\nfunction Point(curve, x, y, isRed) {\n  Base.BasePoint.call(this, curve, 'affine');\n  if (x === null && y === null) {\n    this.x = null;\n    this.y = null;\n    this.inf = true;\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    // Force redgomery representation when loading from JSON\n    if (isRed) {\n      this.x.forceRed(this.curve.red);\n      this.y.forceRed(this.curve.red);\n    }\n    if (!this.x.red)\n      this.x = this.x.toRed(this.curve.red);\n    if (!this.y.red)\n      this.y = this.y.toRed(this.curve.red);\n    this.inf = false;\n  }\n}\ninherits(Point, Base.BasePoint);\n\nShortCurve.prototype.point = function point(x, y, isRed) {\n  return new Point(this, x, y, isRed);\n};\n\nShortCurve.prototype.pointFromJSON = function pointFromJSON(obj, red) {\n  return Point.fromJSON(this, obj, red);\n};\n\nPoint.prototype._getBeta = function _getBeta() {\n  if (!this.curve.endo)\n    return;\n\n  var pre = this.precomputed;\n  if (pre && pre.beta)\n    return pre.beta;\n\n  var beta = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);\n  if (pre) {\n    var curve = this.curve;\n    var endoMul = function(p) {\n      return curve.point(p.x.redMul(curve.endo.beta), p.y);\n    };\n    pre.beta = beta;\n    beta.precomputed = {\n      beta: null,\n      naf: pre.naf && {\n        wnd: pre.naf.wnd,\n        points: pre.naf.points.map(endoMul)\n      },\n      doubles: pre.doubles && {\n        step: pre.doubles.step,\n        points: pre.doubles.points.map(endoMul)\n      }\n    };\n  }\n  return beta;\n};\n\nPoint.prototype.toJSON = function toJSON() {\n  if (!this.precomputed)\n    return [ this.x, this.y ];\n\n  return [ this.x, this.y, this.precomputed && {\n    doubles: this.precomputed.doubles && {\n      step: this.precomputed.doubles.step,\n      points: this.precomputed.doubles.points.slice(1)\n    },\n    naf: this.precomputed.naf && {\n      wnd: this.precomputed.naf.wnd,\n      points: this.precomputed.naf.points.slice(1)\n    }\n  } ];\n};\n\nPoint.fromJSON = function fromJSON(curve, obj, red) {\n  if (typeof obj === 'string')\n    obj = JSON.parse(obj);\n  var res = curve.point(obj[0], obj[1], red);\n  if (!obj[2])\n    return res;\n\n  function obj2point(obj) {\n    return curve.point(obj[0], obj[1], red);\n  }\n\n  var pre = obj[2];\n  res.precomputed = {\n    beta: null,\n    doubles: pre.doubles && {\n      step: pre.doubles.step,\n      points: [ res ].concat(pre.doubles.points.map(obj2point))\n    },\n    naf: pre.naf && {\n      wnd: pre.naf.wnd,\n      points: [ res ].concat(pre.naf.points.map(obj2point))\n    }\n  };\n  return res;\n};\n\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +\n      ' y: ' + this.y.fromRed().toString(16, 2) + '>';\n};\n\nPoint.prototype.isInfinity = function isInfinity() {\n  return this.inf;\n};\n\nPoint.prototype.add = function add(p) {\n  // O + P = P\n  if (this.inf)\n    return p;\n\n  // P + O = P\n  if (p.inf)\n    return this;\n\n  // P + P = 2P\n  if (this.eq(p))\n    return this.dbl();\n\n  // P + (-P) = O\n  if (this.neg().eq(p))\n    return this.curve.point(null, null);\n\n  // P + Q = O\n  if (this.x.cmp(p.x) === 0)\n    return this.curve.point(null, null);\n\n  var c = this.y.redSub(p.y);\n  if (c.cmpn(0) !== 0)\n    c = c.redMul(this.x.redSub(p.x).redInvm());\n  var nx = c.redSqr().redISub(this.x).redISub(p.x);\n  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\n  return this.curve.point(nx, ny);\n};\n\nPoint.prototype.dbl = function dbl() {\n  if (this.inf)\n    return this;\n\n  // 2P = O\n  var ys1 = this.y.redAdd(this.y);\n  if (ys1.cmpn(0) === 0)\n    return this.curve.point(null, null);\n\n  var a = this.curve.a;\n\n  var x2 = this.x.redSqr();\n  var dyinv = ys1.redInvm();\n  var c = x2.redAdd(x2).redIAdd(x2).redIAdd(a).redMul(dyinv);\n\n  var nx = c.redSqr().redISub(this.x.redAdd(this.x));\n  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\n  return this.curve.point(nx, ny);\n};\n\nPoint.prototype.getX = function getX() {\n  return this.x.fromRed();\n};\n\nPoint.prototype.getY = function getY() {\n  return this.y.fromRed();\n};\n\nPoint.prototype.mul = function mul(k) {\n  k = new BN(k, 16);\n\n  if (this._hasDoubles(k))\n    return this.curve._fixedNafMul(this, k);\n  else if (this.curve.endo)\n    return this.curve._endoWnafMulAdd([ this ], [ k ]);\n  else\n    return this.curve._wnafMul(this, k);\n};\n\nPoint.prototype.mulAdd = function mulAdd(k1, p2, k2) {\n  var points = [ this, p2 ];\n  var coeffs = [ k1, k2 ];\n  if (this.curve.endo)\n    return this.curve._endoWnafMulAdd(points, coeffs);\n  else\n    return this.curve._wnafMulAdd(1, points, coeffs, 2);\n};\n\nPoint.prototype.jmulAdd = function jmulAdd(k1, p2, k2) {\n  var points = [ this, p2 ];\n  var coeffs = [ k1, k2 ];\n  if (this.curve.endo)\n    return this.curve._endoWnafMulAdd(points, coeffs, true);\n  else\n    return this.curve._wnafMulAdd(1, points, coeffs, 2, true);\n};\n\nPoint.prototype.eq = function eq(p) {\n  return this === p ||\n         this.inf === p.inf &&\n             (this.inf || this.x.cmp(p.x) === 0 && this.y.cmp(p.y) === 0);\n};\n\nPoint.prototype.neg = function neg(_precompute) {\n  if (this.inf)\n    return this;\n\n  var res = this.curve.point(this.x, this.y.redNeg());\n  if (_precompute && this.precomputed) {\n    var pre = this.precomputed;\n    var negate = function(p) {\n      return p.neg();\n    };\n    res.precomputed = {\n      naf: pre.naf && {\n        wnd: pre.naf.wnd,\n        points: pre.naf.points.map(negate)\n      },\n      doubles: pre.doubles && {\n        step: pre.doubles.step,\n        points: pre.doubles.points.map(negate)\n      }\n    };\n  }\n  return res;\n};\n\nPoint.prototype.toJ = function toJ() {\n  if (this.inf)\n    return this.curve.jpoint(null, null, null);\n\n  var res = this.curve.jpoint(this.x, this.y, this.curve.one);\n  return res;\n};\n\nfunction JPoint(curve, x, y, z) {\n  Base.BasePoint.call(this, curve, 'jacobian');\n  if (x === null && y === null && z === null) {\n    this.x = this.curve.one;\n    this.y = this.curve.one;\n    this.z = new BN(0);\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    this.z = new BN(z, 16);\n  }\n  if (!this.x.red)\n    this.x = this.x.toRed(this.curve.red);\n  if (!this.y.red)\n    this.y = this.y.toRed(this.curve.red);\n  if (!this.z.red)\n    this.z = this.z.toRed(this.curve.red);\n\n  this.zOne = this.z === this.curve.one;\n}\ninherits(JPoint, Base.BasePoint);\n\nShortCurve.prototype.jpoint = function jpoint(x, y, z) {\n  return new JPoint(this, x, y, z);\n};\n\nJPoint.prototype.toP = function toP() {\n  if (this.isInfinity())\n    return this.curve.point(null, null);\n\n  var zinv = this.z.redInvm();\n  var zinv2 = zinv.redSqr();\n  var ax = this.x.redMul(zinv2);\n  var ay = this.y.redMul(zinv2).redMul(zinv);\n\n  return this.curve.point(ax, ay);\n};\n\nJPoint.prototype.neg = function neg() {\n  return this.curve.jpoint(this.x, this.y.redNeg(), this.z);\n};\n\nJPoint.prototype.add = function add(p) {\n  // O + P = P\n  if (this.isInfinity())\n    return p;\n\n  // P + O = P\n  if (p.isInfinity())\n    return this;\n\n  // 12M + 4S + 7A\n  var pz2 = p.z.redSqr();\n  var z2 = this.z.redSqr();\n  var u1 = this.x.redMul(pz2);\n  var u2 = p.x.redMul(z2);\n  var s1 = this.y.redMul(pz2.redMul(p.z));\n  var s2 = p.y.redMul(z2.redMul(this.z));\n\n  var h = u1.redSub(u2);\n  var r = s1.redSub(s2);\n  if (h.cmpn(0) === 0) {\n    if (r.cmpn(0) !== 0)\n      return this.curve.jpoint(null, null, null);\n    else\n      return this.dbl();\n  }\n\n  var h2 = h.redSqr();\n  var h3 = h2.redMul(h);\n  var v = u1.redMul(h2);\n\n  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\n  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\n  var nz = this.z.redMul(p.z).redMul(h);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.mixedAdd = function mixedAdd(p) {\n  // O + P = P\n  if (this.isInfinity())\n    return p.toJ();\n\n  // P + O = P\n  if (p.isInfinity())\n    return this;\n\n  // 8M + 3S + 7A\n  var z2 = this.z.redSqr();\n  var u1 = this.x;\n  var u2 = p.x.redMul(z2);\n  var s1 = this.y;\n  var s2 = p.y.redMul(z2).redMul(this.z);\n\n  var h = u1.redSub(u2);\n  var r = s1.redSub(s2);\n  if (h.cmpn(0) === 0) {\n    if (r.cmpn(0) !== 0)\n      return this.curve.jpoint(null, null, null);\n    else\n      return this.dbl();\n  }\n\n  var h2 = h.redSqr();\n  var h3 = h2.redMul(h);\n  var v = u1.redMul(h2);\n\n  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\n  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\n  var nz = this.z.redMul(h);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.dblp = function dblp(pow) {\n  if (pow === 0)\n    return this;\n  if (this.isInfinity())\n    return this;\n  if (!pow)\n    return this.dbl();\n\n  if (this.curve.zeroA || this.curve.threeA) {\n    var r = this;\n    for (var i = 0; i < pow; i++)\n      r = r.dbl();\n    return r;\n  }\n\n  // 1M + 2S + 1A + N * (4S + 5M + 8A)\n  // N = 1 => 6M + 6S + 9A\n  var a = this.curve.a;\n  var tinv = this.curve.tinv;\n\n  var jx = this.x;\n  var jy = this.y;\n  var jz = this.z;\n  var jz4 = jz.redSqr().redSqr();\n\n  // Reuse results\n  var jyd = jy.redAdd(jy);\n  for (var i = 0; i < pow; i++) {\n    var jx2 = jx.redSqr();\n    var jyd2 = jyd.redSqr();\n    var jyd4 = jyd2.redSqr();\n    var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\n\n    var t1 = jx.redMul(jyd2);\n    var nx = c.redSqr().redISub(t1.redAdd(t1));\n    var t2 = t1.redISub(nx);\n    var dny = c.redMul(t2);\n    dny = dny.redIAdd(dny).redISub(jyd4);\n    var nz = jyd.redMul(jz);\n    if (i + 1 < pow)\n      jz4 = jz4.redMul(jyd4);\n\n    jx = nx;\n    jz = nz;\n    jyd = dny;\n  }\n\n  return this.curve.jpoint(jx, jyd.redMul(tinv), jz);\n};\n\nJPoint.prototype.dbl = function dbl() {\n  if (this.isInfinity())\n    return this;\n\n  if (this.curve.zeroA)\n    return this._zeroDbl();\n  else if (this.curve.threeA)\n    return this._threeDbl();\n  else\n    return this._dbl();\n};\n\nJPoint.prototype._zeroDbl = function _zeroDbl() {\n  var nx;\n  var ny;\n  var nz;\n  // Z = 1\n  if (this.zOne) {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\n    //     #doubling-mdbl-2007-bl\n    // 1M + 5S + 14A\n\n    // XX = X1^2\n    var xx = this.x.redSqr();\n    // YY = Y1^2\n    var yy = this.y.redSqr();\n    // YYYY = YY^2\n    var yyyy = yy.redSqr();\n    // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n    s = s.redIAdd(s);\n    // M = 3 * XX + a; a = 0\n    var m = xx.redAdd(xx).redIAdd(xx);\n    // T = M ^ 2 - 2*S\n    var t = m.redSqr().redISub(s).redISub(s);\n\n    // 8 * YYYY\n    var yyyy8 = yyyy.redIAdd(yyyy);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n\n    // X3 = T\n    nx = t;\n    // Y3 = M * (S - T) - 8 * YYYY\n    ny = m.redMul(s.redISub(t)).redISub(yyyy8);\n    // Z3 = 2*Y1\n    nz = this.y.redAdd(this.y);\n  } else {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\n    //     #doubling-dbl-2009-l\n    // 2M + 5S + 13A\n\n    // A = X1^2\n    var a = this.x.redSqr();\n    // B = Y1^2\n    var b = this.y.redSqr();\n    // C = B^2\n    var c = b.redSqr();\n    // D = 2 * ((X1 + B)^2 - A - C)\n    var d = this.x.redAdd(b).redSqr().redISub(a).redISub(c);\n    d = d.redIAdd(d);\n    // E = 3 * A\n    var e = a.redAdd(a).redIAdd(a);\n    // F = E^2\n    var f = e.redSqr();\n\n    // 8 * C\n    var c8 = c.redIAdd(c);\n    c8 = c8.redIAdd(c8);\n    c8 = c8.redIAdd(c8);\n\n    // X3 = F - 2 * D\n    nx = f.redISub(d).redISub(d);\n    // Y3 = E * (D - X3) - 8 * C\n    ny = e.redMul(d.redISub(nx)).redISub(c8);\n    // Z3 = 2 * Y1 * Z1\n    nz = this.y.redMul(this.z);\n    nz = nz.redIAdd(nz);\n  }\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype._threeDbl = function _threeDbl() {\n  var nx;\n  var ny;\n  var nz;\n  // Z = 1\n  if (this.zOne) {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html\n    //     #doubling-mdbl-2007-bl\n    // 1M + 5S + 15A\n\n    // XX = X1^2\n    var xx = this.x.redSqr();\n    // YY = Y1^2\n    var yy = this.y.redSqr();\n    // YYYY = YY^2\n    var yyyy = yy.redSqr();\n    // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n    s = s.redIAdd(s);\n    // M = 3 * XX + a\n    var m = xx.redAdd(xx).redIAdd(xx).redIAdd(this.curve.a);\n    // T = M^2 - 2 * S\n    var t = m.redSqr().redISub(s).redISub(s);\n    // X3 = T\n    nx = t;\n    // Y3 = M * (S - T) - 8 * YYYY\n    var yyyy8 = yyyy.redIAdd(yyyy);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    ny = m.redMul(s.redISub(t)).redISub(yyyy8);\n    // Z3 = 2 * Y1\n    nz = this.y.redAdd(this.y);\n  } else {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html#doubling-dbl-2001-b\n    // 3M + 5S\n\n    // delta = Z1^2\n    var delta = this.z.redSqr();\n    // gamma = Y1^2\n    var gamma = this.y.redSqr();\n    // beta = X1 * gamma\n    var beta = this.x.redMul(gamma);\n    // alpha = 3 * (X1 - delta) * (X1 + delta)\n    var alpha = this.x.redSub(delta).redMul(this.x.redAdd(delta));\n    alpha = alpha.redAdd(alpha).redIAdd(alpha);\n    // X3 = alpha^2 - 8 * beta\n    var beta4 = beta.redIAdd(beta);\n    beta4 = beta4.redIAdd(beta4);\n    var beta8 = beta4.redAdd(beta4);\n    nx = alpha.redSqr().redISub(beta8);\n    // Z3 = (Y1 + Z1)^2 - gamma - delta\n    nz = this.y.redAdd(this.z).redSqr().redISub(gamma).redISub(delta);\n    // Y3 = alpha * (4 * beta - X3) - 8 * gamma^2\n    var ggamma8 = gamma.redSqr();\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ny = alpha.redMul(beta4.redISub(nx)).redISub(ggamma8);\n  }\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype._dbl = function _dbl() {\n  var a = this.curve.a;\n\n  // 4M + 6S + 10A\n  var jx = this.x;\n  var jy = this.y;\n  var jz = this.z;\n  var jz4 = jz.redSqr().redSqr();\n\n  var jx2 = jx.redSqr();\n  var jy2 = jy.redSqr();\n\n  var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\n\n  var jxd4 = jx.redAdd(jx);\n  jxd4 = jxd4.redIAdd(jxd4);\n  var t1 = jxd4.redMul(jy2);\n  var nx = c.redSqr().redISub(t1.redAdd(t1));\n  var t2 = t1.redISub(nx);\n\n  var jyd8 = jy2.redSqr();\n  jyd8 = jyd8.redIAdd(jyd8);\n  jyd8 = jyd8.redIAdd(jyd8);\n  jyd8 = jyd8.redIAdd(jyd8);\n  var ny = c.redMul(t2).redISub(jyd8);\n  var nz = jy.redAdd(jy).redMul(jz);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.trpl = function trpl() {\n  if (!this.curve.zeroA)\n    return this.dbl().add(this);\n\n  // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html#tripling-tpl-2007-bl\n  // 5M + 10S + ...\n\n  // XX = X1^2\n  var xx = this.x.redSqr();\n  // YY = Y1^2\n  var yy = this.y.redSqr();\n  // ZZ = Z1^2\n  var zz = this.z.redSqr();\n  // YYYY = YY^2\n  var yyyy = yy.redSqr();\n  // M = 3 * XX + a * ZZ2; a = 0\n  var m = xx.redAdd(xx).redIAdd(xx);\n  // MM = M^2\n  var mm = m.redSqr();\n  // E = 6 * ((X1 + YY)^2 - XX - YYYY) - MM\n  var e = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n  e = e.redIAdd(e);\n  e = e.redAdd(e).redIAdd(e);\n  e = e.redISub(mm);\n  // EE = E^2\n  var ee = e.redSqr();\n  // T = 16*YYYY\n  var t = yyyy.redIAdd(yyyy);\n  t = t.redIAdd(t);\n  t = t.redIAdd(t);\n  t = t.redIAdd(t);\n  // U = (M + E)^2 - MM - EE - T\n  var u = m.redIAdd(e).redSqr().redISub(mm).redISub(ee).redISub(t);\n  // X3 = 4 * (X1 * EE - 4 * YY * U)\n  var yyu4 = yy.redMul(u);\n  yyu4 = yyu4.redIAdd(yyu4);\n  yyu4 = yyu4.redIAdd(yyu4);\n  var nx = this.x.redMul(ee).redISub(yyu4);\n  nx = nx.redIAdd(nx);\n  nx = nx.redIAdd(nx);\n  // Y3 = 8 * Y1 * (U * (T - U) - E * EE)\n  var ny = this.y.redMul(u.redMul(t.redISub(u)).redISub(e.redMul(ee)));\n  ny = ny.redIAdd(ny);\n  ny = ny.redIAdd(ny);\n  ny = ny.redIAdd(ny);\n  // Z3 = (Z1 + E)^2 - ZZ - EE\n  var nz = this.z.redAdd(e).redSqr().redISub(zz).redISub(ee);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.mul = function mul(k, kbase) {\n  k = new BN(k, kbase);\n\n  return this.curve._wnafMul(this, k);\n};\n\nJPoint.prototype.eq = function eq(p) {\n  if (p.type === 'affine')\n    return this.eq(p.toJ());\n\n  if (this === p)\n    return true;\n\n  // x1 * z2^2 == x2 * z1^2\n  var z2 = this.z.redSqr();\n  var pz2 = p.z.redSqr();\n  if (this.x.redMul(pz2).redISub(p.x.redMul(z2)).cmpn(0) !== 0)\n    return false;\n\n  // y1 * z2^3 == y2 * z1^3\n  var z3 = z2.redMul(this.z);\n  var pz3 = pz2.redMul(p.z);\n  return this.y.redMul(pz3).redISub(p.y.redMul(z3)).cmpn(0) === 0;\n};\n\nJPoint.prototype.eqXToP = function eqXToP(x) {\n  var zs = this.z.redSqr();\n  var rx = x.toRed(this.curve.red).redMul(zs);\n  if (this.x.cmp(rx) === 0)\n    return true;\n\n  var xc = x.clone();\n  var t = this.curve.redN.redMul(zs);\n  for (;;) {\n    xc.iadd(this.curve.n);\n    if (xc.cmp(this.curve.p) >= 0)\n      return false;\n\n    rx.redIAdd(t);\n    if (this.x.cmp(rx) === 0)\n      return true;\n  }\n};\n\nJPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC JPoint Infinity>';\n  return '<EC JPoint x: ' + this.x.toString(16, 2) +\n      ' y: ' + this.y.toString(16, 2) +\n      ' z: ' + this.z.toString(16, 2) + '>';\n};\n\nJPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.z.cmpn(0) === 0;\n};\n","'use strict';\n\nvar curves = exports;\n\nvar hash = require('hash.js');\nvar curve = require('./curve');\nvar utils = require('./utils');\n\nvar assert = utils.assert;\n\nfunction PresetCurve(options) {\n  if (options.type === 'short')\n    this.curve = new curve.short(options);\n  else if (options.type === 'edwards')\n    this.curve = new curve.edwards(options);\n  else\n    this.curve = new curve.mont(options);\n  this.g = this.curve.g;\n  this.n = this.curve.n;\n  this.hash = options.hash;\n\n  assert(this.g.validate(), 'Invalid curve');\n  assert(this.g.mul(this.n).isInfinity(), 'Invalid curve, G*N != O');\n}\ncurves.PresetCurve = PresetCurve;\n\nfunction defineCurve(name, options) {\n  Object.defineProperty(curves, name, {\n    configurable: true,\n    enumerable: true,\n    get: function() {\n      var curve = new PresetCurve(options);\n      Object.defineProperty(curves, name, {\n        configurable: true,\n        enumerable: true,\n        value: curve\n      });\n      return curve;\n    }\n  });\n}\n\ndefineCurve('p192', {\n  type: 'short',\n  prime: 'p192',\n  p: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff',\n  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc',\n  b: '64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1',\n  n: 'ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012',\n    '07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811'\n  ]\n});\n\ndefineCurve('p224', {\n  type: 'short',\n  prime: 'p224',\n  p: 'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001',\n  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe',\n  b: 'b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4',\n  n: 'ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    'b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21',\n    'bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34'\n  ]\n});\n\ndefineCurve('p256', {\n  type: 'short',\n  prime: null,\n  p: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff',\n  a: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc',\n  b: '5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b',\n  n: 'ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296',\n    '4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5'\n  ]\n});\n\ndefineCurve('p384', {\n  type: 'short',\n  prime: null,\n  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'fffffffe ffffffff 00000000 00000000 ffffffff',\n  a: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'fffffffe ffffffff 00000000 00000000 fffffffc',\n  b: 'b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f ' +\n     '5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef',\n  n: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 ' +\n     'f4372ddf 581a0db2 48b0a77a ecec196a ccc52973',\n  hash: hash.sha384,\n  gRed: false,\n  g: [\n    'aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 ' +\n    '5502f25d bf55296c 3a545e38 72760ab7',\n    '3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 ' +\n    '0a60b1ce 1d7e819d 7a431d7c 90ea0e5f'\n  ]\n});\n\ndefineCurve('p521', {\n  type: 'short',\n  prime: null,\n  p: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff',\n  a: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff fffffffc',\n  b: '00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b ' +\n     '99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd ' +\n     '3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00',\n  n: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 ' +\n     'f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409',\n  hash: hash.sha512,\n  gRed: false,\n  g: [\n    '000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 ' +\n    '053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 ' +\n    'a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66',\n    '00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 ' +\n    '579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 ' +\n    '3fad0761 353c7086 a272c240 88be9476 9fd16650'\n  ]\n});\n\ndefineCurve('curve25519', {\n  type: 'mont',\n  prime: 'p25519',\n  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',\n  a: '76d06',\n  b: '1',\n  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '9'\n  ]\n});\n\ndefineCurve('ed25519', {\n  type: 'edwards',\n  prime: 'p25519',\n  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',\n  a: '-1',\n  c: '1',\n  // -121665 * (121666^(-1)) (mod P)\n  d: '52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3',\n  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a',\n\n    // 4/5\n    '6666666666666666666666666666666666666666666666666666666666666658'\n  ]\n});\n\nvar pre;\ntry {\n  pre = require('./precomputed/secp256k1');\n} catch (e) {\n  pre = undefined;\n}\n\ndefineCurve('secp256k1', {\n  type: 'short',\n  prime: 'k256',\n  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f',\n  a: '0',\n  b: '7',\n  n: 'ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141',\n  h: '1',\n  hash: hash.sha256,\n\n  // Precomputed endomorphism\n  beta: '7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee',\n  lambda: '5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72',\n  basis: [\n    {\n      a: '3086d221a7d46bcde86c90e49284eb15',\n      b: '-e4437ed6010e88286f547fa90abfe4c3'\n    },\n    {\n      a: '114ca50f7a8e2f3f657c1108d9d44cfd8',\n      b: '3086d221a7d46bcde86c90e49284eb15'\n    }\n  ],\n\n  gRed: false,\n  g: [\n    '79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798',\n    '483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8',\n    pre\n  ]\n});\n","'use strict';\n\nvar BN = require('bn.js');\nvar HmacDRBG = require('hmac-drbg');\nvar utils = require('../utils');\nvar curves = require('../curves');\nvar rand = require('brorand');\nvar assert = utils.assert;\n\nvar KeyPair = require('./key');\nvar Signature = require('./signature');\n\nfunction EC(options) {\n  if (!(this instanceof EC))\n    return new EC(options);\n\n  // Shortcut `elliptic.ec(curve-name)`\n  if (typeof options === 'string') {\n    assert(curves.hasOwnProperty(options), 'Unknown curve ' + options);\n\n    options = curves[options];\n  }\n\n  // Shortcut for `elliptic.ec(elliptic.curves.curveName)`\n  if (options instanceof curves.PresetCurve)\n    options = { curve: options };\n\n  this.curve = options.curve.curve;\n  this.n = this.curve.n;\n  this.nh = this.n.ushrn(1);\n  this.g = this.curve.g;\n\n  // Point on curve\n  this.g = options.curve.g;\n  this.g.precompute(options.curve.n.bitLength() + 1);\n\n  // Hash for function for DRBG\n  this.hash = options.hash || options.curve.hash;\n}\nmodule.exports = EC;\n\nEC.prototype.keyPair = function keyPair(options) {\n  return new KeyPair(this, options);\n};\n\nEC.prototype.keyFromPrivate = function keyFromPrivate(priv, enc) {\n  return KeyPair.fromPrivate(this, priv, enc);\n};\n\nEC.prototype.keyFromPublic = function keyFromPublic(pub, enc) {\n  return KeyPair.fromPublic(this, pub, enc);\n};\n\nEC.prototype.genKeyPair = function genKeyPair(options) {\n  if (!options)\n    options = {};\n\n  // Instantiate Hmac_DRBG\n  var drbg = new HmacDRBG({\n    hash: this.hash,\n    pers: options.pers,\n    persEnc: options.persEnc || 'utf8',\n    entropy: options.entropy || rand(this.hash.hmacStrength),\n    entropyEnc: options.entropy && options.entropyEnc || 'utf8',\n    nonce: this.n.toArray()\n  });\n\n  var bytes = this.n.byteLength();\n  var ns2 = this.n.sub(new BN(2));\n  do {\n    var priv = new BN(drbg.generate(bytes));\n    if (priv.cmp(ns2) > 0)\n      continue;\n\n    priv.iaddn(1);\n    return this.keyFromPrivate(priv);\n  } while (true);\n};\n\nEC.prototype._truncateToN = function truncateToN(msg, truncOnly) {\n  var delta = msg.byteLength() * 8 - this.n.bitLength();\n  if (delta > 0)\n    msg = msg.ushrn(delta);\n  if (!truncOnly && msg.cmp(this.n) >= 0)\n    return msg.sub(this.n);\n  else\n    return msg;\n};\n\nEC.prototype.sign = function sign(msg, key, enc, options) {\n  if (typeof enc === 'object') {\n    options = enc;\n    enc = null;\n  }\n  if (!options)\n    options = {};\n\n  key = this.keyFromPrivate(key, enc);\n  msg = this._truncateToN(new BN(msg, 16));\n\n  // Zero-extend key to provide enough entropy\n  var bytes = this.n.byteLength();\n  var bkey = key.getPrivate().toArray('be', bytes);\n\n  // Zero-extend nonce to have the same byte size as N\n  var nonce = msg.toArray('be', bytes);\n\n  // Instantiate Hmac_DRBG\n  var drbg = new HmacDRBG({\n    hash: this.hash,\n    entropy: bkey,\n    nonce: nonce,\n    pers: options.pers,\n    persEnc: options.persEnc || 'utf8'\n  });\n\n  // Number of bytes to generate\n  var ns1 = this.n.sub(new BN(1));\n\n  for (var iter = 0; true; iter++) {\n    var k = options.k ?\n        options.k(iter) :\n        new BN(drbg.generate(this.n.byteLength()));\n    k = this._truncateToN(k, true);\n    if (k.cmpn(1) <= 0 || k.cmp(ns1) >= 0)\n      continue;\n\n    var kp = this.g.mul(k);\n    if (kp.isInfinity())\n      continue;\n\n    var kpX = kp.getX();\n    var r = kpX.umod(this.n);\n    if (r.cmpn(0) === 0)\n      continue;\n\n    var s = k.invm(this.n).mul(r.mul(key.getPrivate()).iadd(msg));\n    s = s.umod(this.n);\n    if (s.cmpn(0) === 0)\n      continue;\n\n    var recoveryParam = (kp.getY().isOdd() ? 1 : 0) |\n                        (kpX.cmp(r) !== 0 ? 2 : 0);\n\n    // Use complement of `s`, if it is > `n / 2`\n    if (options.canonical && s.cmp(this.nh) > 0) {\n      s = this.n.sub(s);\n      recoveryParam ^= 1;\n    }\n\n    return new Signature({ r: r, s: s, recoveryParam: recoveryParam });\n  }\n};\n\nEC.prototype.verify = function verify(msg, signature, key, enc) {\n  msg = this._truncateToN(new BN(msg, 16));\n  key = this.keyFromPublic(key, enc);\n  signature = new Signature(signature, 'hex');\n\n  // Perform primitive values validation\n  var r = signature.r;\n  var s = signature.s;\n  if (r.cmpn(1) < 0 || r.cmp(this.n) >= 0)\n    return false;\n  if (s.cmpn(1) < 0 || s.cmp(this.n) >= 0)\n    return false;\n\n  // Validate signature\n  var sinv = s.invm(this.n);\n  var u1 = sinv.mul(msg).umod(this.n);\n  var u2 = sinv.mul(r).umod(this.n);\n\n  if (!this.curve._maxwellTrick) {\n    var p = this.g.mulAdd(u1, key.getPublic(), u2);\n    if (p.isInfinity())\n      return false;\n\n    return p.getX().umod(this.n).cmp(r) === 0;\n  }\n\n  // NOTE: Greg Maxwell's trick, inspired by:\n  // https://git.io/vad3K\n\n  var p = this.g.jmulAdd(u1, key.getPublic(), u2);\n  if (p.isInfinity())\n    return false;\n\n  // Compare `p.x` of Jacobian point with `r`,\n  // this will do `p.x == r * p.z^2` instead of multiplying `p.x` by the\n  // inverse of `p.z^2`\n  return p.eqXToP(r);\n};\n\nEC.prototype.recoverPubKey = function(msg, signature, j, enc) {\n  assert((3 & j) === j, 'The recovery param is more than two bits');\n  signature = new Signature(signature, enc);\n\n  var n = this.n;\n  var e = new BN(msg);\n  var r = signature.r;\n  var s = signature.s;\n\n  // A set LSB signifies that the y-coordinate is odd\n  var isYOdd = j & 1;\n  var isSecondKey = j >> 1;\n  if (r.cmp(this.curve.p.umod(this.curve.n)) >= 0 && isSecondKey)\n    throw new Error('Unable to find sencond key candinate');\n\n  // 1.1. Let x = r + jn.\n  if (isSecondKey)\n    r = this.curve.pointFromX(r.add(this.curve.n), isYOdd);\n  else\n    r = this.curve.pointFromX(r, isYOdd);\n\n  var rInv = signature.r.invm(n);\n  var s1 = n.sub(e).mul(rInv).umod(n);\n  var s2 = s.mul(rInv).umod(n);\n\n  // 1.6.1 Compute Q = r^-1 (sR -  eG)\n  //               Q = r^-1 (sR + -eG)\n  return this.g.mulAdd(s1, r, s2);\n};\n\nEC.prototype.getKeyRecoveryParam = function(e, signature, Q, enc) {\n  signature = new Signature(signature, enc);\n  if (signature.recoveryParam !== null)\n    return signature.recoveryParam;\n\n  for (var i = 0; i < 4; i++) {\n    var Qprime;\n    try {\n      Qprime = this.recoverPubKey(e, signature, i);\n    } catch (e) {\n      continue;\n    }\n\n    if (Qprime.eq(Q))\n      return i;\n  }\n  throw new Error('Unable to find valid recovery factor');\n};\n","'use strict';\n\nvar BN = require('bn.js');\nvar utils = require('../utils');\nvar assert = utils.assert;\n\nfunction KeyPair(ec, options) {\n  this.ec = ec;\n  this.priv = null;\n  this.pub = null;\n\n  // KeyPair(ec, { priv: ..., pub: ... })\n  if (options.priv)\n    this._importPrivate(options.priv, options.privEnc);\n  if (options.pub)\n    this._importPublic(options.pub, options.pubEnc);\n}\nmodule.exports = KeyPair;\n\nKeyPair.fromPublic = function fromPublic(ec, pub, enc) {\n  if (pub instanceof KeyPair)\n    return pub;\n\n  return new KeyPair(ec, {\n    pub: pub,\n    pubEnc: enc\n  });\n};\n\nKeyPair.fromPrivate = function fromPrivate(ec, priv, enc) {\n  if (priv instanceof KeyPair)\n    return priv;\n\n  return new KeyPair(ec, {\n    priv: priv,\n    privEnc: enc\n  });\n};\n\nKeyPair.prototype.validate = function validate() {\n  var pub = this.getPublic();\n\n  if (pub.isInfinity())\n    return { result: false, reason: 'Invalid public key' };\n  if (!pub.validate())\n    return { result: false, reason: 'Public key is not a point' };\n  if (!pub.mul(this.ec.curve.n).isInfinity())\n    return { result: false, reason: 'Public key * N != O' };\n\n  return { result: true, reason: null };\n};\n\nKeyPair.prototype.getPublic = function getPublic(compact, enc) {\n  // compact is optional argument\n  if (typeof compact === 'string') {\n    enc = compact;\n    compact = null;\n  }\n\n  if (!this.pub)\n    this.pub = this.ec.g.mul(this.priv);\n\n  if (!enc)\n    return this.pub;\n\n  return this.pub.encode(enc, compact);\n};\n\nKeyPair.prototype.getPrivate = function getPrivate(enc) {\n  if (enc === 'hex')\n    return this.priv.toString(16, 2);\n  else\n    return this.priv;\n};\n\nKeyPair.prototype._importPrivate = function _importPrivate(key, enc) {\n  this.priv = new BN(key, enc || 16);\n\n  // Ensure that the priv won't be bigger than n, otherwise we may fail\n  // in fixed multiplication method\n  this.priv = this.priv.umod(this.ec.curve.n);\n};\n\nKeyPair.prototype._importPublic = function _importPublic(key, enc) {\n  if (key.x || key.y) {\n    // Montgomery points only have an `x` coordinate.\n    // Weierstrass/Edwards points on the other hand have both `x` and\n    // `y` coordinates.\n    if (this.ec.curve.type === 'mont') {\n      assert(key.x, 'Need x coordinate');\n    } else if (this.ec.curve.type === 'short' ||\n               this.ec.curve.type === 'edwards') {\n      assert(key.x && key.y, 'Need both x and y coordinate');\n    }\n    this.pub = this.ec.curve.point(key.x, key.y);\n    return;\n  }\n  this.pub = this.ec.curve.decodePoint(key, enc);\n};\n\n// ECDH\nKeyPair.prototype.derive = function derive(pub) {\n  return pub.mul(this.priv).getX();\n};\n\n// ECDSA\nKeyPair.prototype.sign = function sign(msg, enc, options) {\n  return this.ec.sign(msg, this, enc, options);\n};\n\nKeyPair.prototype.verify = function verify(msg, signature) {\n  return this.ec.verify(msg, signature, this);\n};\n\nKeyPair.prototype.inspect = function inspect() {\n  return '<Key priv: ' + (this.priv && this.priv.toString(16, 2)) +\n         ' pub: ' + (this.pub && this.pub.inspect()) + ' >';\n};\n","'use strict';\n\nvar BN = require('bn.js');\n\nvar utils = require('../utils');\nvar assert = utils.assert;\n\nfunction Signature(options, enc) {\n  if (options instanceof Signature)\n    return options;\n\n  if (this._importDER(options, enc))\n    return;\n\n  assert(options.r && options.s, 'Signature without r or s');\n  this.r = new BN(options.r, 16);\n  this.s = new BN(options.s, 16);\n  if (options.recoveryParam === undefined)\n    this.recoveryParam = null;\n  else\n    this.recoveryParam = options.recoveryParam;\n}\nmodule.exports = Signature;\n\nfunction Position() {\n  this.place = 0;\n}\n\nfunction getLength(buf, p) {\n  var initial = buf[p.place++];\n  if (!(initial & 0x80)) {\n    return initial;\n  }\n  var octetLen = initial & 0xf;\n  var val = 0;\n  for (var i = 0, off = p.place; i < octetLen; i++, off++) {\n    val <<= 8;\n    val |= buf[off];\n  }\n  p.place = off;\n  return val;\n}\n\nfunction rmPadding(buf) {\n  var i = 0;\n  var len = buf.length - 1;\n  while (!buf[i] && !(buf[i + 1] & 0x80) && i < len) {\n    i++;\n  }\n  if (i === 0) {\n    return buf;\n  }\n  return buf.slice(i);\n}\n\nSignature.prototype._importDER = function _importDER(data, enc) {\n  data = utils.toArray(data, enc);\n  var p = new Position();\n  if (data[p.place++] !== 0x30) {\n    return false;\n  }\n  var len = getLength(data, p);\n  if ((len + p.place) !== data.length) {\n    return false;\n  }\n  if (data[p.place++] !== 0x02) {\n    return false;\n  }\n  var rlen = getLength(data, p);\n  var r = data.slice(p.place, rlen + p.place);\n  p.place += rlen;\n  if (data[p.place++] !== 0x02) {\n    return false;\n  }\n  var slen = getLength(data, p);\n  if (data.length !== slen + p.place) {\n    return false;\n  }\n  var s = data.slice(p.place, slen + p.place);\n  if (r[0] === 0 && (r[1] & 0x80)) {\n    r = r.slice(1);\n  }\n  if (s[0] === 0 && (s[1] & 0x80)) {\n    s = s.slice(1);\n  }\n\n  this.r = new BN(r);\n  this.s = new BN(s);\n  this.recoveryParam = null;\n\n  return true;\n};\n\nfunction constructLength(arr, len) {\n  if (len < 0x80) {\n    arr.push(len);\n    return;\n  }\n  var octets = 1 + (Math.log(len) / Math.LN2 >>> 3);\n  arr.push(octets | 0x80);\n  while (--octets) {\n    arr.push((len >>> (octets << 3)) & 0xff);\n  }\n  arr.push(len);\n}\n\nSignature.prototype.toDER = function toDER(enc) {\n  var r = this.r.toArray();\n  var s = this.s.toArray();\n\n  // Pad values\n  if (r[0] & 0x80)\n    r = [ 0 ].concat(r);\n  // Pad values\n  if (s[0] & 0x80)\n    s = [ 0 ].concat(s);\n\n  r = rmPadding(r);\n  s = rmPadding(s);\n\n  while (!s[0] && !(s[1] & 0x80)) {\n    s = s.slice(1);\n  }\n  var arr = [ 0x02 ];\n  constructLength(arr, r.length);\n  arr = arr.concat(r);\n  arr.push(0x02);\n  constructLength(arr, s.length);\n  var backHalf = arr.concat(s);\n  var res = [ 0x30 ];\n  constructLength(res, backHalf.length);\n  res = res.concat(backHalf);\n  return utils.encode(res, enc);\n};\n","'use strict';\n\nvar hash = require('hash.js');\nvar curves = require('../curves');\nvar utils = require('../utils');\nvar assert = utils.assert;\nvar parseBytes = utils.parseBytes;\nvar KeyPair = require('./key');\nvar Signature = require('./signature');\n\nfunction EDDSA(curve) {\n  assert(curve === 'ed25519', 'only tested with ed25519 so far');\n\n  if (!(this instanceof EDDSA))\n    return new EDDSA(curve);\n\n  var curve = curves[curve].curve;\n  this.curve = curve;\n  this.g = curve.g;\n  this.g.precompute(curve.n.bitLength() + 1);\n\n  this.pointClass = curve.point().constructor;\n  this.encodingLength = Math.ceil(curve.n.bitLength() / 8);\n  this.hash = hash.sha512;\n}\n\nmodule.exports = EDDSA;\n\n/**\n* @param {Array|String} message - message bytes\n* @param {Array|String|KeyPair} secret - secret bytes or a keypair\n* @returns {Signature} - signature\n*/\nEDDSA.prototype.sign = function sign(message, secret) {\n  message = parseBytes(message);\n  var key = this.keyFromSecret(secret);\n  var r = this.hashInt(key.messagePrefix(), message);\n  var R = this.g.mul(r);\n  var Rencoded = this.encodePoint(R);\n  var s_ = this.hashInt(Rencoded, key.pubBytes(), message)\n               .mul(key.priv());\n  var S = r.add(s_).umod(this.curve.n);\n  return this.makeSignature({ R: R, S: S, Rencoded: Rencoded });\n};\n\n/**\n* @param {Array} message - message bytes\n* @param {Array|String|Signature} sig - sig bytes\n* @param {Array|String|Point|KeyPair} pub - public key\n* @returns {Boolean} - true if public key matches sig of message\n*/\nEDDSA.prototype.verify = function verify(message, sig, pub) {\n  message = parseBytes(message);\n  sig = this.makeSignature(sig);\n  var key = this.keyFromPublic(pub);\n  var h = this.hashInt(sig.Rencoded(), key.pubBytes(), message);\n  var SG = this.g.mul(sig.S());\n  var RplusAh = sig.R().add(key.pub().mul(h));\n  return RplusAh.eq(SG);\n};\n\nEDDSA.prototype.hashInt = function hashInt() {\n  var hash = this.hash();\n  for (var i = 0; i < arguments.length; i++)\n    hash.update(arguments[i]);\n  return utils.intFromLE(hash.digest()).umod(this.curve.n);\n};\n\nEDDSA.prototype.keyFromPublic = function keyFromPublic(pub) {\n  return KeyPair.fromPublic(this, pub);\n};\n\nEDDSA.prototype.keyFromSecret = function keyFromSecret(secret) {\n  return KeyPair.fromSecret(this, secret);\n};\n\nEDDSA.prototype.makeSignature = function makeSignature(sig) {\n  if (sig instanceof Signature)\n    return sig;\n  return new Signature(this, sig);\n};\n\n/**\n* * https://tools.ietf.org/html/draft-josefsson-eddsa-ed25519-03#section-5.2\n*\n* EDDSA defines methods for encoding and decoding points and integers. These are\n* helper convenience methods, that pass along to utility functions implied\n* parameters.\n*\n*/\nEDDSA.prototype.encodePoint = function encodePoint(point) {\n  var enc = point.getY().toArray('le', this.encodingLength);\n  enc[this.encodingLength - 1] |= point.getX().isOdd() ? 0x80 : 0;\n  return enc;\n};\n\nEDDSA.prototype.decodePoint = function decodePoint(bytes) {\n  bytes = utils.parseBytes(bytes);\n\n  var lastIx = bytes.length - 1;\n  var normed = bytes.slice(0, lastIx).concat(bytes[lastIx] & ~0x80);\n  var xIsOdd = (bytes[lastIx] & 0x80) !== 0;\n\n  var y = utils.intFromLE(normed);\n  return this.curve.pointFromY(y, xIsOdd);\n};\n\nEDDSA.prototype.encodeInt = function encodeInt(num) {\n  return num.toArray('le', this.encodingLength);\n};\n\nEDDSA.prototype.decodeInt = function decodeInt(bytes) {\n  return utils.intFromLE(bytes);\n};\n\nEDDSA.prototype.isPoint = function isPoint(val) {\n  return val instanceof this.pointClass;\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar assert = utils.assert;\nvar parseBytes = utils.parseBytes;\nvar cachedProperty = utils.cachedProperty;\n\n/**\n* @param {EDDSA} eddsa - instance\n* @param {Object} params - public/private key parameters\n*\n* @param {Array<Byte>} [params.secret] - secret seed bytes\n* @param {Point} [params.pub] - public key point (aka `A` in eddsa terms)\n* @param {Array<Byte>} [params.pub] - public key point encoded as bytes\n*\n*/\nfunction KeyPair(eddsa, params) {\n  this.eddsa = eddsa;\n  this._secret = parseBytes(params.secret);\n  if (eddsa.isPoint(params.pub))\n    this._pub = params.pub;\n  else\n    this._pubBytes = parseBytes(params.pub);\n}\n\nKeyPair.fromPublic = function fromPublic(eddsa, pub) {\n  if (pub instanceof KeyPair)\n    return pub;\n  return new KeyPair(eddsa, { pub: pub });\n};\n\nKeyPair.fromSecret = function fromSecret(eddsa, secret) {\n  if (secret instanceof KeyPair)\n    return secret;\n  return new KeyPair(eddsa, { secret: secret });\n};\n\nKeyPair.prototype.secret = function secret() {\n  return this._secret;\n};\n\ncachedProperty(KeyPair, 'pubBytes', function pubBytes() {\n  return this.eddsa.encodePoint(this.pub());\n});\n\ncachedProperty(KeyPair, 'pub', function pub() {\n  if (this._pubBytes)\n    return this.eddsa.decodePoint(this._pubBytes);\n  return this.eddsa.g.mul(this.priv());\n});\n\ncachedProperty(KeyPair, 'privBytes', function privBytes() {\n  var eddsa = this.eddsa;\n  var hash = this.hash();\n  var lastIx = eddsa.encodingLength - 1;\n\n  var a = hash.slice(0, eddsa.encodingLength);\n  a[0] &= 248;\n  a[lastIx] &= 127;\n  a[lastIx] |= 64;\n\n  return a;\n});\n\ncachedProperty(KeyPair, 'priv', function priv() {\n  return this.eddsa.decodeInt(this.privBytes());\n});\n\ncachedProperty(KeyPair, 'hash', function hash() {\n  return this.eddsa.hash().update(this.secret()).digest();\n});\n\ncachedProperty(KeyPair, 'messagePrefix', function messagePrefix() {\n  return this.hash().slice(this.eddsa.encodingLength);\n});\n\nKeyPair.prototype.sign = function sign(message) {\n  assert(this._secret, 'KeyPair can only verify');\n  return this.eddsa.sign(message, this);\n};\n\nKeyPair.prototype.verify = function verify(message, sig) {\n  return this.eddsa.verify(message, sig, this);\n};\n\nKeyPair.prototype.getSecret = function getSecret(enc) {\n  assert(this._secret, 'KeyPair is public only');\n  return utils.encode(this.secret(), enc);\n};\n\nKeyPair.prototype.getPublic = function getPublic(enc) {\n  return utils.encode(this.pubBytes(), enc);\n};\n\nmodule.exports = KeyPair;\n","'use strict';\n\nvar BN = require('bn.js');\nvar utils = require('../utils');\nvar assert = utils.assert;\nvar cachedProperty = utils.cachedProperty;\nvar parseBytes = utils.parseBytes;\n\n/**\n* @param {EDDSA} eddsa - eddsa instance\n* @param {Array<Bytes>|Object} sig -\n* @param {Array<Bytes>|Point} [sig.R] - R point as Point or bytes\n* @param {Array<Bytes>|bn} [sig.S] - S scalar as bn or bytes\n* @param {Array<Bytes>} [sig.Rencoded] - R point encoded\n* @param {Array<Bytes>} [sig.Sencoded] - S scalar encoded\n*/\nfunction Signature(eddsa, sig) {\n  this.eddsa = eddsa;\n\n  if (typeof sig !== 'object')\n    sig = parseBytes(sig);\n\n  if (Array.isArray(sig)) {\n    sig = {\n      R: sig.slice(0, eddsa.encodingLength),\n      S: sig.slice(eddsa.encodingLength)\n    };\n  }\n\n  assert(sig.R && sig.S, 'Signature without R or S');\n\n  if (eddsa.isPoint(sig.R))\n    this._R = sig.R;\n  if (sig.S instanceof BN)\n    this._S = sig.S;\n\n  this._Rencoded = Array.isArray(sig.R) ? sig.R : sig.Rencoded;\n  this._Sencoded = Array.isArray(sig.S) ? sig.S : sig.Sencoded;\n}\n\ncachedProperty(Signature, 'S', function S() {\n  return this.eddsa.decodeInt(this.Sencoded());\n});\n\ncachedProperty(Signature, 'R', function R() {\n  return this.eddsa.decodePoint(this.Rencoded());\n});\n\ncachedProperty(Signature, 'Rencoded', function Rencoded() {\n  return this.eddsa.encodePoint(this.R());\n});\n\ncachedProperty(Signature, 'Sencoded', function Sencoded() {\n  return this.eddsa.encodeInt(this.S());\n});\n\nSignature.prototype.toBytes = function toBytes() {\n  return this.Rencoded().concat(this.Sencoded());\n};\n\nSignature.prototype.toHex = function toHex() {\n  return utils.encode(this.toBytes(), 'hex').toUpperCase();\n};\n\nmodule.exports = Signature;\n","module.exports = {\n  doubles: {\n    step: 4,\n    points: [\n      [\n        'e60fce93b59e9ec53011aabc21c23e97b2a31369b87a5ae9c44ee89e2a6dec0a',\n        'f7e3507399e595929db99f34f57937101296891e44d23f0be1f32cce69616821'\n      ],\n      [\n        '8282263212c609d9ea2a6e3e172de238d8c39cabd5ac1ca10646e23fd5f51508',\n        '11f8a8098557dfe45e8256e830b60ace62d613ac2f7b17bed31b6eaff6e26caf'\n      ],\n      [\n        '175e159f728b865a72f99cc6c6fc846de0b93833fd2222ed73fce5b551e5b739',\n        'd3506e0d9e3c79eba4ef97a51ff71f5eacb5955add24345c6efa6ffee9fed695'\n      ],\n      [\n        '363d90d447b00c9c99ceac05b6262ee053441c7e55552ffe526bad8f83ff4640',\n        '4e273adfc732221953b445397f3363145b9a89008199ecb62003c7f3bee9de9'\n      ],\n      [\n        '8b4b5f165df3c2be8c6244b5b745638843e4a781a15bcd1b69f79a55dffdf80c',\n        '4aad0a6f68d308b4b3fbd7813ab0da04f9e336546162ee56b3eff0c65fd4fd36'\n      ],\n      [\n        '723cbaa6e5db996d6bf771c00bd548c7b700dbffa6c0e77bcb6115925232fcda',\n        '96e867b5595cc498a921137488824d6e2660a0653779494801dc069d9eb39f5f'\n      ],\n      [\n        'eebfa4d493bebf98ba5feec812c2d3b50947961237a919839a533eca0e7dd7fa',\n        '5d9a8ca3970ef0f269ee7edaf178089d9ae4cdc3a711f712ddfd4fdae1de8999'\n      ],\n      [\n        '100f44da696e71672791d0a09b7bde459f1215a29b3c03bfefd7835b39a48db0',\n        'cdd9e13192a00b772ec8f3300c090666b7ff4a18ff5195ac0fbd5cd62bc65a09'\n      ],\n      [\n        'e1031be262c7ed1b1dc9227a4a04c017a77f8d4464f3b3852c8acde6e534fd2d',\n        '9d7061928940405e6bb6a4176597535af292dd419e1ced79a44f18f29456a00d'\n      ],\n      [\n        'feea6cae46d55b530ac2839f143bd7ec5cf8b266a41d6af52d5e688d9094696d',\n        'e57c6b6c97dce1bab06e4e12bf3ecd5c981c8957cc41442d3155debf18090088'\n      ],\n      [\n        'da67a91d91049cdcb367be4be6ffca3cfeed657d808583de33fa978bc1ec6cb1',\n        '9bacaa35481642bc41f463f7ec9780e5dec7adc508f740a17e9ea8e27a68be1d'\n      ],\n      [\n        '53904faa0b334cdda6e000935ef22151ec08d0f7bb11069f57545ccc1a37b7c0',\n        '5bc087d0bc80106d88c9eccac20d3c1c13999981e14434699dcb096b022771c8'\n      ],\n      [\n        '8e7bcd0bd35983a7719cca7764ca906779b53a043a9b8bcaeff959f43ad86047',\n        '10b7770b2a3da4b3940310420ca9514579e88e2e47fd68b3ea10047e8460372a'\n      ],\n      [\n        '385eed34c1cdff21e6d0818689b81bde71a7f4f18397e6690a841e1599c43862',\n        '283bebc3e8ea23f56701de19e9ebf4576b304eec2086dc8cc0458fe5542e5453'\n      ],\n      [\n        '6f9d9b803ecf191637c73a4413dfa180fddf84a5947fbc9c606ed86c3fac3a7',\n        '7c80c68e603059ba69b8e2a30e45c4d47ea4dd2f5c281002d86890603a842160'\n      ],\n      [\n        '3322d401243c4e2582a2147c104d6ecbf774d163db0f5e5313b7e0e742d0e6bd',\n        '56e70797e9664ef5bfb019bc4ddaf9b72805f63ea2873af624f3a2e96c28b2a0'\n      ],\n      [\n        '85672c7d2de0b7da2bd1770d89665868741b3f9af7643397721d74d28134ab83',\n        '7c481b9b5b43b2eb6374049bfa62c2e5e77f17fcc5298f44c8e3094f790313a6'\n      ],\n      [\n        '948bf809b1988a46b06c9f1919413b10f9226c60f668832ffd959af60c82a0a',\n        '53a562856dcb6646dc6b74c5d1c3418c6d4dff08c97cd2bed4cb7f88d8c8e589'\n      ],\n      [\n        '6260ce7f461801c34f067ce0f02873a8f1b0e44dfc69752accecd819f38fd8e8',\n        'bc2da82b6fa5b571a7f09049776a1ef7ecd292238051c198c1a84e95b2b4ae17'\n      ],\n      [\n        'e5037de0afc1d8d43d8348414bbf4103043ec8f575bfdc432953cc8d2037fa2d',\n        '4571534baa94d3b5f9f98d09fb990bddbd5f5b03ec481f10e0e5dc841d755bda'\n      ],\n      [\n        'e06372b0f4a207adf5ea905e8f1771b4e7e8dbd1c6a6c5b725866a0ae4fce725',\n        '7a908974bce18cfe12a27bb2ad5a488cd7484a7787104870b27034f94eee31dd'\n      ],\n      [\n        '213c7a715cd5d45358d0bbf9dc0ce02204b10bdde2a3f58540ad6908d0559754',\n        '4b6dad0b5ae462507013ad06245ba190bb4850f5f36a7eeddff2c27534b458f2'\n      ],\n      [\n        '4e7c272a7af4b34e8dbb9352a5419a87e2838c70adc62cddf0cc3a3b08fbd53c',\n        '17749c766c9d0b18e16fd09f6def681b530b9614bff7dd33e0b3941817dcaae6'\n      ],\n      [\n        'fea74e3dbe778b1b10f238ad61686aa5c76e3db2be43057632427e2840fb27b6',\n        '6e0568db9b0b13297cf674deccb6af93126b596b973f7b77701d3db7f23cb96f'\n      ],\n      [\n        '76e64113f677cf0e10a2570d599968d31544e179b760432952c02a4417bdde39',\n        'c90ddf8dee4e95cf577066d70681f0d35e2a33d2b56d2032b4b1752d1901ac01'\n      ],\n      [\n        'c738c56b03b2abe1e8281baa743f8f9a8f7cc643df26cbee3ab150242bcbb891',\n        '893fb578951ad2537f718f2eacbfbbbb82314eef7880cfe917e735d9699a84c3'\n      ],\n      [\n        'd895626548b65b81e264c7637c972877d1d72e5f3a925014372e9f6588f6c14b',\n        'febfaa38f2bc7eae728ec60818c340eb03428d632bb067e179363ed75d7d991f'\n      ],\n      [\n        'b8da94032a957518eb0f6433571e8761ceffc73693e84edd49150a564f676e03',\n        '2804dfa44805a1e4d7c99cc9762808b092cc584d95ff3b511488e4e74efdf6e7'\n      ],\n      [\n        'e80fea14441fb33a7d8adab9475d7fab2019effb5156a792f1a11778e3c0df5d',\n        'eed1de7f638e00771e89768ca3ca94472d155e80af322ea9fcb4291b6ac9ec78'\n      ],\n      [\n        'a301697bdfcd704313ba48e51d567543f2a182031efd6915ddc07bbcc4e16070',\n        '7370f91cfb67e4f5081809fa25d40f9b1735dbf7c0a11a130c0d1a041e177ea1'\n      ],\n      [\n        '90ad85b389d6b936463f9d0512678de208cc330b11307fffab7ac63e3fb04ed4',\n        'e507a3620a38261affdcbd9427222b839aefabe1582894d991d4d48cb6ef150'\n      ],\n      [\n        '8f68b9d2f63b5f339239c1ad981f162ee88c5678723ea3351b7b444c9ec4c0da',\n        '662a9f2dba063986de1d90c2b6be215dbbea2cfe95510bfdf23cbf79501fff82'\n      ],\n      [\n        'e4f3fb0176af85d65ff99ff9198c36091f48e86503681e3e6686fd5053231e11',\n        '1e63633ad0ef4f1c1661a6d0ea02b7286cc7e74ec951d1c9822c38576feb73bc'\n      ],\n      [\n        '8c00fa9b18ebf331eb961537a45a4266c7034f2f0d4e1d0716fb6eae20eae29e',\n        'efa47267fea521a1a9dc343a3736c974c2fadafa81e36c54e7d2a4c66702414b'\n      ],\n      [\n        'e7a26ce69dd4829f3e10cec0a9e98ed3143d084f308b92c0997fddfc60cb3e41',\n        '2a758e300fa7984b471b006a1aafbb18d0a6b2c0420e83e20e8a9421cf2cfd51'\n      ],\n      [\n        'b6459e0ee3662ec8d23540c223bcbdc571cbcb967d79424f3cf29eb3de6b80ef',\n        '67c876d06f3e06de1dadf16e5661db3c4b3ae6d48e35b2ff30bf0b61a71ba45'\n      ],\n      [\n        'd68a80c8280bb840793234aa118f06231d6f1fc67e73c5a5deda0f5b496943e8',\n        'db8ba9fff4b586d00c4b1f9177b0e28b5b0e7b8f7845295a294c84266b133120'\n      ],\n      [\n        '324aed7df65c804252dc0270907a30b09612aeb973449cea4095980fc28d3d5d',\n        '648a365774b61f2ff130c0c35aec1f4f19213b0c7e332843967224af96ab7c84'\n      ],\n      [\n        '4df9c14919cde61f6d51dfdbe5fee5dceec4143ba8d1ca888e8bd373fd054c96',\n        '35ec51092d8728050974c23a1d85d4b5d506cdc288490192ebac06cad10d5d'\n      ],\n      [\n        '9c3919a84a474870faed8a9c1cc66021523489054d7f0308cbfc99c8ac1f98cd',\n        'ddb84f0f4a4ddd57584f044bf260e641905326f76c64c8e6be7e5e03d4fc599d'\n      ],\n      [\n        '6057170b1dd12fdf8de05f281d8e06bb91e1493a8b91d4cc5a21382120a959e5',\n        '9a1af0b26a6a4807add9a2daf71df262465152bc3ee24c65e899be932385a2a8'\n      ],\n      [\n        'a576df8e23a08411421439a4518da31880cef0fba7d4df12b1a6973eecb94266',\n        '40a6bf20e76640b2c92b97afe58cd82c432e10a7f514d9f3ee8be11ae1b28ec8'\n      ],\n      [\n        '7778a78c28dec3e30a05fe9629de8c38bb30d1f5cf9a3a208f763889be58ad71',\n        '34626d9ab5a5b22ff7098e12f2ff580087b38411ff24ac563b513fc1fd9f43ac'\n      ],\n      [\n        '928955ee637a84463729fd30e7afd2ed5f96274e5ad7e5cb09eda9c06d903ac',\n        'c25621003d3f42a827b78a13093a95eeac3d26efa8a8d83fc5180e935bcd091f'\n      ],\n      [\n        '85d0fef3ec6db109399064f3a0e3b2855645b4a907ad354527aae75163d82751',\n        '1f03648413a38c0be29d496e582cf5663e8751e96877331582c237a24eb1f962'\n      ],\n      [\n        'ff2b0dce97eece97c1c9b6041798b85dfdfb6d8882da20308f5404824526087e',\n        '493d13fef524ba188af4c4dc54d07936c7b7ed6fb90e2ceb2c951e01f0c29907'\n      ],\n      [\n        '827fbbe4b1e880ea9ed2b2e6301b212b57f1ee148cd6dd28780e5e2cf856e241',\n        'c60f9c923c727b0b71bef2c67d1d12687ff7a63186903166d605b68baec293ec'\n      ],\n      [\n        'eaa649f21f51bdbae7be4ae34ce6e5217a58fdce7f47f9aa7f3b58fa2120e2b3',\n        'be3279ed5bbbb03ac69a80f89879aa5a01a6b965f13f7e59d47a5305ba5ad93d'\n      ],\n      [\n        'e4a42d43c5cf169d9391df6decf42ee541b6d8f0c9a137401e23632dda34d24f',\n        '4d9f92e716d1c73526fc99ccfb8ad34ce886eedfa8d8e4f13a7f7131deba9414'\n      ],\n      [\n        '1ec80fef360cbdd954160fadab352b6b92b53576a88fea4947173b9d4300bf19',\n        'aeefe93756b5340d2f3a4958a7abbf5e0146e77f6295a07b671cdc1cc107cefd'\n      ],\n      [\n        '146a778c04670c2f91b00af4680dfa8bce3490717d58ba889ddb5928366642be',\n        'b318e0ec3354028add669827f9d4b2870aaa971d2f7e5ed1d0b297483d83efd0'\n      ],\n      [\n        'fa50c0f61d22e5f07e3acebb1aa07b128d0012209a28b9776d76a8793180eef9',\n        '6b84c6922397eba9b72cd2872281a68a5e683293a57a213b38cd8d7d3f4f2811'\n      ],\n      [\n        'da1d61d0ca721a11b1a5bf6b7d88e8421a288ab5d5bba5220e53d32b5f067ec2',\n        '8157f55a7c99306c79c0766161c91e2966a73899d279b48a655fba0f1ad836f1'\n      ],\n      [\n        'a8e282ff0c9706907215ff98e8fd416615311de0446f1e062a73b0610d064e13',\n        '7f97355b8db81c09abfb7f3c5b2515888b679a3e50dd6bd6cef7c73111f4cc0c'\n      ],\n      [\n        '174a53b9c9a285872d39e56e6913cab15d59b1fa512508c022f382de8319497c',\n        'ccc9dc37abfc9c1657b4155f2c47f9e6646b3a1d8cb9854383da13ac079afa73'\n      ],\n      [\n        '959396981943785c3d3e57edf5018cdbe039e730e4918b3d884fdff09475b7ba',\n        '2e7e552888c331dd8ba0386a4b9cd6849c653f64c8709385e9b8abf87524f2fd'\n      ],\n      [\n        'd2a63a50ae401e56d645a1153b109a8fcca0a43d561fba2dbb51340c9d82b151',\n        'e82d86fb6443fcb7565aee58b2948220a70f750af484ca52d4142174dcf89405'\n      ],\n      [\n        '64587e2335471eb890ee7896d7cfdc866bacbdbd3839317b3436f9b45617e073',\n        'd99fcdd5bf6902e2ae96dd6447c299a185b90a39133aeab358299e5e9faf6589'\n      ],\n      [\n        '8481bde0e4e4d885b3a546d3e549de042f0aa6cea250e7fd358d6c86dd45e458',\n        '38ee7b8cba5404dd84a25bf39cecb2ca900a79c42b262e556d64b1b59779057e'\n      ],\n      [\n        '13464a57a78102aa62b6979ae817f4637ffcfed3c4b1ce30bcd6303f6caf666b',\n        '69be159004614580ef7e433453ccb0ca48f300a81d0942e13f495a907f6ecc27'\n      ],\n      [\n        'bc4a9df5b713fe2e9aef430bcc1dc97a0cd9ccede2f28588cada3a0d2d83f366',\n        'd3a81ca6e785c06383937adf4b798caa6e8a9fbfa547b16d758d666581f33c1'\n      ],\n      [\n        '8c28a97bf8298bc0d23d8c749452a32e694b65e30a9472a3954ab30fe5324caa',\n        '40a30463a3305193378fedf31f7cc0eb7ae784f0451cb9459e71dc73cbef9482'\n      ],\n      [\n        '8ea9666139527a8c1dd94ce4f071fd23c8b350c5a4bb33748c4ba111faccae0',\n        '620efabbc8ee2782e24e7c0cfb95c5d735b783be9cf0f8e955af34a30e62b945'\n      ],\n      [\n        'dd3625faef5ba06074669716bbd3788d89bdde815959968092f76cc4eb9a9787',\n        '7a188fa3520e30d461da2501045731ca941461982883395937f68d00c644a573'\n      ],\n      [\n        'f710d79d9eb962297e4f6232b40e8f7feb2bc63814614d692c12de752408221e',\n        'ea98e67232d3b3295d3b535532115ccac8612c721851617526ae47a9c77bfc82'\n      ]\n    ]\n  },\n  naf: {\n    wnd: 7,\n    points: [\n      [\n        'f9308a019258c31049344f85f89d5229b531c845836f99b08601f113bce036f9',\n        '388f7b0f632de8140fe337e62a37f3566500a99934c2231b6cb9fd7584b8e672'\n      ],\n      [\n        '2f8bde4d1a07209355b4a7250a5c5128e88b84bddc619ab7cba8d569b240efe4',\n        'd8ac222636e5e3d6d4dba9dda6c9c426f788271bab0d6840dca87d3aa6ac62d6'\n      ],\n      [\n        '5cbdf0646e5db4eaa398f365f2ea7a0e3d419b7e0330e39ce92bddedcac4f9bc',\n        '6aebca40ba255960a3178d6d861a54dba813d0b813fde7b5a5082628087264da'\n      ],\n      [\n        'acd484e2f0c7f65309ad178a9f559abde09796974c57e714c35f110dfc27ccbe',\n        'cc338921b0a7d9fd64380971763b61e9add888a4375f8e0f05cc262ac64f9c37'\n      ],\n      [\n        '774ae7f858a9411e5ef4246b70c65aac5649980be5c17891bbec17895da008cb',\n        'd984a032eb6b5e190243dd56d7b7b365372db1e2dff9d6a8301d74c9c953c61b'\n      ],\n      [\n        'f28773c2d975288bc7d1d205c3748651b075fbc6610e58cddeeddf8f19405aa8',\n        'ab0902e8d880a89758212eb65cdaf473a1a06da521fa91f29b5cb52db03ed81'\n      ],\n      [\n        'd7924d4f7d43ea965a465ae3095ff41131e5946f3c85f79e44adbcf8e27e080e',\n        '581e2872a86c72a683842ec228cc6defea40af2bd896d3a5c504dc9ff6a26b58'\n      ],\n      [\n        'defdea4cdb677750a420fee807eacf21eb9898ae79b9768766e4faa04a2d4a34',\n        '4211ab0694635168e997b0ead2a93daeced1f4a04a95c0f6cfb199f69e56eb77'\n      ],\n      [\n        '2b4ea0a797a443d293ef5cff444f4979f06acfebd7e86d277475656138385b6c',\n        '85e89bc037945d93b343083b5a1c86131a01f60c50269763b570c854e5c09b7a'\n      ],\n      [\n        '352bbf4a4cdd12564f93fa332ce333301d9ad40271f8107181340aef25be59d5',\n        '321eb4075348f534d59c18259dda3e1f4a1b3b2e71b1039c67bd3d8bcf81998c'\n      ],\n      [\n        '2fa2104d6b38d11b0230010559879124e42ab8dfeff5ff29dc9cdadd4ecacc3f',\n        '2de1068295dd865b64569335bd5dd80181d70ecfc882648423ba76b532b7d67'\n      ],\n      [\n        '9248279b09b4d68dab21a9b066edda83263c3d84e09572e269ca0cd7f5453714',\n        '73016f7bf234aade5d1aa71bdea2b1ff3fc0de2a887912ffe54a32ce97cb3402'\n      ],\n      [\n        'daed4f2be3a8bf278e70132fb0beb7522f570e144bf615c07e996d443dee8729',\n        'a69dce4a7d6c98e8d4a1aca87ef8d7003f83c230f3afa726ab40e52290be1c55'\n      ],\n      [\n        'c44d12c7065d812e8acf28d7cbb19f9011ecd9e9fdf281b0e6a3b5e87d22e7db',\n        '2119a460ce326cdc76c45926c982fdac0e106e861edf61c5a039063f0e0e6482'\n      ],\n      [\n        '6a245bf6dc698504c89a20cfded60853152b695336c28063b61c65cbd269e6b4',\n        'e022cf42c2bd4a708b3f5126f16a24ad8b33ba48d0423b6efd5e6348100d8a82'\n      ],\n      [\n        '1697ffa6fd9de627c077e3d2fe541084ce13300b0bec1146f95ae57f0d0bd6a5',\n        'b9c398f186806f5d27561506e4557433a2cf15009e498ae7adee9d63d01b2396'\n      ],\n      [\n        '605bdb019981718b986d0f07e834cb0d9deb8360ffb7f61df982345ef27a7479',\n        '2972d2de4f8d20681a78d93ec96fe23c26bfae84fb14db43b01e1e9056b8c49'\n      ],\n      [\n        '62d14dab4150bf497402fdc45a215e10dcb01c354959b10cfe31c7e9d87ff33d',\n        '80fc06bd8cc5b01098088a1950eed0db01aa132967ab472235f5642483b25eaf'\n      ],\n      [\n        '80c60ad0040f27dade5b4b06c408e56b2c50e9f56b9b8b425e555c2f86308b6f',\n        '1c38303f1cc5c30f26e66bad7fe72f70a65eed4cbe7024eb1aa01f56430bd57a'\n      ],\n      [\n        '7a9375ad6167ad54aa74c6348cc54d344cc5dc9487d847049d5eabb0fa03c8fb',\n        'd0e3fa9eca8726909559e0d79269046bdc59ea10c70ce2b02d499ec224dc7f7'\n      ],\n      [\n        'd528ecd9b696b54c907a9ed045447a79bb408ec39b68df504bb51f459bc3ffc9',\n        'eecf41253136e5f99966f21881fd656ebc4345405c520dbc063465b521409933'\n      ],\n      [\n        '49370a4b5f43412ea25f514e8ecdad05266115e4a7ecb1387231808f8b45963',\n        '758f3f41afd6ed428b3081b0512fd62a54c3f3afbb5b6764b653052a12949c9a'\n      ],\n      [\n        '77f230936ee88cbbd73df930d64702ef881d811e0e1498e2f1c13eb1fc345d74',\n        '958ef42a7886b6400a08266e9ba1b37896c95330d97077cbbe8eb3c7671c60d6'\n      ],\n      [\n        'f2dac991cc4ce4b9ea44887e5c7c0bce58c80074ab9d4dbaeb28531b7739f530',\n        'e0dedc9b3b2f8dad4da1f32dec2531df9eb5fbeb0598e4fd1a117dba703a3c37'\n      ],\n      [\n        '463b3d9f662621fb1b4be8fbbe2520125a216cdfc9dae3debcba4850c690d45b',\n        '5ed430d78c296c3543114306dd8622d7c622e27c970a1de31cb377b01af7307e'\n      ],\n      [\n        'f16f804244e46e2a09232d4aff3b59976b98fac14328a2d1a32496b49998f247',\n        'cedabd9b82203f7e13d206fcdf4e33d92a6c53c26e5cce26d6579962c4e31df6'\n      ],\n      [\n        'caf754272dc84563b0352b7a14311af55d245315ace27c65369e15f7151d41d1',\n        'cb474660ef35f5f2a41b643fa5e460575f4fa9b7962232a5c32f908318a04476'\n      ],\n      [\n        '2600ca4b282cb986f85d0f1709979d8b44a09c07cb86d7c124497bc86f082120',\n        '4119b88753c15bd6a693b03fcddbb45d5ac6be74ab5f0ef44b0be9475a7e4b40'\n      ],\n      [\n        '7635ca72d7e8432c338ec53cd12220bc01c48685e24f7dc8c602a7746998e435',\n        '91b649609489d613d1d5e590f78e6d74ecfc061d57048bad9e76f302c5b9c61'\n      ],\n      [\n        '754e3239f325570cdbbf4a87deee8a66b7f2b33479d468fbc1a50743bf56cc18',\n        '673fb86e5bda30fb3cd0ed304ea49a023ee33d0197a695d0c5d98093c536683'\n      ],\n      [\n        'e3e6bd1071a1e96aff57859c82d570f0330800661d1c952f9fe2694691d9b9e8',\n        '59c9e0bba394e76f40c0aa58379a3cb6a5a2283993e90c4167002af4920e37f5'\n      ],\n      [\n        '186b483d056a033826ae73d88f732985c4ccb1f32ba35f4b4cc47fdcf04aa6eb',\n        '3b952d32c67cf77e2e17446e204180ab21fb8090895138b4a4a797f86e80888b'\n      ],\n      [\n        'df9d70a6b9876ce544c98561f4be4f725442e6d2b737d9c91a8321724ce0963f',\n        '55eb2dafd84d6ccd5f862b785dc39d4ab157222720ef9da217b8c45cf2ba2417'\n      ],\n      [\n        '5edd5cc23c51e87a497ca815d5dce0f8ab52554f849ed8995de64c5f34ce7143',\n        'efae9c8dbc14130661e8cec030c89ad0c13c66c0d17a2905cdc706ab7399a868'\n      ],\n      [\n        '290798c2b6476830da12fe02287e9e777aa3fba1c355b17a722d362f84614fba',\n        'e38da76dcd440621988d00bcf79af25d5b29c094db2a23146d003afd41943e7a'\n      ],\n      [\n        'af3c423a95d9f5b3054754efa150ac39cd29552fe360257362dfdecef4053b45',\n        'f98a3fd831eb2b749a93b0e6f35cfb40c8cd5aa667a15581bc2feded498fd9c6'\n      ],\n      [\n        '766dbb24d134e745cccaa28c99bf274906bb66b26dcf98df8d2fed50d884249a',\n        '744b1152eacbe5e38dcc887980da38b897584a65fa06cedd2c924f97cbac5996'\n      ],\n      [\n        '59dbf46f8c94759ba21277c33784f41645f7b44f6c596a58ce92e666191abe3e',\n        'c534ad44175fbc300f4ea6ce648309a042ce739a7919798cd85e216c4a307f6e'\n      ],\n      [\n        'f13ada95103c4537305e691e74e9a4a8dd647e711a95e73cb62dc6018cfd87b8',\n        'e13817b44ee14de663bf4bc808341f326949e21a6a75c2570778419bdaf5733d'\n      ],\n      [\n        '7754b4fa0e8aced06d4167a2c59cca4cda1869c06ebadfb6488550015a88522c',\n        '30e93e864e669d82224b967c3020b8fa8d1e4e350b6cbcc537a48b57841163a2'\n      ],\n      [\n        '948dcadf5990e048aa3874d46abef9d701858f95de8041d2a6828c99e2262519',\n        'e491a42537f6e597d5d28a3224b1bc25df9154efbd2ef1d2cbba2cae5347d57e'\n      ],\n      [\n        '7962414450c76c1689c7b48f8202ec37fb224cf5ac0bfa1570328a8a3d7c77ab',\n        '100b610ec4ffb4760d5c1fc133ef6f6b12507a051f04ac5760afa5b29db83437'\n      ],\n      [\n        '3514087834964b54b15b160644d915485a16977225b8847bb0dd085137ec47ca',\n        'ef0afbb2056205448e1652c48e8127fc6039e77c15c2378b7e7d15a0de293311'\n      ],\n      [\n        'd3cc30ad6b483e4bc79ce2c9dd8bc54993e947eb8df787b442943d3f7b527eaf',\n        '8b378a22d827278d89c5e9be8f9508ae3c2ad46290358630afb34db04eede0a4'\n      ],\n      [\n        '1624d84780732860ce1c78fcbfefe08b2b29823db913f6493975ba0ff4847610',\n        '68651cf9b6da903e0914448c6cd9d4ca896878f5282be4c8cc06e2a404078575'\n      ],\n      [\n        '733ce80da955a8a26902c95633e62a985192474b5af207da6df7b4fd5fc61cd4',\n        'f5435a2bd2badf7d485a4d8b8db9fcce3e1ef8e0201e4578c54673bc1dc5ea1d'\n      ],\n      [\n        '15d9441254945064cf1a1c33bbd3b49f8966c5092171e699ef258dfab81c045c',\n        'd56eb30b69463e7234f5137b73b84177434800bacebfc685fc37bbe9efe4070d'\n      ],\n      [\n        'a1d0fcf2ec9de675b612136e5ce70d271c21417c9d2b8aaaac138599d0717940',\n        'edd77f50bcb5a3cab2e90737309667f2641462a54070f3d519212d39c197a629'\n      ],\n      [\n        'e22fbe15c0af8ccc5780c0735f84dbe9a790badee8245c06c7ca37331cb36980',\n        'a855babad5cd60c88b430a69f53a1a7a38289154964799be43d06d77d31da06'\n      ],\n      [\n        '311091dd9860e8e20ee13473c1155f5f69635e394704eaa74009452246cfa9b3',\n        '66db656f87d1f04fffd1f04788c06830871ec5a64feee685bd80f0b1286d8374'\n      ],\n      [\n        '34c1fd04d301be89b31c0442d3e6ac24883928b45a9340781867d4232ec2dbdf',\n        '9414685e97b1b5954bd46f730174136d57f1ceeb487443dc5321857ba73abee'\n      ],\n      [\n        'f219ea5d6b54701c1c14de5b557eb42a8d13f3abbcd08affcc2a5e6b049b8d63',\n        '4cb95957e83d40b0f73af4544cccf6b1f4b08d3c07b27fb8d8c2962a400766d1'\n      ],\n      [\n        'd7b8740f74a8fbaab1f683db8f45de26543a5490bca627087236912469a0b448',\n        'fa77968128d9c92ee1010f337ad4717eff15db5ed3c049b3411e0315eaa4593b'\n      ],\n      [\n        '32d31c222f8f6f0ef86f7c98d3a3335ead5bcd32abdd94289fe4d3091aa824bf',\n        '5f3032f5892156e39ccd3d7915b9e1da2e6dac9e6f26e961118d14b8462e1661'\n      ],\n      [\n        '7461f371914ab32671045a155d9831ea8793d77cd59592c4340f86cbc18347b5',\n        '8ec0ba238b96bec0cbdddcae0aa442542eee1ff50c986ea6b39847b3cc092ff6'\n      ],\n      [\n        'ee079adb1df1860074356a25aa38206a6d716b2c3e67453d287698bad7b2b2d6',\n        '8dc2412aafe3be5c4c5f37e0ecc5f9f6a446989af04c4e25ebaac479ec1c8c1e'\n      ],\n      [\n        '16ec93e447ec83f0467b18302ee620f7e65de331874c9dc72bfd8616ba9da6b5',\n        '5e4631150e62fb40d0e8c2a7ca5804a39d58186a50e497139626778e25b0674d'\n      ],\n      [\n        'eaa5f980c245f6f038978290afa70b6bd8855897f98b6aa485b96065d537bd99',\n        'f65f5d3e292c2e0819a528391c994624d784869d7e6ea67fb18041024edc07dc'\n      ],\n      [\n        '78c9407544ac132692ee1910a02439958ae04877151342ea96c4b6b35a49f51',\n        'f3e0319169eb9b85d5404795539a5e68fa1fbd583c064d2462b675f194a3ddb4'\n      ],\n      [\n        '494f4be219a1a77016dcd838431aea0001cdc8ae7a6fc688726578d9702857a5',\n        '42242a969283a5f339ba7f075e36ba2af925ce30d767ed6e55f4b031880d562c'\n      ],\n      [\n        'a598a8030da6d86c6bc7f2f5144ea549d28211ea58faa70ebf4c1e665c1fe9b5',\n        '204b5d6f84822c307e4b4a7140737aec23fc63b65b35f86a10026dbd2d864e6b'\n      ],\n      [\n        'c41916365abb2b5d09192f5f2dbeafec208f020f12570a184dbadc3e58595997',\n        '4f14351d0087efa49d245b328984989d5caf9450f34bfc0ed16e96b58fa9913'\n      ],\n      [\n        '841d6063a586fa475a724604da03bc5b92a2e0d2e0a36acfe4c73a5514742881',\n        '73867f59c0659e81904f9a1c7543698e62562d6744c169ce7a36de01a8d6154'\n      ],\n      [\n        '5e95bb399a6971d376026947f89bde2f282b33810928be4ded112ac4d70e20d5',\n        '39f23f366809085beebfc71181313775a99c9aed7d8ba38b161384c746012865'\n      ],\n      [\n        '36e4641a53948fd476c39f8a99fd974e5ec07564b5315d8bf99471bca0ef2f66',\n        'd2424b1b1abe4eb8164227b085c9aa9456ea13493fd563e06fd51cf5694c78fc'\n      ],\n      [\n        '336581ea7bfbbb290c191a2f507a41cf5643842170e914faeab27c2c579f726',\n        'ead12168595fe1be99252129b6e56b3391f7ab1410cd1e0ef3dcdcabd2fda224'\n      ],\n      [\n        '8ab89816dadfd6b6a1f2634fcf00ec8403781025ed6890c4849742706bd43ede',\n        '6fdcef09f2f6d0a044e654aef624136f503d459c3e89845858a47a9129cdd24e'\n      ],\n      [\n        '1e33f1a746c9c5778133344d9299fcaa20b0938e8acff2544bb40284b8c5fb94',\n        '60660257dd11b3aa9c8ed618d24edff2306d320f1d03010e33a7d2057f3b3b6'\n      ],\n      [\n        '85b7c1dcb3cec1b7ee7f30ded79dd20a0ed1f4cc18cbcfcfa410361fd8f08f31',\n        '3d98a9cdd026dd43f39048f25a8847f4fcafad1895d7a633c6fed3c35e999511'\n      ],\n      [\n        '29df9fbd8d9e46509275f4b125d6d45d7fbe9a3b878a7af872a2800661ac5f51',\n        'b4c4fe99c775a606e2d8862179139ffda61dc861c019e55cd2876eb2a27d84b'\n      ],\n      [\n        'a0b1cae06b0a847a3fea6e671aaf8adfdfe58ca2f768105c8082b2e449fce252',\n        'ae434102edde0958ec4b19d917a6a28e6b72da1834aff0e650f049503a296cf2'\n      ],\n      [\n        '4e8ceafb9b3e9a136dc7ff67e840295b499dfb3b2133e4ba113f2e4c0e121e5',\n        'cf2174118c8b6d7a4b48f6d534ce5c79422c086a63460502b827ce62a326683c'\n      ],\n      [\n        'd24a44e047e19b6f5afb81c7ca2f69080a5076689a010919f42725c2b789a33b',\n        '6fb8d5591b466f8fc63db50f1c0f1c69013f996887b8244d2cdec417afea8fa3'\n      ],\n      [\n        'ea01606a7a6c9cdd249fdfcfacb99584001edd28abbab77b5104e98e8e3b35d4',\n        '322af4908c7312b0cfbfe369f7a7b3cdb7d4494bc2823700cfd652188a3ea98d'\n      ],\n      [\n        'af8addbf2b661c8a6c6328655eb96651252007d8c5ea31be4ad196de8ce2131f',\n        '6749e67c029b85f52a034eafd096836b2520818680e26ac8f3dfbcdb71749700'\n      ],\n      [\n        'e3ae1974566ca06cc516d47e0fb165a674a3dabcfca15e722f0e3450f45889',\n        '2aeabe7e4531510116217f07bf4d07300de97e4874f81f533420a72eeb0bd6a4'\n      ],\n      [\n        '591ee355313d99721cf6993ffed1e3e301993ff3ed258802075ea8ced397e246',\n        'b0ea558a113c30bea60fc4775460c7901ff0b053d25ca2bdeee98f1a4be5d196'\n      ],\n      [\n        '11396d55fda54c49f19aa97318d8da61fa8584e47b084945077cf03255b52984',\n        '998c74a8cd45ac01289d5833a7beb4744ff536b01b257be4c5767bea93ea57a4'\n      ],\n      [\n        '3c5d2a1ba39c5a1790000738c9e0c40b8dcdfd5468754b6405540157e017aa7a',\n        'b2284279995a34e2f9d4de7396fc18b80f9b8b9fdd270f6661f79ca4c81bd257'\n      ],\n      [\n        'cc8704b8a60a0defa3a99a7299f2e9c3fbc395afb04ac078425ef8a1793cc030',\n        'bdd46039feed17881d1e0862db347f8cf395b74fc4bcdc4e940b74e3ac1f1b13'\n      ],\n      [\n        'c533e4f7ea8555aacd9777ac5cad29b97dd4defccc53ee7ea204119b2889b197',\n        '6f0a256bc5efdf429a2fb6242f1a43a2d9b925bb4a4b3a26bb8e0f45eb596096'\n      ],\n      [\n        'c14f8f2ccb27d6f109f6d08d03cc96a69ba8c34eec07bbcf566d48e33da6593',\n        'c359d6923bb398f7fd4473e16fe1c28475b740dd098075e6c0e8649113dc3a38'\n      ],\n      [\n        'a6cbc3046bc6a450bac24789fa17115a4c9739ed75f8f21ce441f72e0b90e6ef',\n        '21ae7f4680e889bb130619e2c0f95a360ceb573c70603139862afd617fa9b9f'\n      ],\n      [\n        '347d6d9a02c48927ebfb86c1359b1caf130a3c0267d11ce6344b39f99d43cc38',\n        '60ea7f61a353524d1c987f6ecec92f086d565ab687870cb12689ff1e31c74448'\n      ],\n      [\n        'da6545d2181db8d983f7dcb375ef5866d47c67b1bf31c8cf855ef7437b72656a',\n        '49b96715ab6878a79e78f07ce5680c5d6673051b4935bd897fea824b77dc208a'\n      ],\n      [\n        'c40747cc9d012cb1a13b8148309c6de7ec25d6945d657146b9d5994b8feb1111',\n        '5ca560753be2a12fc6de6caf2cb489565db936156b9514e1bb5e83037e0fa2d4'\n      ],\n      [\n        '4e42c8ec82c99798ccf3a610be870e78338c7f713348bd34c8203ef4037f3502',\n        '7571d74ee5e0fb92a7a8b33a07783341a5492144cc54bcc40a94473693606437'\n      ],\n      [\n        '3775ab7089bc6af823aba2e1af70b236d251cadb0c86743287522a1b3b0dedea',\n        'be52d107bcfa09d8bcb9736a828cfa7fac8db17bf7a76a2c42ad961409018cf7'\n      ],\n      [\n        'cee31cbf7e34ec379d94fb814d3d775ad954595d1314ba8846959e3e82f74e26',\n        '8fd64a14c06b589c26b947ae2bcf6bfa0149ef0be14ed4d80f448a01c43b1c6d'\n      ],\n      [\n        'b4f9eaea09b6917619f6ea6a4eb5464efddb58fd45b1ebefcdc1a01d08b47986',\n        '39e5c9925b5a54b07433a4f18c61726f8bb131c012ca542eb24a8ac07200682a'\n      ],\n      [\n        'd4263dfc3d2df923a0179a48966d30ce84e2515afc3dccc1b77907792ebcc60e',\n        '62dfaf07a0f78feb30e30d6295853ce189e127760ad6cf7fae164e122a208d54'\n      ],\n      [\n        '48457524820fa65a4f8d35eb6930857c0032acc0a4a2de422233eeda897612c4',\n        '25a748ab367979d98733c38a1fa1c2e7dc6cc07db2d60a9ae7a76aaa49bd0f77'\n      ],\n      [\n        'dfeeef1881101f2cb11644f3a2afdfc2045e19919152923f367a1767c11cceda',\n        'ecfb7056cf1de042f9420bab396793c0c390bde74b4bbdff16a83ae09a9a7517'\n      ],\n      [\n        '6d7ef6b17543f8373c573f44e1f389835d89bcbc6062ced36c82df83b8fae859',\n        'cd450ec335438986dfefa10c57fea9bcc521a0959b2d80bbf74b190dca712d10'\n      ],\n      [\n        'e75605d59102a5a2684500d3b991f2e3f3c88b93225547035af25af66e04541f',\n        'f5c54754a8f71ee540b9b48728473e314f729ac5308b06938360990e2bfad125'\n      ],\n      [\n        'eb98660f4c4dfaa06a2be453d5020bc99a0c2e60abe388457dd43fefb1ed620c',\n        '6cb9a8876d9cb8520609af3add26cd20a0a7cd8a9411131ce85f44100099223e'\n      ],\n      [\n        '13e87b027d8514d35939f2e6892b19922154596941888336dc3563e3b8dba942',\n        'fef5a3c68059a6dec5d624114bf1e91aac2b9da568d6abeb2570d55646b8adf1'\n      ],\n      [\n        'ee163026e9fd6fe017c38f06a5be6fc125424b371ce2708e7bf4491691e5764a',\n        '1acb250f255dd61c43d94ccc670d0f58f49ae3fa15b96623e5430da0ad6c62b2'\n      ],\n      [\n        'b268f5ef9ad51e4d78de3a750c2dc89b1e626d43505867999932e5db33af3d80',\n        '5f310d4b3c99b9ebb19f77d41c1dee018cf0d34fd4191614003e945a1216e423'\n      ],\n      [\n        'ff07f3118a9df035e9fad85eb6c7bfe42b02f01ca99ceea3bf7ffdba93c4750d',\n        '438136d603e858a3a5c440c38eccbaddc1d2942114e2eddd4740d098ced1f0d8'\n      ],\n      [\n        '8d8b9855c7c052a34146fd20ffb658bea4b9f69e0d825ebec16e8c3ce2b526a1',\n        'cdb559eedc2d79f926baf44fb84ea4d44bcf50fee51d7ceb30e2e7f463036758'\n      ],\n      [\n        '52db0b5384dfbf05bfa9d472d7ae26dfe4b851ceca91b1eba54263180da32b63',\n        'c3b997d050ee5d423ebaf66a6db9f57b3180c902875679de924b69d84a7b375'\n      ],\n      [\n        'e62f9490d3d51da6395efd24e80919cc7d0f29c3f3fa48c6fff543becbd43352',\n        '6d89ad7ba4876b0b22c2ca280c682862f342c8591f1daf5170e07bfd9ccafa7d'\n      ],\n      [\n        '7f30ea2476b399b4957509c88f77d0191afa2ff5cb7b14fd6d8e7d65aaab1193',\n        'ca5ef7d4b231c94c3b15389a5f6311e9daff7bb67b103e9880ef4bff637acaec'\n      ],\n      [\n        '5098ff1e1d9f14fb46a210fada6c903fef0fb7b4a1dd1d9ac60a0361800b7a00',\n        '9731141d81fc8f8084d37c6e7542006b3ee1b40d60dfe5362a5b132fd17ddc0'\n      ],\n      [\n        '32b78c7de9ee512a72895be6b9cbefa6e2f3c4ccce445c96b9f2c81e2778ad58',\n        'ee1849f513df71e32efc3896ee28260c73bb80547ae2275ba497237794c8753c'\n      ],\n      [\n        'e2cb74fddc8e9fbcd076eef2a7c72b0ce37d50f08269dfc074b581550547a4f7',\n        'd3aa2ed71c9dd2247a62df062736eb0baddea9e36122d2be8641abcb005cc4a4'\n      ],\n      [\n        '8438447566d4d7bedadc299496ab357426009a35f235cb141be0d99cd10ae3a8',\n        'c4e1020916980a4da5d01ac5e6ad330734ef0d7906631c4f2390426b2edd791f'\n      ],\n      [\n        '4162d488b89402039b584c6fc6c308870587d9c46f660b878ab65c82c711d67e',\n        '67163e903236289f776f22c25fb8a3afc1732f2b84b4e95dbda47ae5a0852649'\n      ],\n      [\n        '3fad3fa84caf0f34f0f89bfd2dcf54fc175d767aec3e50684f3ba4a4bf5f683d',\n        'cd1bc7cb6cc407bb2f0ca647c718a730cf71872e7d0d2a53fa20efcdfe61826'\n      ],\n      [\n        '674f2600a3007a00568c1a7ce05d0816c1fb84bf1370798f1c69532faeb1a86b',\n        '299d21f9413f33b3edf43b257004580b70db57da0b182259e09eecc69e0d38a5'\n      ],\n      [\n        'd32f4da54ade74abb81b815ad1fb3b263d82d6c692714bcff87d29bd5ee9f08f',\n        'f9429e738b8e53b968e99016c059707782e14f4535359d582fc416910b3eea87'\n      ],\n      [\n        '30e4e670435385556e593657135845d36fbb6931f72b08cb1ed954f1e3ce3ff6',\n        '462f9bce619898638499350113bbc9b10a878d35da70740dc695a559eb88db7b'\n      ],\n      [\n        'be2062003c51cc3004682904330e4dee7f3dcd10b01e580bf1971b04d4cad297',\n        '62188bc49d61e5428573d48a74e1c655b1c61090905682a0d5558ed72dccb9bc'\n      ],\n      [\n        '93144423ace3451ed29e0fb9ac2af211cb6e84a601df5993c419859fff5df04a',\n        '7c10dfb164c3425f5c71a3f9d7992038f1065224f72bb9d1d902a6d13037b47c'\n      ],\n      [\n        'b015f8044f5fcbdcf21ca26d6c34fb8197829205c7b7d2a7cb66418c157b112c',\n        'ab8c1e086d04e813744a655b2df8d5f83b3cdc6faa3088c1d3aea1454e3a1d5f'\n      ],\n      [\n        'd5e9e1da649d97d89e4868117a465a3a4f8a18de57a140d36b3f2af341a21b52',\n        '4cb04437f391ed73111a13cc1d4dd0db1693465c2240480d8955e8592f27447a'\n      ],\n      [\n        'd3ae41047dd7ca065dbf8ed77b992439983005cd72e16d6f996a5316d36966bb',\n        'bd1aeb21ad22ebb22a10f0303417c6d964f8cdd7df0aca614b10dc14d125ac46'\n      ],\n      [\n        '463e2763d885f958fc66cdd22800f0a487197d0a82e377b49f80af87c897b065',\n        'bfefacdb0e5d0fd7df3a311a94de062b26b80c61fbc97508b79992671ef7ca7f'\n      ],\n      [\n        '7985fdfd127c0567c6f53ec1bb63ec3158e597c40bfe747c83cddfc910641917',\n        '603c12daf3d9862ef2b25fe1de289aed24ed291e0ec6708703a5bd567f32ed03'\n      ],\n      [\n        '74a1ad6b5f76e39db2dd249410eac7f99e74c59cb83d2d0ed5ff1543da7703e9',\n        'cc6157ef18c9c63cd6193d83631bbea0093e0968942e8c33d5737fd790e0db08'\n      ],\n      [\n        '30682a50703375f602d416664ba19b7fc9bab42c72747463a71d0896b22f6da3',\n        '553e04f6b018b4fa6c8f39e7f311d3176290d0e0f19ca73f17714d9977a22ff8'\n      ],\n      [\n        '9e2158f0d7c0d5f26c3791efefa79597654e7a2b2464f52b1ee6c1347769ef57',\n        '712fcdd1b9053f09003a3481fa7762e9ffd7c8ef35a38509e2fbf2629008373'\n      ],\n      [\n        '176e26989a43c9cfeba4029c202538c28172e566e3c4fce7322857f3be327d66',\n        'ed8cc9d04b29eb877d270b4878dc43c19aefd31f4eee09ee7b47834c1fa4b1c3'\n      ],\n      [\n        '75d46efea3771e6e68abb89a13ad747ecf1892393dfc4f1b7004788c50374da8',\n        '9852390a99507679fd0b86fd2b39a868d7efc22151346e1a3ca4726586a6bed8'\n      ],\n      [\n        '809a20c67d64900ffb698c4c825f6d5f2310fb0451c869345b7319f645605721',\n        '9e994980d9917e22b76b061927fa04143d096ccc54963e6a5ebfa5f3f8e286c1'\n      ],\n      [\n        '1b38903a43f7f114ed4500b4eac7083fdefece1cf29c63528d563446f972c180',\n        '4036edc931a60ae889353f77fd53de4a2708b26b6f5da72ad3394119daf408f9'\n      ]\n    ]\n  }\n};\n","'use strict';\n\nvar utils = exports;\nvar BN = require('bn.js');\nvar minAssert = require('minimalistic-assert');\nvar minUtils = require('minimalistic-crypto-utils');\n\nutils.assert = minAssert;\nutils.toArray = minUtils.toArray;\nutils.zero2 = minUtils.zero2;\nutils.toHex = minUtils.toHex;\nutils.encode = minUtils.encode;\n\n// Represent num in a w-NAF form\nfunction getNAF(num, w) {\n  var naf = [];\n  var ws = 1 << (w + 1);\n  var k = num.clone();\n  while (k.cmpn(1) >= 0) {\n    var z;\n    if (k.isOdd()) {\n      var mod = k.andln(ws - 1);\n      if (mod > (ws >> 1) - 1)\n        z = (ws >> 1) - mod;\n      else\n        z = mod;\n      k.isubn(z);\n    } else {\n      z = 0;\n    }\n    naf.push(z);\n\n    // Optimization, shift by word if possible\n    var shift = (k.cmpn(0) !== 0 && k.andln(ws - 1) === 0) ? (w + 1) : 1;\n    for (var i = 1; i < shift; i++)\n      naf.push(0);\n    k.iushrn(shift);\n  }\n\n  return naf;\n}\nutils.getNAF = getNAF;\n\n// Represent k1, k2 in a Joint Sparse Form\nfunction getJSF(k1, k2) {\n  var jsf = [\n    [],\n    []\n  ];\n\n  k1 = k1.clone();\n  k2 = k2.clone();\n  var d1 = 0;\n  var d2 = 0;\n  while (k1.cmpn(-d1) > 0 || k2.cmpn(-d2) > 0) {\n\n    // First phase\n    var m14 = (k1.andln(3) + d1) & 3;\n    var m24 = (k2.andln(3) + d2) & 3;\n    if (m14 === 3)\n      m14 = -1;\n    if (m24 === 3)\n      m24 = -1;\n    var u1;\n    if ((m14 & 1) === 0) {\n      u1 = 0;\n    } else {\n      var m8 = (k1.andln(7) + d1) & 7;\n      if ((m8 === 3 || m8 === 5) && m24 === 2)\n        u1 = -m14;\n      else\n        u1 = m14;\n    }\n    jsf[0].push(u1);\n\n    var u2;\n    if ((m24 & 1) === 0) {\n      u2 = 0;\n    } else {\n      var m8 = (k2.andln(7) + d2) & 7;\n      if ((m8 === 3 || m8 === 5) && m14 === 2)\n        u2 = -m24;\n      else\n        u2 = m24;\n    }\n    jsf[1].push(u2);\n\n    // Second phase\n    if (2 * d1 === u1 + 1)\n      d1 = 1 - d1;\n    if (2 * d2 === u2 + 1)\n      d2 = 1 - d2;\n    k1.iushrn(1);\n    k2.iushrn(1);\n  }\n\n  return jsf;\n}\nutils.getJSF = getJSF;\n\nfunction cachedProperty(obj, name, computer) {\n  var key = '_' + name;\n  obj.prototype[name] = function cachedProperty() {\n    return this[key] !== undefined ? this[key] :\n           this[key] = computer.call(this);\n  };\n}\nutils.cachedProperty = cachedProperty;\n\nfunction parseBytes(bytes) {\n  return typeof bytes === 'string' ? utils.toArray(bytes, 'hex') :\n                                     bytes;\n}\nutils.parseBytes = parseBytes;\n\nfunction intFromLE(bytes) {\n  return new BN(bytes, 'hex', 'le');\n}\nutils.intFromLE = intFromLE;\n\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction $getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return $getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = $getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  var args = [];\n  for (var i = 0; i < arguments.length; i++) args.push(arguments[i]);\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    ReflectApply(this.listener, this.target, args);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      if (typeof listener !== 'function') {\n        throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n      }\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      if (typeof listener !== 'function') {\n        throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n      }\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n","'use strict'\nvar Buffer = require('safe-buffer').Buffer\nvar Transform = require('stream').Transform\nvar inherits = require('inherits')\n\nfunction throwIfNotStringOrBuffer (val, prefix) {\n  if (!Buffer.isBuffer(val) && typeof val !== 'string') {\n    throw new TypeError(prefix + ' must be a string or a buffer')\n  }\n}\n\nfunction HashBase (blockSize) {\n  Transform.call(this)\n\n  this._block = Buffer.allocUnsafe(blockSize)\n  this._blockSize = blockSize\n  this._blockOffset = 0\n  this._length = [0, 0, 0, 0]\n\n  this._finalized = false\n}\n\ninherits(HashBase, Transform)\n\nHashBase.prototype._transform = function (chunk, encoding, callback) {\n  var error = null\n  try {\n    this.update(chunk, encoding)\n  } catch (err) {\n    error = err\n  }\n\n  callback(error)\n}\n\nHashBase.prototype._flush = function (callback) {\n  var error = null\n  try {\n    this.push(this.digest())\n  } catch (err) {\n    error = err\n  }\n\n  callback(error)\n}\n\nHashBase.prototype.update = function (data, encoding) {\n  throwIfNotStringOrBuffer(data, 'Data')\n  if (this._finalized) throw new Error('Digest already called')\n  if (!Buffer.isBuffer(data)) data = Buffer.from(data, encoding)\n\n  // consume data\n  var block = this._block\n  var offset = 0\n  while (this._blockOffset + data.length - offset >= this._blockSize) {\n    for (var i = this._blockOffset; i < this._blockSize;) block[i++] = data[offset++]\n    this._update()\n    this._blockOffset = 0\n  }\n  while (offset < data.length) block[this._blockOffset++] = data[offset++]\n\n  // update length\n  for (var j = 0, carry = data.length * 8; carry > 0; ++j) {\n    this._length[j] += carry\n    carry = (this._length[j] / 0x0100000000) | 0\n    if (carry > 0) this._length[j] -= 0x0100000000 * carry\n  }\n\n  return this\n}\n\nHashBase.prototype._update = function () {\n  throw new Error('_update is not implemented')\n}\n\nHashBase.prototype.digest = function (encoding) {\n  if (this._finalized) throw new Error('Digest already called')\n  this._finalized = true\n\n  var digest = this._digest()\n  if (encoding !== undefined) digest = digest.toString(encoding)\n\n  // reset state\n  this._block.fill(0)\n  this._blockOffset = 0\n  for (var i = 0; i < 4; ++i) this._length[i] = 0\n\n  return digest\n}\n\nHashBase.prototype._digest = function () {\n  throw new Error('_digest is not implemented')\n}\n\nmodule.exports = HashBase\n","var hash = exports;\n\nhash.utils = require('./hash/utils');\nhash.common = require('./hash/common');\nhash.sha = require('./hash/sha');\nhash.ripemd = require('./hash/ripemd');\nhash.hmac = require('./hash/hmac');\n\n// Proxy hash functions to the main object\nhash.sha1 = hash.sha.sha1;\nhash.sha256 = hash.sha.sha256;\nhash.sha224 = hash.sha.sha224;\nhash.sha384 = hash.sha.sha384;\nhash.sha512 = hash.sha.sha512;\nhash.ripemd160 = hash.ripemd.ripemd160;\n","'use strict';\n\nvar utils = require('./utils');\nvar assert = require('minimalistic-assert');\n\nfunction BlockHash() {\n  this.pending = null;\n  this.pendingTotal = 0;\n  this.blockSize = this.constructor.blockSize;\n  this.outSize = this.constructor.outSize;\n  this.hmacStrength = this.constructor.hmacStrength;\n  this.padLength = this.constructor.padLength / 8;\n  this.endian = 'big';\n\n  this._delta8 = this.blockSize / 8;\n  this._delta32 = this.blockSize / 32;\n}\nexports.BlockHash = BlockHash;\n\nBlockHash.prototype.update = function update(msg, enc) {\n  // Convert message to array, pad it, and join into 32bit blocks\n  msg = utils.toArray(msg, enc);\n  if (!this.pending)\n    this.pending = msg;\n  else\n    this.pending = this.pending.concat(msg);\n  this.pendingTotal += msg.length;\n\n  // Enough data, try updating\n  if (this.pending.length >= this._delta8) {\n    msg = this.pending;\n\n    // Process pending data in blocks\n    var r = msg.length % this._delta8;\n    this.pending = msg.slice(msg.length - r, msg.length);\n    if (this.pending.length === 0)\n      this.pending = null;\n\n    msg = utils.join32(msg, 0, msg.length - r, this.endian);\n    for (var i = 0; i < msg.length; i += this._delta32)\n      this._update(msg, i, i + this._delta32);\n  }\n\n  return this;\n};\n\nBlockHash.prototype.digest = function digest(enc) {\n  this.update(this._pad());\n  assert(this.pending === null);\n\n  return this._digest(enc);\n};\n\nBlockHash.prototype._pad = function pad() {\n  var len = this.pendingTotal;\n  var bytes = this._delta8;\n  var k = bytes - ((len + this.padLength) % bytes);\n  var res = new Array(k + this.padLength);\n  res[0] = 0x80;\n  for (var i = 1; i < k; i++)\n    res[i] = 0;\n\n  // Append length\n  len <<= 3;\n  if (this.endian === 'big') {\n    for (var t = 8; t < this.padLength; t++)\n      res[i++] = 0;\n\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = (len >>> 24) & 0xff;\n    res[i++] = (len >>> 16) & 0xff;\n    res[i++] = (len >>> 8) & 0xff;\n    res[i++] = len & 0xff;\n  } else {\n    res[i++] = len & 0xff;\n    res[i++] = (len >>> 8) & 0xff;\n    res[i++] = (len >>> 16) & 0xff;\n    res[i++] = (len >>> 24) & 0xff;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n\n    for (t = 8; t < this.padLength; t++)\n      res[i++] = 0;\n  }\n\n  return res;\n};\n","'use strict';\n\nvar utils = require('./utils');\nvar assert = require('minimalistic-assert');\n\nfunction Hmac(hash, key, enc) {\n  if (!(this instanceof Hmac))\n    return new Hmac(hash, key, enc);\n  this.Hash = hash;\n  this.blockSize = hash.blockSize / 8;\n  this.outSize = hash.outSize / 8;\n  this.inner = null;\n  this.outer = null;\n\n  this._init(utils.toArray(key, enc));\n}\nmodule.exports = Hmac;\n\nHmac.prototype._init = function init(key) {\n  // Shorten key, if needed\n  if (key.length > this.blockSize)\n    key = new this.Hash().update(key).digest();\n  assert(key.length <= this.blockSize);\n\n  // Add padding to key\n  for (var i = key.length; i < this.blockSize; i++)\n    key.push(0);\n\n  for (i = 0; i < key.length; i++)\n    key[i] ^= 0x36;\n  this.inner = new this.Hash().update(key);\n\n  // 0x36 ^ 0x5c = 0x6a\n  for (i = 0; i < key.length; i++)\n    key[i] ^= 0x6a;\n  this.outer = new this.Hash().update(key);\n};\n\nHmac.prototype.update = function update(msg, enc) {\n  this.inner.update(msg, enc);\n  return this;\n};\n\nHmac.prototype.digest = function digest(enc) {\n  this.outer.update(this.inner.digest());\n  return this.outer.digest(enc);\n};\n","'use strict';\n\nvar utils = require('./utils');\nvar common = require('./common');\n\nvar rotl32 = utils.rotl32;\nvar sum32 = utils.sum32;\nvar sum32_3 = utils.sum32_3;\nvar sum32_4 = utils.sum32_4;\nvar BlockHash = common.BlockHash;\n\nfunction RIPEMD160() {\n  if (!(this instanceof RIPEMD160))\n    return new RIPEMD160();\n\n  BlockHash.call(this);\n\n  this.h = [ 0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0 ];\n  this.endian = 'little';\n}\nutils.inherits(RIPEMD160, BlockHash);\nexports.ripemd160 = RIPEMD160;\n\nRIPEMD160.blockSize = 512;\nRIPEMD160.outSize = 160;\nRIPEMD160.hmacStrength = 192;\nRIPEMD160.padLength = 64;\n\nRIPEMD160.prototype._update = function update(msg, start) {\n  var A = this.h[0];\n  var B = this.h[1];\n  var C = this.h[2];\n  var D = this.h[3];\n  var E = this.h[4];\n  var Ah = A;\n  var Bh = B;\n  var Ch = C;\n  var Dh = D;\n  var Eh = E;\n  for (var j = 0; j < 80; j++) {\n    var T = sum32(\n      rotl32(\n        sum32_4(A, f(j, B, C, D), msg[r[j] + start], K(j)),\n        s[j]),\n      E);\n    A = E;\n    E = D;\n    D = rotl32(C, 10);\n    C = B;\n    B = T;\n    T = sum32(\n      rotl32(\n        sum32_4(Ah, f(79 - j, Bh, Ch, Dh), msg[rh[j] + start], Kh(j)),\n        sh[j]),\n      Eh);\n    Ah = Eh;\n    Eh = Dh;\n    Dh = rotl32(Ch, 10);\n    Ch = Bh;\n    Bh = T;\n  }\n  T = sum32_3(this.h[1], C, Dh);\n  this.h[1] = sum32_3(this.h[2], D, Eh);\n  this.h[2] = sum32_3(this.h[3], E, Ah);\n  this.h[3] = sum32_3(this.h[4], A, Bh);\n  this.h[4] = sum32_3(this.h[0], B, Ch);\n  this.h[0] = T;\n};\n\nRIPEMD160.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'little');\n  else\n    return utils.split32(this.h, 'little');\n};\n\nfunction f(j, x, y, z) {\n  if (j <= 15)\n    return x ^ y ^ z;\n  else if (j <= 31)\n    return (x & y) | ((~x) & z);\n  else if (j <= 47)\n    return (x | (~y)) ^ z;\n  else if (j <= 63)\n    return (x & z) | (y & (~z));\n  else\n    return x ^ (y | (~z));\n}\n\nfunction K(j) {\n  if (j <= 15)\n    return 0x00000000;\n  else if (j <= 31)\n    return 0x5a827999;\n  else if (j <= 47)\n    return 0x6ed9eba1;\n  else if (j <= 63)\n    return 0x8f1bbcdc;\n  else\n    return 0xa953fd4e;\n}\n\nfunction Kh(j) {\n  if (j <= 15)\n    return 0x50a28be6;\n  else if (j <= 31)\n    return 0x5c4dd124;\n  else if (j <= 47)\n    return 0x6d703ef3;\n  else if (j <= 63)\n    return 0x7a6d76e9;\n  else\n    return 0x00000000;\n}\n\nvar r = [\n  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n  7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8,\n  3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12,\n  1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2,\n  4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13\n];\n\nvar rh = [\n  5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12,\n  6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2,\n  15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13,\n  8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14,\n  12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11\n];\n\nvar s = [\n  11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8,\n  7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12,\n  11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5,\n  11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12,\n  9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6\n];\n\nvar sh = [\n  8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6,\n  9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11,\n  9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5,\n  15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8,\n  8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11\n];\n","'use strict';\n\nexports.sha1 = require('./sha/1');\nexports.sha224 = require('./sha/224');\nexports.sha256 = require('./sha/256');\nexports.sha384 = require('./sha/384');\nexports.sha512 = require('./sha/512');\n","'use strict';\n\nvar utils = require('../utils');\nvar common = require('../common');\nvar shaCommon = require('./common');\n\nvar rotl32 = utils.rotl32;\nvar sum32 = utils.sum32;\nvar sum32_5 = utils.sum32_5;\nvar ft_1 = shaCommon.ft_1;\nvar BlockHash = common.BlockHash;\n\nvar sha1_K = [\n  0x5A827999, 0x6ED9EBA1,\n  0x8F1BBCDC, 0xCA62C1D6\n];\n\nfunction SHA1() {\n  if (!(this instanceof SHA1))\n    return new SHA1();\n\n  BlockHash.call(this);\n  this.h = [\n    0x67452301, 0xefcdab89, 0x98badcfe,\n    0x10325476, 0xc3d2e1f0 ];\n  this.W = new Array(80);\n}\n\nutils.inherits(SHA1, BlockHash);\nmodule.exports = SHA1;\n\nSHA1.blockSize = 512;\nSHA1.outSize = 160;\nSHA1.hmacStrength = 80;\nSHA1.padLength = 64;\n\nSHA1.prototype._update = function _update(msg, start) {\n  var W = this.W;\n\n  for (var i = 0; i < 16; i++)\n    W[i] = msg[start + i];\n\n  for(; i < W.length; i++)\n    W[i] = rotl32(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16], 1);\n\n  var a = this.h[0];\n  var b = this.h[1];\n  var c = this.h[2];\n  var d = this.h[3];\n  var e = this.h[4];\n\n  for (i = 0; i < W.length; i++) {\n    var s = ~~(i / 20);\n    var t = sum32_5(rotl32(a, 5), ft_1(s, b, c, d), e, W[i], sha1_K[s]);\n    e = d;\n    d = c;\n    c = rotl32(b, 30);\n    b = a;\n    a = t;\n  }\n\n  this.h[0] = sum32(this.h[0], a);\n  this.h[1] = sum32(this.h[1], b);\n  this.h[2] = sum32(this.h[2], c);\n  this.h[3] = sum32(this.h[3], d);\n  this.h[4] = sum32(this.h[4], e);\n};\n\nSHA1.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar SHA256 = require('./256');\n\nfunction SHA224() {\n  if (!(this instanceof SHA224))\n    return new SHA224();\n\n  SHA256.call(this);\n  this.h = [\n    0xc1059ed8, 0x367cd507, 0x3070dd17, 0xf70e5939,\n    0xffc00b31, 0x68581511, 0x64f98fa7, 0xbefa4fa4 ];\n}\nutils.inherits(SHA224, SHA256);\nmodule.exports = SHA224;\n\nSHA224.blockSize = 512;\nSHA224.outSize = 224;\nSHA224.hmacStrength = 192;\nSHA224.padLength = 64;\n\nSHA224.prototype._digest = function digest(enc) {\n  // Just truncate output\n  if (enc === 'hex')\n    return utils.toHex32(this.h.slice(0, 7), 'big');\n  else\n    return utils.split32(this.h.slice(0, 7), 'big');\n};\n\n","'use strict';\n\nvar utils = require('../utils');\nvar common = require('../common');\nvar shaCommon = require('./common');\nvar assert = require('minimalistic-assert');\n\nvar sum32 = utils.sum32;\nvar sum32_4 = utils.sum32_4;\nvar sum32_5 = utils.sum32_5;\nvar ch32 = shaCommon.ch32;\nvar maj32 = shaCommon.maj32;\nvar s0_256 = shaCommon.s0_256;\nvar s1_256 = shaCommon.s1_256;\nvar g0_256 = shaCommon.g0_256;\nvar g1_256 = shaCommon.g1_256;\n\nvar BlockHash = common.BlockHash;\n\nvar sha256_K = [\n  0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5,\n  0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n  0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3,\n  0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n  0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc,\n  0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n  0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7,\n  0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n  0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13,\n  0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n  0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3,\n  0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n  0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5,\n  0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n  0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,\n  0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n];\n\nfunction SHA256() {\n  if (!(this instanceof SHA256))\n    return new SHA256();\n\n  BlockHash.call(this);\n  this.h = [\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a,\n    0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n  ];\n  this.k = sha256_K;\n  this.W = new Array(64);\n}\nutils.inherits(SHA256, BlockHash);\nmodule.exports = SHA256;\n\nSHA256.blockSize = 512;\nSHA256.outSize = 256;\nSHA256.hmacStrength = 192;\nSHA256.padLength = 64;\n\nSHA256.prototype._update = function _update(msg, start) {\n  var W = this.W;\n\n  for (var i = 0; i < 16; i++)\n    W[i] = msg[start + i];\n  for (; i < W.length; i++)\n    W[i] = sum32_4(g1_256(W[i - 2]), W[i - 7], g0_256(W[i - 15]), W[i - 16]);\n\n  var a = this.h[0];\n  var b = this.h[1];\n  var c = this.h[2];\n  var d = this.h[3];\n  var e = this.h[4];\n  var f = this.h[5];\n  var g = this.h[6];\n  var h = this.h[7];\n\n  assert(this.k.length === W.length);\n  for (i = 0; i < W.length; i++) {\n    var T1 = sum32_5(h, s1_256(e), ch32(e, f, g), this.k[i], W[i]);\n    var T2 = sum32(s0_256(a), maj32(a, b, c));\n    h = g;\n    g = f;\n    f = e;\n    e = sum32(d, T1);\n    d = c;\n    c = b;\n    b = a;\n    a = sum32(T1, T2);\n  }\n\n  this.h[0] = sum32(this.h[0], a);\n  this.h[1] = sum32(this.h[1], b);\n  this.h[2] = sum32(this.h[2], c);\n  this.h[3] = sum32(this.h[3], d);\n  this.h[4] = sum32(this.h[4], e);\n  this.h[5] = sum32(this.h[5], f);\n  this.h[6] = sum32(this.h[6], g);\n  this.h[7] = sum32(this.h[7], h);\n};\n\nSHA256.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n","'use strict';\n\nvar utils = require('../utils');\n\nvar SHA512 = require('./512');\n\nfunction SHA384() {\n  if (!(this instanceof SHA384))\n    return new SHA384();\n\n  SHA512.call(this);\n  this.h = [\n    0xcbbb9d5d, 0xc1059ed8,\n    0x629a292a, 0x367cd507,\n    0x9159015a, 0x3070dd17,\n    0x152fecd8, 0xf70e5939,\n    0x67332667, 0xffc00b31,\n    0x8eb44a87, 0x68581511,\n    0xdb0c2e0d, 0x64f98fa7,\n    0x47b5481d, 0xbefa4fa4 ];\n}\nutils.inherits(SHA384, SHA512);\nmodule.exports = SHA384;\n\nSHA384.blockSize = 1024;\nSHA384.outSize = 384;\nSHA384.hmacStrength = 192;\nSHA384.padLength = 128;\n\nSHA384.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h.slice(0, 12), 'big');\n  else\n    return utils.split32(this.h.slice(0, 12), 'big');\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar common = require('../common');\nvar assert = require('minimalistic-assert');\n\nvar rotr64_hi = utils.rotr64_hi;\nvar rotr64_lo = utils.rotr64_lo;\nvar shr64_hi = utils.shr64_hi;\nvar shr64_lo = utils.shr64_lo;\nvar sum64 = utils.sum64;\nvar sum64_hi = utils.sum64_hi;\nvar sum64_lo = utils.sum64_lo;\nvar sum64_4_hi = utils.sum64_4_hi;\nvar sum64_4_lo = utils.sum64_4_lo;\nvar sum64_5_hi = utils.sum64_5_hi;\nvar sum64_5_lo = utils.sum64_5_lo;\n\nvar BlockHash = common.BlockHash;\n\nvar sha512_K = [\n  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,\n  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,\n  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,\n  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,\n  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,\n  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,\n  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,\n  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,\n  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,\n  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,\n  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,\n  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,\n  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,\n  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,\n  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,\n  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,\n  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,\n  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,\n  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,\n  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,\n  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,\n  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,\n  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,\n  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,\n  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,\n  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,\n  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,\n  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,\n  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,\n  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,\n  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,\n  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,\n  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,\n  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,\n  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,\n  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,\n  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,\n  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,\n  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,\n  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817\n];\n\nfunction SHA512() {\n  if (!(this instanceof SHA512))\n    return new SHA512();\n\n  BlockHash.call(this);\n  this.h = [\n    0x6a09e667, 0xf3bcc908,\n    0xbb67ae85, 0x84caa73b,\n    0x3c6ef372, 0xfe94f82b,\n    0xa54ff53a, 0x5f1d36f1,\n    0x510e527f, 0xade682d1,\n    0x9b05688c, 0x2b3e6c1f,\n    0x1f83d9ab, 0xfb41bd6b,\n    0x5be0cd19, 0x137e2179 ];\n  this.k = sha512_K;\n  this.W = new Array(160);\n}\nutils.inherits(SHA512, BlockHash);\nmodule.exports = SHA512;\n\nSHA512.blockSize = 1024;\nSHA512.outSize = 512;\nSHA512.hmacStrength = 192;\nSHA512.padLength = 128;\n\nSHA512.prototype._prepareBlock = function _prepareBlock(msg, start) {\n  var W = this.W;\n\n  // 32 x 32bit words\n  for (var i = 0; i < 32; i++)\n    W[i] = msg[start + i];\n  for (; i < W.length; i += 2) {\n    var c0_hi = g1_512_hi(W[i - 4], W[i - 3]);  // i - 2\n    var c0_lo = g1_512_lo(W[i - 4], W[i - 3]);\n    var c1_hi = W[i - 14];  // i - 7\n    var c1_lo = W[i - 13];\n    var c2_hi = g0_512_hi(W[i - 30], W[i - 29]);  // i - 15\n    var c2_lo = g0_512_lo(W[i - 30], W[i - 29]);\n    var c3_hi = W[i - 32];  // i - 16\n    var c3_lo = W[i - 31];\n\n    W[i] = sum64_4_hi(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo);\n    W[i + 1] = sum64_4_lo(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo);\n  }\n};\n\nSHA512.prototype._update = function _update(msg, start) {\n  this._prepareBlock(msg, start);\n\n  var W = this.W;\n\n  var ah = this.h[0];\n  var al = this.h[1];\n  var bh = this.h[2];\n  var bl = this.h[3];\n  var ch = this.h[4];\n  var cl = this.h[5];\n  var dh = this.h[6];\n  var dl = this.h[7];\n  var eh = this.h[8];\n  var el = this.h[9];\n  var fh = this.h[10];\n  var fl = this.h[11];\n  var gh = this.h[12];\n  var gl = this.h[13];\n  var hh = this.h[14];\n  var hl = this.h[15];\n\n  assert(this.k.length === W.length);\n  for (var i = 0; i < W.length; i += 2) {\n    var c0_hi = hh;\n    var c0_lo = hl;\n    var c1_hi = s1_512_hi(eh, el);\n    var c1_lo = s1_512_lo(eh, el);\n    var c2_hi = ch64_hi(eh, el, fh, fl, gh, gl);\n    var c2_lo = ch64_lo(eh, el, fh, fl, gh, gl);\n    var c3_hi = this.k[i];\n    var c3_lo = this.k[i + 1];\n    var c4_hi = W[i];\n    var c4_lo = W[i + 1];\n\n    var T1_hi = sum64_5_hi(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo,\n      c4_hi, c4_lo);\n    var T1_lo = sum64_5_lo(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo,\n      c4_hi, c4_lo);\n\n    c0_hi = s0_512_hi(ah, al);\n    c0_lo = s0_512_lo(ah, al);\n    c1_hi = maj64_hi(ah, al, bh, bl, ch, cl);\n    c1_lo = maj64_lo(ah, al, bh, bl, ch, cl);\n\n    var T2_hi = sum64_hi(c0_hi, c0_lo, c1_hi, c1_lo);\n    var T2_lo = sum64_lo(c0_hi, c0_lo, c1_hi, c1_lo);\n\n    hh = gh;\n    hl = gl;\n\n    gh = fh;\n    gl = fl;\n\n    fh = eh;\n    fl = el;\n\n    eh = sum64_hi(dh, dl, T1_hi, T1_lo);\n    el = sum64_lo(dl, dl, T1_hi, T1_lo);\n\n    dh = ch;\n    dl = cl;\n\n    ch = bh;\n    cl = bl;\n\n    bh = ah;\n    bl = al;\n\n    ah = sum64_hi(T1_hi, T1_lo, T2_hi, T2_lo);\n    al = sum64_lo(T1_hi, T1_lo, T2_hi, T2_lo);\n  }\n\n  sum64(this.h, 0, ah, al);\n  sum64(this.h, 2, bh, bl);\n  sum64(this.h, 4, ch, cl);\n  sum64(this.h, 6, dh, dl);\n  sum64(this.h, 8, eh, el);\n  sum64(this.h, 10, fh, fl);\n  sum64(this.h, 12, gh, gl);\n  sum64(this.h, 14, hh, hl);\n};\n\nSHA512.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n\nfunction ch64_hi(xh, xl, yh, yl, zh) {\n  var r = (xh & yh) ^ ((~xh) & zh);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction ch64_lo(xh, xl, yh, yl, zh, zl) {\n  var r = (xl & yl) ^ ((~xl) & zl);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction maj64_hi(xh, xl, yh, yl, zh) {\n  var r = (xh & yh) ^ (xh & zh) ^ (yh & zh);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction maj64_lo(xh, xl, yh, yl, zh, zl) {\n  var r = (xl & yl) ^ (xl & zl) ^ (yl & zl);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s0_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 28);\n  var c1_hi = rotr64_hi(xl, xh, 2);  // 34\n  var c2_hi = rotr64_hi(xl, xh, 7);  // 39\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s0_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 28);\n  var c1_lo = rotr64_lo(xl, xh, 2);  // 34\n  var c2_lo = rotr64_lo(xl, xh, 7);  // 39\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s1_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 14);\n  var c1_hi = rotr64_hi(xh, xl, 18);\n  var c2_hi = rotr64_hi(xl, xh, 9);  // 41\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s1_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 14);\n  var c1_lo = rotr64_lo(xh, xl, 18);\n  var c2_lo = rotr64_lo(xl, xh, 9);  // 41\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g0_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 1);\n  var c1_hi = rotr64_hi(xh, xl, 8);\n  var c2_hi = shr64_hi(xh, xl, 7);\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g0_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 1);\n  var c1_lo = rotr64_lo(xh, xl, 8);\n  var c2_lo = shr64_lo(xh, xl, 7);\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g1_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 19);\n  var c1_hi = rotr64_hi(xl, xh, 29);  // 61\n  var c2_hi = shr64_hi(xh, xl, 6);\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g1_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 19);\n  var c1_lo = rotr64_lo(xl, xh, 29);  // 61\n  var c2_lo = shr64_lo(xh, xl, 6);\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n","'use strict';\n\nvar utils = require('../utils');\nvar rotr32 = utils.rotr32;\n\nfunction ft_1(s, x, y, z) {\n  if (s === 0)\n    return ch32(x, y, z);\n  if (s === 1 || s === 3)\n    return p32(x, y, z);\n  if (s === 2)\n    return maj32(x, y, z);\n}\nexports.ft_1 = ft_1;\n\nfunction ch32(x, y, z) {\n  return (x & y) ^ ((~x) & z);\n}\nexports.ch32 = ch32;\n\nfunction maj32(x, y, z) {\n  return (x & y) ^ (x & z) ^ (y & z);\n}\nexports.maj32 = maj32;\n\nfunction p32(x, y, z) {\n  return x ^ y ^ z;\n}\nexports.p32 = p32;\n\nfunction s0_256(x) {\n  return rotr32(x, 2) ^ rotr32(x, 13) ^ rotr32(x, 22);\n}\nexports.s0_256 = s0_256;\n\nfunction s1_256(x) {\n  return rotr32(x, 6) ^ rotr32(x, 11) ^ rotr32(x, 25);\n}\nexports.s1_256 = s1_256;\n\nfunction g0_256(x) {\n  return rotr32(x, 7) ^ rotr32(x, 18) ^ (x >>> 3);\n}\nexports.g0_256 = g0_256;\n\nfunction g1_256(x) {\n  return rotr32(x, 17) ^ rotr32(x, 19) ^ (x >>> 10);\n}\nexports.g1_256 = g1_256;\n","'use strict';\n\nvar assert = require('minimalistic-assert');\nvar inherits = require('inherits');\n\nexports.inherits = inherits;\n\nfunction isSurrogatePair(msg, i) {\n  if ((msg.charCodeAt(i) & 0xFC00) !== 0xD800) {\n    return false;\n  }\n  if (i < 0 || i + 1 >= msg.length) {\n    return false;\n  }\n  return (msg.charCodeAt(i + 1) & 0xFC00) === 0xDC00;\n}\n\nfunction toArray(msg, enc) {\n  if (Array.isArray(msg))\n    return msg.slice();\n  if (!msg)\n    return [];\n  var res = [];\n  if (typeof msg === 'string') {\n    if (!enc) {\n      // Inspired by stringToUtf8ByteArray() in closure-library by Google\n      // https://github.com/google/closure-library/blob/8598d87242af59aac233270742c8984e2b2bdbe0/closure/goog/crypt/crypt.js#L117-L143\n      // Apache License 2.0\n      // https://github.com/google/closure-library/blob/master/LICENSE\n      var p = 0;\n      for (var i = 0; i < msg.length; i++) {\n        var c = msg.charCodeAt(i);\n        if (c < 128) {\n          res[p++] = c;\n        } else if (c < 2048) {\n          res[p++] = (c >> 6) | 192;\n          res[p++] = (c & 63) | 128;\n        } else if (isSurrogatePair(msg, i)) {\n          c = 0x10000 + ((c & 0x03FF) << 10) + (msg.charCodeAt(++i) & 0x03FF);\n          res[p++] = (c >> 18) | 240;\n          res[p++] = ((c >> 12) & 63) | 128;\n          res[p++] = ((c >> 6) & 63) | 128;\n          res[p++] = (c & 63) | 128;\n        } else {\n          res[p++] = (c >> 12) | 224;\n          res[p++] = ((c >> 6) & 63) | 128;\n          res[p++] = (c & 63) | 128;\n        }\n      }\n    } else if (enc === 'hex') {\n      msg = msg.replace(/[^a-z0-9]+/ig, '');\n      if (msg.length % 2 !== 0)\n        msg = '0' + msg;\n      for (i = 0; i < msg.length; i += 2)\n        res.push(parseInt(msg[i] + msg[i + 1], 16));\n    }\n  } else {\n    for (i = 0; i < msg.length; i++)\n      res[i] = msg[i] | 0;\n  }\n  return res;\n}\nexports.toArray = toArray;\n\nfunction toHex(msg) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++)\n    res += zero2(msg[i].toString(16));\n  return res;\n}\nexports.toHex = toHex;\n\nfunction htonl(w) {\n  var res = (w >>> 24) |\n            ((w >>> 8) & 0xff00) |\n            ((w << 8) & 0xff0000) |\n            ((w & 0xff) << 24);\n  return res >>> 0;\n}\nexports.htonl = htonl;\n\nfunction toHex32(msg, endian) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++) {\n    var w = msg[i];\n    if (endian === 'little')\n      w = htonl(w);\n    res += zero8(w.toString(16));\n  }\n  return res;\n}\nexports.toHex32 = toHex32;\n\nfunction zero2(word) {\n  if (word.length === 1)\n    return '0' + word;\n  else\n    return word;\n}\nexports.zero2 = zero2;\n\nfunction zero8(word) {\n  if (word.length === 7)\n    return '0' + word;\n  else if (word.length === 6)\n    return '00' + word;\n  else if (word.length === 5)\n    return '000' + word;\n  else if (word.length === 4)\n    return '0000' + word;\n  else if (word.length === 3)\n    return '00000' + word;\n  else if (word.length === 2)\n    return '000000' + word;\n  else if (word.length === 1)\n    return '0000000' + word;\n  else\n    return word;\n}\nexports.zero8 = zero8;\n\nfunction join32(msg, start, end, endian) {\n  var len = end - start;\n  assert(len % 4 === 0);\n  var res = new Array(len / 4);\n  for (var i = 0, k = start; i < res.length; i++, k += 4) {\n    var w;\n    if (endian === 'big')\n      w = (msg[k] << 24) | (msg[k + 1] << 16) | (msg[k + 2] << 8) | msg[k + 3];\n    else\n      w = (msg[k + 3] << 24) | (msg[k + 2] << 16) | (msg[k + 1] << 8) | msg[k];\n    res[i] = w >>> 0;\n  }\n  return res;\n}\nexports.join32 = join32;\n\nfunction split32(msg, endian) {\n  var res = new Array(msg.length * 4);\n  for (var i = 0, k = 0; i < msg.length; i++, k += 4) {\n    var m = msg[i];\n    if (endian === 'big') {\n      res[k] = m >>> 24;\n      res[k + 1] = (m >>> 16) & 0xff;\n      res[k + 2] = (m >>> 8) & 0xff;\n      res[k + 3] = m & 0xff;\n    } else {\n      res[k + 3] = m >>> 24;\n      res[k + 2] = (m >>> 16) & 0xff;\n      res[k + 1] = (m >>> 8) & 0xff;\n      res[k] = m & 0xff;\n    }\n  }\n  return res;\n}\nexports.split32 = split32;\n\nfunction rotr32(w, b) {\n  return (w >>> b) | (w << (32 - b));\n}\nexports.rotr32 = rotr32;\n\nfunction rotl32(w, b) {\n  return (w << b) | (w >>> (32 - b));\n}\nexports.rotl32 = rotl32;\n\nfunction sum32(a, b) {\n  return (a + b) >>> 0;\n}\nexports.sum32 = sum32;\n\nfunction sum32_3(a, b, c) {\n  return (a + b + c) >>> 0;\n}\nexports.sum32_3 = sum32_3;\n\nfunction sum32_4(a, b, c, d) {\n  return (a + b + c + d) >>> 0;\n}\nexports.sum32_4 = sum32_4;\n\nfunction sum32_5(a, b, c, d, e) {\n  return (a + b + c + d + e) >>> 0;\n}\nexports.sum32_5 = sum32_5;\n\nfunction sum64(buf, pos, ah, al) {\n  var bh = buf[pos];\n  var bl = buf[pos + 1];\n\n  var lo = (al + bl) >>> 0;\n  var hi = (lo < al ? 1 : 0) + ah + bh;\n  buf[pos] = hi >>> 0;\n  buf[pos + 1] = lo;\n}\nexports.sum64 = sum64;\n\nfunction sum64_hi(ah, al, bh, bl) {\n  var lo = (al + bl) >>> 0;\n  var hi = (lo < al ? 1 : 0) + ah + bh;\n  return hi >>> 0;\n}\nexports.sum64_hi = sum64_hi;\n\nfunction sum64_lo(ah, al, bh, bl) {\n  var lo = al + bl;\n  return lo >>> 0;\n}\nexports.sum64_lo = sum64_lo;\n\nfunction sum64_4_hi(ah, al, bh, bl, ch, cl, dh, dl) {\n  var carry = 0;\n  var lo = al;\n  lo = (lo + bl) >>> 0;\n  carry += lo < al ? 1 : 0;\n  lo = (lo + cl) >>> 0;\n  carry += lo < cl ? 1 : 0;\n  lo = (lo + dl) >>> 0;\n  carry += lo < dl ? 1 : 0;\n\n  var hi = ah + bh + ch + dh + carry;\n  return hi >>> 0;\n}\nexports.sum64_4_hi = sum64_4_hi;\n\nfunction sum64_4_lo(ah, al, bh, bl, ch, cl, dh, dl) {\n  var lo = al + bl + cl + dl;\n  return lo >>> 0;\n}\nexports.sum64_4_lo = sum64_4_lo;\n\nfunction sum64_5_hi(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {\n  var carry = 0;\n  var lo = al;\n  lo = (lo + bl) >>> 0;\n  carry += lo < al ? 1 : 0;\n  lo = (lo + cl) >>> 0;\n  carry += lo < cl ? 1 : 0;\n  lo = (lo + dl) >>> 0;\n  carry += lo < dl ? 1 : 0;\n  lo = (lo + el) >>> 0;\n  carry += lo < el ? 1 : 0;\n\n  var hi = ah + bh + ch + dh + eh + carry;\n  return hi >>> 0;\n}\nexports.sum64_5_hi = sum64_5_hi;\n\nfunction sum64_5_lo(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {\n  var lo = al + bl + cl + dl + el;\n\n  return lo >>> 0;\n}\nexports.sum64_5_lo = sum64_5_lo;\n\nfunction rotr64_hi(ah, al, num) {\n  var r = (al << (32 - num)) | (ah >>> num);\n  return r >>> 0;\n}\nexports.rotr64_hi = rotr64_hi;\n\nfunction rotr64_lo(ah, al, num) {\n  var r = (ah << (32 - num)) | (al >>> num);\n  return r >>> 0;\n}\nexports.rotr64_lo = rotr64_lo;\n\nfunction shr64_hi(ah, al, num) {\n  return ah >>> num;\n}\nexports.shr64_hi = shr64_hi;\n\nfunction shr64_lo(ah, al, num) {\n  var r = (ah << (32 - num)) | (al >>> num);\n  return r >>> 0;\n}\nexports.shr64_lo = shr64_lo;\n","'use strict';\n\nvar hash = require('hash.js');\nvar utils = require('minimalistic-crypto-utils');\nvar assert = require('minimalistic-assert');\n\nfunction HmacDRBG(options) {\n  if (!(this instanceof HmacDRBG))\n    return new HmacDRBG(options);\n  this.hash = options.hash;\n  this.predResist = !!options.predResist;\n\n  this.outLen = this.hash.outSize;\n  this.minEntropy = options.minEntropy || this.hash.hmacStrength;\n\n  this._reseed = null;\n  this.reseedInterval = null;\n  this.K = null;\n  this.V = null;\n\n  var entropy = utils.toArray(options.entropy, options.entropyEnc || 'hex');\n  var nonce = utils.toArray(options.nonce, options.nonceEnc || 'hex');\n  var pers = utils.toArray(options.pers, options.persEnc || 'hex');\n  assert(entropy.length >= (this.minEntropy / 8),\n         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');\n  this._init(entropy, nonce, pers);\n}\nmodule.exports = HmacDRBG;\n\nHmacDRBG.prototype._init = function init(entropy, nonce, pers) {\n  var seed = entropy.concat(nonce).concat(pers);\n\n  this.K = new Array(this.outLen / 8);\n  this.V = new Array(this.outLen / 8);\n  for (var i = 0; i < this.V.length; i++) {\n    this.K[i] = 0x00;\n    this.V[i] = 0x01;\n  }\n\n  this._update(seed);\n  this._reseed = 1;\n  this.reseedInterval = 0x1000000000000;  // 2^48\n};\n\nHmacDRBG.prototype._hmac = function hmac() {\n  return new hash.hmac(this.hash, this.K);\n};\n\nHmacDRBG.prototype._update = function update(seed) {\n  var kmac = this._hmac()\n                 .update(this.V)\n                 .update([ 0x00 ]);\n  if (seed)\n    kmac = kmac.update(seed);\n  this.K = kmac.digest();\n  this.V = this._hmac().update(this.V).digest();\n  if (!seed)\n    return;\n\n  this.K = this._hmac()\n               .update(this.V)\n               .update([ 0x01 ])\n               .update(seed)\n               .digest();\n  this.V = this._hmac().update(this.V).digest();\n};\n\nHmacDRBG.prototype.reseed = function reseed(entropy, entropyEnc, add, addEnc) {\n  // Optional entropy enc\n  if (typeof entropyEnc !== 'string') {\n    addEnc = add;\n    add = entropyEnc;\n    entropyEnc = null;\n  }\n\n  entropy = utils.toArray(entropy, entropyEnc);\n  add = utils.toArray(add, addEnc);\n\n  assert(entropy.length >= (this.minEntropy / 8),\n         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');\n\n  this._update(entropy.concat(add || []));\n  this._reseed = 1;\n};\n\nHmacDRBG.prototype.generate = function generate(len, enc, add, addEnc) {\n  if (this._reseed > this.reseedInterval)\n    throw new Error('Reseed is required');\n\n  // Optional encoding\n  if (typeof enc !== 'string') {\n    addEnc = add;\n    add = enc;\n    enc = null;\n  }\n\n  // Optional additional data\n  if (add) {\n    add = utils.toArray(add, addEnc || 'hex');\n    this._update(add);\n  }\n\n  var temp = [];\n  while (temp.length < len) {\n    this.V = this._hmac().update(this.V).digest();\n    temp = temp.concat(this.V);\n  }\n\n  var res = temp.slice(0, len);\n  this._update(add);\n  this._reseed++;\n  return utils.encode(res, enc);\n};\n","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","'use strict'\nvar inherits = require('inherits')\nvar HashBase = require('hash-base')\nvar Buffer = require('safe-buffer').Buffer\n\nvar ARRAY16 = new Array(16)\n\nfunction MD5 () {\n  HashBase.call(this, 64)\n\n  // state\n  this._a = 0x67452301\n  this._b = 0xefcdab89\n  this._c = 0x98badcfe\n  this._d = 0x10325476\n}\n\ninherits(MD5, HashBase)\n\nMD5.prototype._update = function () {\n  var M = ARRAY16\n  for (var i = 0; i < 16; ++i) M[i] = this._block.readInt32LE(i * 4)\n\n  var a = this._a\n  var b = this._b\n  var c = this._c\n  var d = this._d\n\n  a = fnF(a, b, c, d, M[0], 0xd76aa478, 7)\n  d = fnF(d, a, b, c, M[1], 0xe8c7b756, 12)\n  c = fnF(c, d, a, b, M[2], 0x242070db, 17)\n  b = fnF(b, c, d, a, M[3], 0xc1bdceee, 22)\n  a = fnF(a, b, c, d, M[4], 0xf57c0faf, 7)\n  d = fnF(d, a, b, c, M[5], 0x4787c62a, 12)\n  c = fnF(c, d, a, b, M[6], 0xa8304613, 17)\n  b = fnF(b, c, d, a, M[7], 0xfd469501, 22)\n  a = fnF(a, b, c, d, M[8], 0x698098d8, 7)\n  d = fnF(d, a, b, c, M[9], 0x8b44f7af, 12)\n  c = fnF(c, d, a, b, M[10], 0xffff5bb1, 17)\n  b = fnF(b, c, d, a, M[11], 0x895cd7be, 22)\n  a = fnF(a, b, c, d, M[12], 0x6b901122, 7)\n  d = fnF(d, a, b, c, M[13], 0xfd987193, 12)\n  c = fnF(c, d, a, b, M[14], 0xa679438e, 17)\n  b = fnF(b, c, d, a, M[15], 0x49b40821, 22)\n\n  a = fnG(a, b, c, d, M[1], 0xf61e2562, 5)\n  d = fnG(d, a, b, c, M[6], 0xc040b340, 9)\n  c = fnG(c, d, a, b, M[11], 0x265e5a51, 14)\n  b = fnG(b, c, d, a, M[0], 0xe9b6c7aa, 20)\n  a = fnG(a, b, c, d, M[5], 0xd62f105d, 5)\n  d = fnG(d, a, b, c, M[10], 0x02441453, 9)\n  c = fnG(c, d, a, b, M[15], 0xd8a1e681, 14)\n  b = fnG(b, c, d, a, M[4], 0xe7d3fbc8, 20)\n  a = fnG(a, b, c, d, M[9], 0x21e1cde6, 5)\n  d = fnG(d, a, b, c, M[14], 0xc33707d6, 9)\n  c = fnG(c, d, a, b, M[3], 0xf4d50d87, 14)\n  b = fnG(b, c, d, a, M[8], 0x455a14ed, 20)\n  a = fnG(a, b, c, d, M[13], 0xa9e3e905, 5)\n  d = fnG(d, a, b, c, M[2], 0xfcefa3f8, 9)\n  c = fnG(c, d, a, b, M[7], 0x676f02d9, 14)\n  b = fnG(b, c, d, a, M[12], 0x8d2a4c8a, 20)\n\n  a = fnH(a, b, c, d, M[5], 0xfffa3942, 4)\n  d = fnH(d, a, b, c, M[8], 0x8771f681, 11)\n  c = fnH(c, d, a, b, M[11], 0x6d9d6122, 16)\n  b = fnH(b, c, d, a, M[14], 0xfde5380c, 23)\n  a = fnH(a, b, c, d, M[1], 0xa4beea44, 4)\n  d = fnH(d, a, b, c, M[4], 0x4bdecfa9, 11)\n  c = fnH(c, d, a, b, M[7], 0xf6bb4b60, 16)\n  b = fnH(b, c, d, a, M[10], 0xbebfbc70, 23)\n  a = fnH(a, b, c, d, M[13], 0x289b7ec6, 4)\n  d = fnH(d, a, b, c, M[0], 0xeaa127fa, 11)\n  c = fnH(c, d, a, b, M[3], 0xd4ef3085, 16)\n  b = fnH(b, c, d, a, M[6], 0x04881d05, 23)\n  a = fnH(a, b, c, d, M[9], 0xd9d4d039, 4)\n  d = fnH(d, a, b, c, M[12], 0xe6db99e5, 11)\n  c = fnH(c, d, a, b, M[15], 0x1fa27cf8, 16)\n  b = fnH(b, c, d, a, M[2], 0xc4ac5665, 23)\n\n  a = fnI(a, b, c, d, M[0], 0xf4292244, 6)\n  d = fnI(d, a, b, c, M[7], 0x432aff97, 10)\n  c = fnI(c, d, a, b, M[14], 0xab9423a7, 15)\n  b = fnI(b, c, d, a, M[5], 0xfc93a039, 21)\n  a = fnI(a, b, c, d, M[12], 0x655b59c3, 6)\n  d = fnI(d, a, b, c, M[3], 0x8f0ccc92, 10)\n  c = fnI(c, d, a, b, M[10], 0xffeff47d, 15)\n  b = fnI(b, c, d, a, M[1], 0x85845dd1, 21)\n  a = fnI(a, b, c, d, M[8], 0x6fa87e4f, 6)\n  d = fnI(d, a, b, c, M[15], 0xfe2ce6e0, 10)\n  c = fnI(c, d, a, b, M[6], 0xa3014314, 15)\n  b = fnI(b, c, d, a, M[13], 0x4e0811a1, 21)\n  a = fnI(a, b, c, d, M[4], 0xf7537e82, 6)\n  d = fnI(d, a, b, c, M[11], 0xbd3af235, 10)\n  c = fnI(c, d, a, b, M[2], 0x2ad7d2bb, 15)\n  b = fnI(b, c, d, a, M[9], 0xeb86d391, 21)\n\n  this._a = (this._a + a) | 0\n  this._b = (this._b + b) | 0\n  this._c = (this._c + c) | 0\n  this._d = (this._d + d) | 0\n}\n\nMD5.prototype._digest = function () {\n  // create padding and handle blocks\n  this._block[this._blockOffset++] = 0x80\n  if (this._blockOffset > 56) {\n    this._block.fill(0, this._blockOffset, 64)\n    this._update()\n    this._blockOffset = 0\n  }\n\n  this._block.fill(0, this._blockOffset, 56)\n  this._block.writeUInt32LE(this._length[0], 56)\n  this._block.writeUInt32LE(this._length[1], 60)\n  this._update()\n\n  // produce result\n  var buffer = Buffer.allocUnsafe(16)\n  buffer.writeInt32LE(this._a, 0)\n  buffer.writeInt32LE(this._b, 4)\n  buffer.writeInt32LE(this._c, 8)\n  buffer.writeInt32LE(this._d, 12)\n  return buffer\n}\n\nfunction rotl (x, n) {\n  return (x << n) | (x >>> (32 - n))\n}\n\nfunction fnF (a, b, c, d, m, k, s) {\n  return (rotl((a + ((b & c) | ((~b) & d)) + m + k) | 0, s) + b) | 0\n}\n\nfunction fnG (a, b, c, d, m, k, s) {\n  return (rotl((a + ((b & d) | (c & (~d))) + m + k) | 0, s) + b) | 0\n}\n\nfunction fnH (a, b, c, d, m, k, s) {\n  return (rotl((a + (b ^ c ^ d) + m + k) | 0, s) + b) | 0\n}\n\nfunction fnI (a, b, c, d, m, k, s) {\n  return (rotl((a + ((c ^ (b | (~d)))) + m + k) | 0, s) + b) | 0\n}\n\nmodule.exports = MD5\n","module.exports = assert;\n\nfunction assert(val, msg) {\n  if (!val)\n    throw new Error(msg || 'Assertion failed');\n}\n\nassert.equal = function assertEqual(l, r, msg) {\n  if (l != r)\n    throw new Error(msg || ('Assertion failed: ' + l + ' != ' + r));\n};\n","'use strict';\n\nvar utils = exports;\n\nfunction toArray(msg, enc) {\n  if (Array.isArray(msg))\n    return msg.slice();\n  if (!msg)\n    return [];\n  var res = [];\n  if (typeof msg !== 'string') {\n    for (var i = 0; i < msg.length; i++)\n      res[i] = msg[i] | 0;\n    return res;\n  }\n  if (enc === 'hex') {\n    msg = msg.replace(/[^a-z0-9]+/ig, '');\n    if (msg.length % 2 !== 0)\n      msg = '0' + msg;\n    for (var i = 0; i < msg.length; i += 2)\n      res.push(parseInt(msg[i] + msg[i + 1], 16));\n  } else {\n    for (var i = 0; i < msg.length; i++) {\n      var c = msg.charCodeAt(i);\n      var hi = c >> 8;\n      var lo = c & 0xff;\n      if (hi)\n        res.push(hi, lo);\n      else\n        res.push(lo);\n    }\n  }\n  return res;\n}\nutils.toArray = toArray;\n\nfunction zero2(word) {\n  if (word.length === 1)\n    return '0' + word;\n  else\n    return word;\n}\nutils.zero2 = zero2;\n\nfunction toHex(msg) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++)\n    res += zero2(msg[i].toString(16));\n  return res;\n}\nutils.toHex = toHex;\n\nutils.encode = function encode(arr, enc) {\n  if (enc === 'hex')\n    return toHex(arr);\n  else\n    return arr;\n};\n","exports.pbkdf2 = require('./lib/async')\nexports.pbkdf2Sync = require('./lib/sync')\n","var checkParameters = require('./precondition')\nvar defaultEncoding = require('./default-encoding')\nvar sync = require('./sync')\nvar Buffer = require('safe-buffer').Buffer\n\nvar ZERO_BUF\nvar subtle = global.crypto && global.crypto.subtle\nvar toBrowser = {\n  'sha': 'SHA-1',\n  'sha-1': 'SHA-1',\n  'sha1': 'SHA-1',\n  'sha256': 'SHA-256',\n  'sha-256': 'SHA-256',\n  'sha384': 'SHA-384',\n  'sha-384': 'SHA-384',\n  'sha-512': 'SHA-512',\n  'sha512': 'SHA-512'\n}\nvar checks = []\nfunction checkNative (algo) {\n  if (global.process && !global.process.browser) {\n    return Promise.resolve(false)\n  }\n  if (!subtle || !subtle.importKey || !subtle.deriveBits) {\n    return Promise.resolve(false)\n  }\n  if (checks[algo] !== undefined) {\n    return checks[algo]\n  }\n  ZERO_BUF = ZERO_BUF || Buffer.alloc(8)\n  var prom = browserPbkdf2(ZERO_BUF, ZERO_BUF, 10, 128, algo)\n    .then(function () {\n      return true\n    }).catch(function () {\n      return false\n    })\n  checks[algo] = prom\n  return prom\n}\n\nfunction browserPbkdf2 (password, salt, iterations, length, algo) {\n  return subtle.importKey(\n    'raw', password, {name: 'PBKDF2'}, false, ['deriveBits']\n  ).then(function (key) {\n    return subtle.deriveBits({\n      name: 'PBKDF2',\n      salt: salt,\n      iterations: iterations,\n      hash: {\n        name: algo\n      }\n    }, key, length << 3)\n  }).then(function (res) {\n    return Buffer.from(res)\n  })\n}\n\nfunction resolvePromise (promise, callback) {\n  promise.then(function (out) {\n    process.nextTick(function () {\n      callback(null, out)\n    })\n  }, function (e) {\n    process.nextTick(function () {\n      callback(e)\n    })\n  })\n}\nmodule.exports = function (password, salt, iterations, keylen, digest, callback) {\n  if (typeof digest === 'function') {\n    callback = digest\n    digest = undefined\n  }\n\n  digest = digest || 'sha1'\n  var algo = toBrowser[digest.toLowerCase()]\n\n  if (!algo || typeof global.Promise !== 'function') {\n    return process.nextTick(function () {\n      var out\n      try {\n        out = sync(password, salt, iterations, keylen, digest)\n      } catch (e) {\n        return callback(e)\n      }\n      callback(null, out)\n    })\n  }\n\n  checkParameters(password, salt, iterations, keylen)\n  if (typeof callback !== 'function') throw new Error('No callback provided to pbkdf2')\n  if (!Buffer.isBuffer(password)) password = Buffer.from(password, defaultEncoding)\n  if (!Buffer.isBuffer(salt)) salt = Buffer.from(salt, defaultEncoding)\n\n  resolvePromise(checkNative(algo).then(function (resp) {\n    if (resp) return browserPbkdf2(password, salt, iterations, keylen, algo)\n\n    return sync(password, salt, iterations, keylen, digest)\n  }), callback)\n}\n","var defaultEncoding\n/* istanbul ignore next */\nif (process.browser) {\n  defaultEncoding = 'utf-8'\n} else {\n  var pVersionMajor = parseInt(process.version.split('.')[0].slice(1), 10)\n\n  defaultEncoding = pVersionMajor >= 6 ? 'utf-8' : 'binary'\n}\nmodule.exports = defaultEncoding\n","var MAX_ALLOC = Math.pow(2, 30) - 1 // default in iojs\n\nfunction checkBuffer (buf, name) {\n  if (typeof buf !== 'string' && !Buffer.isBuffer(buf)) {\n    throw new TypeError(name + ' must be a buffer or string')\n  }\n}\n\nmodule.exports = function (password, salt, iterations, keylen) {\n  checkBuffer(password, 'Password')\n  checkBuffer(salt, 'Salt')\n\n  if (typeof iterations !== 'number') {\n    throw new TypeError('Iterations not a number')\n  }\n\n  if (iterations < 0) {\n    throw new TypeError('Bad iterations')\n  }\n\n  if (typeof keylen !== 'number') {\n    throw new TypeError('Key length not a number')\n  }\n\n  if (keylen < 0 || keylen > MAX_ALLOC || keylen !== keylen) { /* eslint no-self-compare: 0 */\n    throw new TypeError('Bad key length')\n  }\n}\n","var md5 = require('create-hash/md5')\nvar RIPEMD160 = require('ripemd160')\nvar sha = require('sha.js')\n\nvar checkParameters = require('./precondition')\nvar defaultEncoding = require('./default-encoding')\nvar Buffer = require('safe-buffer').Buffer\nvar ZEROS = Buffer.alloc(128)\nvar sizes = {\n  md5: 16,\n  sha1: 20,\n  sha224: 28,\n  sha256: 32,\n  sha384: 48,\n  sha512: 64,\n  rmd160: 20,\n  ripemd160: 20\n}\n\nfunction Hmac (alg, key, saltLen) {\n  var hash = getDigest(alg)\n  var blocksize = (alg === 'sha512' || alg === 'sha384') ? 128 : 64\n\n  if (key.length > blocksize) {\n    key = hash(key)\n  } else if (key.length < blocksize) {\n    key = Buffer.concat([key, ZEROS], blocksize)\n  }\n\n  var ipad = Buffer.allocUnsafe(blocksize + sizes[alg])\n  var opad = Buffer.allocUnsafe(blocksize + sizes[alg])\n  for (var i = 0; i < blocksize; i++) {\n    ipad[i] = key[i] ^ 0x36\n    opad[i] = key[i] ^ 0x5C\n  }\n\n  var ipad1 = Buffer.allocUnsafe(blocksize + saltLen + 4)\n  ipad.copy(ipad1, 0, 0, blocksize)\n  this.ipad1 = ipad1\n  this.ipad2 = ipad\n  this.opad = opad\n  this.alg = alg\n  this.blocksize = blocksize\n  this.hash = hash\n  this.size = sizes[alg]\n}\n\nHmac.prototype.run = function (data, ipad) {\n  data.copy(ipad, this.blocksize)\n  var h = this.hash(ipad)\n  h.copy(this.opad, this.blocksize)\n  return this.hash(this.opad)\n}\n\nfunction getDigest (alg) {\n  function shaFunc (data) {\n    return sha(alg).update(data).digest()\n  }\n  function rmd160Func (data) {\n    return new RIPEMD160().update(data).digest()\n  }\n\n  if (alg === 'rmd160' || alg === 'ripemd160') return rmd160Func\n  if (alg === 'md5') return md5\n  return shaFunc\n}\n\nfunction pbkdf2 (password, salt, iterations, keylen, digest) {\n  checkParameters(password, salt, iterations, keylen)\n\n  if (!Buffer.isBuffer(password)) password = Buffer.from(password, defaultEncoding)\n  if (!Buffer.isBuffer(salt)) salt = Buffer.from(salt, defaultEncoding)\n\n  digest = digest || 'sha1'\n\n  var hmac = new Hmac(digest, password, salt.length)\n\n  var DK = Buffer.allocUnsafe(keylen)\n  var block1 = Buffer.allocUnsafe(salt.length + 4)\n  salt.copy(block1, 0, 0, salt.length)\n\n  var destPos = 0\n  var hLen = sizes[digest]\n  var l = Math.ceil(keylen / hLen)\n\n  for (var i = 1; i <= l; i++) {\n    block1.writeUInt32BE(i, salt.length)\n\n    var T = hmac.run(block1, hmac.ipad1)\n    var U = T\n\n    for (var j = 1; j < iterations; j++) {\n      U = hmac.run(U, hmac.ipad2)\n      for (var k = 0; k < hLen; k++) T[k] ^= U[k]\n    }\n\n    T.copy(DK, destPos)\n    destPos += hLen\n  }\n\n  return DK\n}\n\nmodule.exports = pbkdf2\n","'use strict';\n\nif (typeof process === 'undefined' ||\n    !process.version ||\n    process.version.indexOf('v0.') === 0 ||\n    process.version.indexOf('v1.') === 0 && process.version.indexOf('v1.8.') !== 0) {\n  module.exports = { nextTick: nextTick };\n} else {\n  module.exports = process\n}\n\nfunction nextTick(fn, arg1, arg2, arg3) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('\"callback\" argument must be a function');\n  }\n  var len = arguments.length;\n  var args, i;\n  switch (len) {\n  case 0:\n  case 1:\n    return process.nextTick(fn);\n  case 2:\n    return process.nextTick(function afterTickOne() {\n      fn.call(null, arg1);\n    });\n  case 3:\n    return process.nextTick(function afterTickTwo() {\n      fn.call(null, arg1, arg2);\n    });\n  case 4:\n    return process.nextTick(function afterTickThree() {\n      fn.call(null, arg1, arg2, arg3);\n    });\n  default:\n    args = new Array(len - 1);\n    i = 0;\n    while (i < args.length) {\n      args[i++] = arguments[i];\n    }\n    return process.nextTick(function afterTick() {\n      fn.apply(null, args);\n    });\n  }\n}\n\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","'use strict'\n\n// limit of Crypto.getRandomValues()\n// https://developer.mozilla.org/en-US/docs/Web/API/Crypto/getRandomValues\nvar MAX_BYTES = 65536\n\n// Node supports requesting up to this number of bytes\n// https://github.com/nodejs/node/blob/master/lib/internal/crypto/random.js#L48\nvar MAX_UINT32 = 4294967295\n\nfunction oldBrowser () {\n  throw new Error('Secure random number generation is not supported by this browser.\\nUse Chrome, Firefox or Internet Explorer 11')\n}\n\nvar Buffer = require('safe-buffer').Buffer\nvar crypto = global.crypto || global.msCrypto\n\nif (crypto && crypto.getRandomValues) {\n  module.exports = randomBytes\n} else {\n  module.exports = oldBrowser\n}\n\nfunction randomBytes (size, cb) {\n  // phantomjs needs to throw\n  if (size > MAX_UINT32) throw new RangeError('requested too many random bytes')\n\n  var bytes = Buffer.allocUnsafe(size)\n\n  if (size > 0) {  // getRandomValues fails on IE if size == 0\n    if (size > MAX_BYTES) { // this is the max bytes crypto.getRandomValues\n      // can do at once see https://developer.mozilla.org/en-US/docs/Web/API/window.crypto.getRandomValues\n      for (var generated = 0; generated < size; generated += MAX_BYTES) {\n        // buffer.slice automatically checks if the end is past the end of\n        // the buffer so we don't have to here\n        crypto.getRandomValues(bytes.slice(generated, generated + MAX_BYTES))\n      }\n    } else {\n      crypto.getRandomValues(bytes)\n    }\n  }\n\n  if (typeof cb === 'function') {\n    return process.nextTick(function () {\n      cb(null, bytes)\n    })\n  }\n\n  return bytes\n}\n","module.exports = require('./lib/_stream_duplex.js');\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a duplex stream is just a stream that is both readable and writable.\n// Since JS doesn't have multiple prototypal inheritance, this class\n// prototypally inherits from Readable, and then parasitically from\n// Writable.\n\n'use strict';\n\n/*<replacement>*/\n\nvar pna = require('process-nextick-args');\n/*</replacement>*/\n\n/*<replacement>*/\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) {\n    keys.push(key);\n  }return keys;\n};\n/*</replacement>*/\n\nmodule.exports = Duplex;\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nvar Readable = require('./_stream_readable');\nvar Writable = require('./_stream_writable');\n\nutil.inherits(Duplex, Readable);\n\n{\n  // avoid scope creep, the keys array can then be collected\n  var keys = objectKeys(Writable.prototype);\n  for (var v = 0; v < keys.length; v++) {\n    var method = keys[v];\n    if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];\n  }\n}\n\nfunction Duplex(options) {\n  if (!(this instanceof Duplex)) return new Duplex(options);\n\n  Readable.call(this, options);\n  Writable.call(this, options);\n\n  if (options && options.readable === false) this.readable = false;\n\n  if (options && options.writable === false) this.writable = false;\n\n  this.allowHalfOpen = true;\n  if (options && options.allowHalfOpen === false) this.allowHalfOpen = false;\n\n  this.once('end', onend);\n}\n\nObject.defineProperty(Duplex.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function () {\n    return this._writableState.highWaterMark;\n  }\n});\n\n// the no-half-open enforcer\nfunction onend() {\n  // if we allow half-open state, or if the writable side ended,\n  // then we're ok.\n  if (this.allowHalfOpen || this._writableState.ended) return;\n\n  // no more data can be written.\n  // But allow more writes to happen in this tick.\n  pna.nextTick(onEndNT, this);\n}\n\nfunction onEndNT(self) {\n  self.end();\n}\n\nObject.defineProperty(Duplex.prototype, 'destroyed', {\n  get: function () {\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return false;\n    }\n    return this._readableState.destroyed && this._writableState.destroyed;\n  },\n  set: function (value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._readableState.destroyed = value;\n    this._writableState.destroyed = value;\n  }\n});\n\nDuplex.prototype._destroy = function (err, cb) {\n  this.push(null);\n  this.end();\n\n  pna.nextTick(cb, err);\n};","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a passthrough stream.\n// basically just the most minimal sort of Transform stream.\n// Every written chunk gets output as-is.\n\n'use strict';\n\nmodule.exports = PassThrough;\n\nvar Transform = require('./_stream_transform');\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nutil.inherits(PassThrough, Transform);\n\nfunction PassThrough(options) {\n  if (!(this instanceof PassThrough)) return new PassThrough(options);\n\n  Transform.call(this, options);\n}\n\nPassThrough.prototype._transform = function (chunk, encoding, cb) {\n  cb(null, chunk);\n};","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n/*<replacement>*/\n\nvar pna = require('process-nextick-args');\n/*</replacement>*/\n\nmodule.exports = Readable;\n\n/*<replacement>*/\nvar isArray = require('isarray');\n/*</replacement>*/\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nReadable.ReadableState = ReadableState;\n\n/*<replacement>*/\nvar EE = require('events').EventEmitter;\n\nvar EElistenerCount = function (emitter, type) {\n  return emitter.listeners(type).length;\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\n/*<replacement>*/\n\nvar Buffer = require('safe-buffer').Buffer;\nvar OurUint8Array = global.Uint8Array || function () {};\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n\n/*</replacement>*/\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\n/*<replacement>*/\nvar debugUtil = require('util');\nvar debug = void 0;\nif (debugUtil && debugUtil.debuglog) {\n  debug = debugUtil.debuglog('stream');\n} else {\n  debug = function () {};\n}\n/*</replacement>*/\n\nvar BufferList = require('./internal/streams/BufferList');\nvar destroyImpl = require('./internal/streams/destroy');\nvar StringDecoder;\n\nutil.inherits(Readable, Stream);\n\nvar kProxyEvents = ['error', 'close', 'destroy', 'pause', 'resume'];\n\nfunction prependListener(emitter, event, fn) {\n  // Sadly this is not cacheable as some libraries bundle their own\n  // event emitter implementation with them.\n  if (typeof emitter.prependListener === 'function') return emitter.prependListener(event, fn);\n\n  // This is a hack to make sure that our error handler is attached before any\n  // userland ones.  NEVER DO THIS. This is here only because this code needs\n  // to continue to work with older versions of Node.js that do not include\n  // the prependListener() method. The goal is to eventually remove this hack.\n  if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];\n}\n\nfunction ReadableState(options, stream) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  options = options || {};\n\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n  var isDuplex = stream instanceof Duplex;\n\n  // object stream flag. Used to make read(n) ignore n and to\n  // make all the buffer merging and length checks go away\n  this.objectMode = !!options.objectMode;\n\n  if (isDuplex) this.objectMode = this.objectMode || !!options.readableObjectMode;\n\n  // the point at which it stops calling _read() to fill the buffer\n  // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\n  var hwm = options.highWaterMark;\n  var readableHwm = options.readableHighWaterMark;\n  var defaultHwm = this.objectMode ? 16 : 16 * 1024;\n\n  if (hwm || hwm === 0) this.highWaterMark = hwm;else if (isDuplex && (readableHwm || readableHwm === 0)) this.highWaterMark = readableHwm;else this.highWaterMark = defaultHwm;\n\n  // cast to ints.\n  this.highWaterMark = Math.floor(this.highWaterMark);\n\n  // A linked list is used to store data chunks instead of an array because the\n  // linked list can remove elements from the beginning faster than\n  // array.shift()\n  this.buffer = new BufferList();\n  this.length = 0;\n  this.pipes = null;\n  this.pipesCount = 0;\n  this.flowing = null;\n  this.ended = false;\n  this.endEmitted = false;\n  this.reading = false;\n\n  // a flag to be able to tell if the event 'readable'/'data' is emitted\n  // immediately, or on a later tick.  We set this to true at first, because\n  // any actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first read call.\n  this.sync = true;\n\n  // whenever we return null, then we set a flag to say\n  // that we're awaiting a 'readable' event emission.\n  this.needReadable = false;\n  this.emittedReadable = false;\n  this.readableListening = false;\n  this.resumeScheduled = false;\n\n  // has it been destroyed\n  this.destroyed = false;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // the number of writers that are awaiting a drain event in .pipe()s\n  this.awaitDrain = 0;\n\n  // if true, a maybeReadMore has been scheduled\n  this.readingMore = false;\n\n  this.decoder = null;\n  this.encoding = null;\n  if (options.encoding) {\n    if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n    this.decoder = new StringDecoder(options.encoding);\n    this.encoding = options.encoding;\n  }\n}\n\nfunction Readable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  if (!(this instanceof Readable)) return new Readable(options);\n\n  this._readableState = new ReadableState(options, this);\n\n  // legacy\n  this.readable = true;\n\n  if (options) {\n    if (typeof options.read === 'function') this._read = options.read;\n\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n  }\n\n  Stream.call(this);\n}\n\nObject.defineProperty(Readable.prototype, 'destroyed', {\n  get: function () {\n    if (this._readableState === undefined) {\n      return false;\n    }\n    return this._readableState.destroyed;\n  },\n  set: function (value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._readableState) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._readableState.destroyed = value;\n  }\n});\n\nReadable.prototype.destroy = destroyImpl.destroy;\nReadable.prototype._undestroy = destroyImpl.undestroy;\nReadable.prototype._destroy = function (err, cb) {\n  this.push(null);\n  cb(err);\n};\n\n// Manually shove something into the read() buffer.\n// This returns true if the highWaterMark has not been hit yet,\n// similar to how Writable.write() returns true if you should\n// write() some more.\nReadable.prototype.push = function (chunk, encoding) {\n  var state = this._readableState;\n  var skipChunkCheck;\n\n  if (!state.objectMode) {\n    if (typeof chunk === 'string') {\n      encoding = encoding || state.defaultEncoding;\n      if (encoding !== state.encoding) {\n        chunk = Buffer.from(chunk, encoding);\n        encoding = '';\n      }\n      skipChunkCheck = true;\n    }\n  } else {\n    skipChunkCheck = true;\n  }\n\n  return readableAddChunk(this, chunk, encoding, false, skipChunkCheck);\n};\n\n// Unshift should *always* be something directly out of read()\nReadable.prototype.unshift = function (chunk) {\n  return readableAddChunk(this, chunk, null, true, false);\n};\n\nfunction readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {\n  var state = stream._readableState;\n  if (chunk === null) {\n    state.reading = false;\n    onEofChunk(stream, state);\n  } else {\n    var er;\n    if (!skipChunkCheck) er = chunkInvalid(state, chunk);\n    if (er) {\n      stream.emit('error', er);\n    } else if (state.objectMode || chunk && chunk.length > 0) {\n      if (typeof chunk !== 'string' && !state.objectMode && Object.getPrototypeOf(chunk) !== Buffer.prototype) {\n        chunk = _uint8ArrayToBuffer(chunk);\n      }\n\n      if (addToFront) {\n        if (state.endEmitted) stream.emit('error', new Error('stream.unshift() after end event'));else addChunk(stream, state, chunk, true);\n      } else if (state.ended) {\n        stream.emit('error', new Error('stream.push() after EOF'));\n      } else {\n        state.reading = false;\n        if (state.decoder && !encoding) {\n          chunk = state.decoder.write(chunk);\n          if (state.objectMode || chunk.length !== 0) addChunk(stream, state, chunk, false);else maybeReadMore(stream, state);\n        } else {\n          addChunk(stream, state, chunk, false);\n        }\n      }\n    } else if (!addToFront) {\n      state.reading = false;\n    }\n  }\n\n  return needMoreData(state);\n}\n\nfunction addChunk(stream, state, chunk, addToFront) {\n  if (state.flowing && state.length === 0 && !state.sync) {\n    stream.emit('data', chunk);\n    stream.read(0);\n  } else {\n    // update the buffer info.\n    state.length += state.objectMode ? 1 : chunk.length;\n    if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);\n\n    if (state.needReadable) emitReadable(stream);\n  }\n  maybeReadMore(stream, state);\n}\n\nfunction chunkInvalid(state, chunk) {\n  var er;\n  if (!_isUint8Array(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new TypeError('Invalid non-string/buffer chunk');\n  }\n  return er;\n}\n\n// if it's past the high water mark, we can push in some more.\n// Also, if we have no data yet, we can stand some\n// more bytes.  This is to work around cases where hwm=0,\n// such as the repl.  Also, if the push() triggered a\n// readable event, and the user called read(largeNumber) such that\n// needReadable was set, then we ought to push more, so that another\n// 'readable' event will be triggered.\nfunction needMoreData(state) {\n  return !state.ended && (state.needReadable || state.length < state.highWaterMark || state.length === 0);\n}\n\nReadable.prototype.isPaused = function () {\n  return this._readableState.flowing === false;\n};\n\n// backwards compatibility.\nReadable.prototype.setEncoding = function (enc) {\n  if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n  this._readableState.decoder = new StringDecoder(enc);\n  this._readableState.encoding = enc;\n  return this;\n};\n\n// Don't raise the hwm > 8MB\nvar MAX_HWM = 0x800000;\nfunction computeNewHighWaterMark(n) {\n  if (n >= MAX_HWM) {\n    n = MAX_HWM;\n  } else {\n    // Get the next highest power of 2 to prevent increasing hwm excessively in\n    // tiny amounts\n    n--;\n    n |= n >>> 1;\n    n |= n >>> 2;\n    n |= n >>> 4;\n    n |= n >>> 8;\n    n |= n >>> 16;\n    n++;\n  }\n  return n;\n}\n\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction howMuchToRead(n, state) {\n  if (n <= 0 || state.length === 0 && state.ended) return 0;\n  if (state.objectMode) return 1;\n  if (n !== n) {\n    // Only flow one buffer at a time\n    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;\n  }\n  // If we're asking for more than the current hwm, then raise the hwm.\n  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);\n  if (n <= state.length) return n;\n  // Don't have enough\n  if (!state.ended) {\n    state.needReadable = true;\n    return 0;\n  }\n  return state.length;\n}\n\n// you can override either this method, or the async _read(n) below.\nReadable.prototype.read = function (n) {\n  debug('read', n);\n  n = parseInt(n, 10);\n  var state = this._readableState;\n  var nOrig = n;\n\n  if (n !== 0) state.emittedReadable = false;\n\n  // if we're doing read(0) to trigger a readable event, but we\n  // already have a bunch of data in the buffer, then just trigger\n  // the 'readable' event and move on.\n  if (n === 0 && state.needReadable && (state.length >= state.highWaterMark || state.ended)) {\n    debug('read: emitReadable', state.length, state.ended);\n    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);\n    return null;\n  }\n\n  n = howMuchToRead(n, state);\n\n  // if we've ended, and we're now clear, then finish it up.\n  if (n === 0 && state.ended) {\n    if (state.length === 0) endReadable(this);\n    return null;\n  }\n\n  // All the actual chunk generation logic needs to be\n  // *below* the call to _read.  The reason is that in certain\n  // synthetic stream cases, such as passthrough streams, _read\n  // may be a completely synchronous operation which may change\n  // the state of the read buffer, providing enough data when\n  // before there was *not* enough.\n  //\n  // So, the steps are:\n  // 1. Figure out what the state of things will be after we do\n  // a read from the buffer.\n  //\n  // 2. If that resulting state will trigger a _read, then call _read.\n  // Note that this may be asynchronous, or synchronous.  Yes, it is\n  // deeply ugly to write APIs this way, but that still doesn't mean\n  // that the Readable class should behave improperly, as streams are\n  // designed to be sync/async agnostic.\n  // Take note if the _read call is sync or async (ie, if the read call\n  // has returned yet), so that we know whether or not it's safe to emit\n  // 'readable' etc.\n  //\n  // 3. Actually pull the requested chunks out of the buffer and return.\n\n  // if we need a readable event, then we need to do some reading.\n  var doRead = state.needReadable;\n  debug('need readable', doRead);\n\n  // if we currently have less than the highWaterMark, then also read some\n  if (state.length === 0 || state.length - n < state.highWaterMark) {\n    doRead = true;\n    debug('length less than watermark', doRead);\n  }\n\n  // however, if we've ended, then there's no point, and if we're already\n  // reading, then it's unnecessary.\n  if (state.ended || state.reading) {\n    doRead = false;\n    debug('reading or ended', doRead);\n  } else if (doRead) {\n    debug('do read');\n    state.reading = true;\n    state.sync = true;\n    // if the length is currently zero, then we *need* a readable event.\n    if (state.length === 0) state.needReadable = true;\n    // call internal read method\n    this._read(state.highWaterMark);\n    state.sync = false;\n    // If _read pushed data synchronously, then `reading` will be false,\n    // and we need to re-evaluate how much data we can return to the user.\n    if (!state.reading) n = howMuchToRead(nOrig, state);\n  }\n\n  var ret;\n  if (n > 0) ret = fromList(n, state);else ret = null;\n\n  if (ret === null) {\n    state.needReadable = true;\n    n = 0;\n  } else {\n    state.length -= n;\n  }\n\n  if (state.length === 0) {\n    // If we have nothing in the buffer, then we want to know\n    // as soon as we *do* get something into the buffer.\n    if (!state.ended) state.needReadable = true;\n\n    // If we tried to read() past the EOF, then emit end on the next tick.\n    if (nOrig !== n && state.ended) endReadable(this);\n  }\n\n  if (ret !== null) this.emit('data', ret);\n\n  return ret;\n};\n\nfunction onEofChunk(stream, state) {\n  if (state.ended) return;\n  if (state.decoder) {\n    var chunk = state.decoder.end();\n    if (chunk && chunk.length) {\n      state.buffer.push(chunk);\n      state.length += state.objectMode ? 1 : chunk.length;\n    }\n  }\n  state.ended = true;\n\n  // emit 'readable' now to make sure it gets picked up.\n  emitReadable(stream);\n}\n\n// Don't emit readable right away in sync mode, because this can trigger\n// another read() call => stack overflow.  This way, it might trigger\n// a nextTick recursion warning, but that's not so bad.\nfunction emitReadable(stream) {\n  var state = stream._readableState;\n  state.needReadable = false;\n  if (!state.emittedReadable) {\n    debug('emitReadable', state.flowing);\n    state.emittedReadable = true;\n    if (state.sync) pna.nextTick(emitReadable_, stream);else emitReadable_(stream);\n  }\n}\n\nfunction emitReadable_(stream) {\n  debug('emit readable');\n  stream.emit('readable');\n  flow(stream);\n}\n\n// at this point, the user has presumably seen the 'readable' event,\n// and called read() to consume some data.  that may have triggered\n// in turn another _read(n) call, in which case reading = true if\n// it's in progress.\n// However, if we're not ended, or reading, and the length < hwm,\n// then go ahead and try to read some more preemptively.\nfunction maybeReadMore(stream, state) {\n  if (!state.readingMore) {\n    state.readingMore = true;\n    pna.nextTick(maybeReadMore_, stream, state);\n  }\n}\n\nfunction maybeReadMore_(stream, state) {\n  var len = state.length;\n  while (!state.reading && !state.flowing && !state.ended && state.length < state.highWaterMark) {\n    debug('maybeReadMore read 0');\n    stream.read(0);\n    if (len === state.length)\n      // didn't get any data, stop spinning.\n      break;else len = state.length;\n  }\n  state.readingMore = false;\n}\n\n// abstract method.  to be overridden in specific implementation classes.\n// call cb(er, data) where data is <= n in length.\n// for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n// arbitrary, and perhaps not very meaningful.\nReadable.prototype._read = function (n) {\n  this.emit('error', new Error('_read() is not implemented'));\n};\n\nReadable.prototype.pipe = function (dest, pipeOpts) {\n  var src = this;\n  var state = this._readableState;\n\n  switch (state.pipesCount) {\n    case 0:\n      state.pipes = dest;\n      break;\n    case 1:\n      state.pipes = [state.pipes, dest];\n      break;\n    default:\n      state.pipes.push(dest);\n      break;\n  }\n  state.pipesCount += 1;\n  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);\n\n  var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;\n\n  var endFn = doEnd ? onend : unpipe;\n  if (state.endEmitted) pna.nextTick(endFn);else src.once('end', endFn);\n\n  dest.on('unpipe', onunpipe);\n  function onunpipe(readable, unpipeInfo) {\n    debug('onunpipe');\n    if (readable === src) {\n      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {\n        unpipeInfo.hasUnpiped = true;\n        cleanup();\n      }\n    }\n  }\n\n  function onend() {\n    debug('onend');\n    dest.end();\n  }\n\n  // when the dest drains, it reduces the awaitDrain counter\n  // on the source.  This would be more elegant with a .once()\n  // handler in flow(), but adding and removing repeatedly is\n  // too slow.\n  var ondrain = pipeOnDrain(src);\n  dest.on('drain', ondrain);\n\n  var cleanedUp = false;\n  function cleanup() {\n    debug('cleanup');\n    // cleanup event handlers once the pipe is broken\n    dest.removeListener('close', onclose);\n    dest.removeListener('finish', onfinish);\n    dest.removeListener('drain', ondrain);\n    dest.removeListener('error', onerror);\n    dest.removeListener('unpipe', onunpipe);\n    src.removeListener('end', onend);\n    src.removeListener('end', unpipe);\n    src.removeListener('data', ondata);\n\n    cleanedUp = true;\n\n    // if the reader is waiting for a drain event from this\n    // specific writer, then it would cause it to never start\n    // flowing again.\n    // So, if this is awaiting a drain, then we just call it now.\n    // If we don't know, then assume that we are waiting for one.\n    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();\n  }\n\n  // If the user pushes more data while we're writing to dest then we'll end up\n  // in ondata again. However, we only want to increase awaitDrain once because\n  // dest will only emit one 'drain' event for the multiple writes.\n  // => Introduce a guard on increasing awaitDrain.\n  var increasedAwaitDrain = false;\n  src.on('data', ondata);\n  function ondata(chunk) {\n    debug('ondata');\n    increasedAwaitDrain = false;\n    var ret = dest.write(chunk);\n    if (false === ret && !increasedAwaitDrain) {\n      // If the user unpiped during `dest.write()`, it is possible\n      // to get stuck in a permanently paused state if that write\n      // also returned false.\n      // => Check whether `dest` is still a piping destination.\n      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {\n        debug('false write response, pause', src._readableState.awaitDrain);\n        src._readableState.awaitDrain++;\n        increasedAwaitDrain = true;\n      }\n      src.pause();\n    }\n  }\n\n  // if the dest has an error, then stop piping into it.\n  // however, don't suppress the throwing behavior for this.\n  function onerror(er) {\n    debug('onerror', er);\n    unpipe();\n    dest.removeListener('error', onerror);\n    if (EElistenerCount(dest, 'error') === 0) dest.emit('error', er);\n  }\n\n  // Make sure our error handler is attached before userland ones.\n  prependListener(dest, 'error', onerror);\n\n  // Both close and finish should trigger unpipe, but only once.\n  function onclose() {\n    dest.removeListener('finish', onfinish);\n    unpipe();\n  }\n  dest.once('close', onclose);\n  function onfinish() {\n    debug('onfinish');\n    dest.removeListener('close', onclose);\n    unpipe();\n  }\n  dest.once('finish', onfinish);\n\n  function unpipe() {\n    debug('unpipe');\n    src.unpipe(dest);\n  }\n\n  // tell the dest that it's being piped to\n  dest.emit('pipe', src);\n\n  // start the flow if it hasn't been started already.\n  if (!state.flowing) {\n    debug('pipe resume');\n    src.resume();\n  }\n\n  return dest;\n};\n\nfunction pipeOnDrain(src) {\n  return function () {\n    var state = src._readableState;\n    debug('pipeOnDrain', state.awaitDrain);\n    if (state.awaitDrain) state.awaitDrain--;\n    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {\n      state.flowing = true;\n      flow(src);\n    }\n  };\n}\n\nReadable.prototype.unpipe = function (dest) {\n  var state = this._readableState;\n  var unpipeInfo = { hasUnpiped: false };\n\n  // if we're not piping anywhere, then do nothing.\n  if (state.pipesCount === 0) return this;\n\n  // just one destination.  most common case.\n  if (state.pipesCount === 1) {\n    // passed in one, but it's not the right one.\n    if (dest && dest !== state.pipes) return this;\n\n    if (!dest) dest = state.pipes;\n\n    // got a match.\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    if (dest) dest.emit('unpipe', this, unpipeInfo);\n    return this;\n  }\n\n  // slow case. multiple pipe destinations.\n\n  if (!dest) {\n    // remove all.\n    var dests = state.pipes;\n    var len = state.pipesCount;\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n\n    for (var i = 0; i < len; i++) {\n      dests[i].emit('unpipe', this, unpipeInfo);\n    }return this;\n  }\n\n  // try to find the right one.\n  var index = indexOf(state.pipes, dest);\n  if (index === -1) return this;\n\n  state.pipes.splice(index, 1);\n  state.pipesCount -= 1;\n  if (state.pipesCount === 1) state.pipes = state.pipes[0];\n\n  dest.emit('unpipe', this, unpipeInfo);\n\n  return this;\n};\n\n// set up data events if they are asked for\n// Ensure readable listeners eventually get something\nReadable.prototype.on = function (ev, fn) {\n  var res = Stream.prototype.on.call(this, ev, fn);\n\n  if (ev === 'data') {\n    // Start flowing on next tick if stream isn't explicitly paused\n    if (this._readableState.flowing !== false) this.resume();\n  } else if (ev === 'readable') {\n    var state = this._readableState;\n    if (!state.endEmitted && !state.readableListening) {\n      state.readableListening = state.needReadable = true;\n      state.emittedReadable = false;\n      if (!state.reading) {\n        pna.nextTick(nReadingNextTick, this);\n      } else if (state.length) {\n        emitReadable(this);\n      }\n    }\n  }\n\n  return res;\n};\nReadable.prototype.addListener = Readable.prototype.on;\n\nfunction nReadingNextTick(self) {\n  debug('readable nexttick read 0');\n  self.read(0);\n}\n\n// pause() and resume() are remnants of the legacy readable stream API\n// If the user uses them, then switch into old mode.\nReadable.prototype.resume = function () {\n  var state = this._readableState;\n  if (!state.flowing) {\n    debug('resume');\n    state.flowing = true;\n    resume(this, state);\n  }\n  return this;\n};\n\nfunction resume(stream, state) {\n  if (!state.resumeScheduled) {\n    state.resumeScheduled = true;\n    pna.nextTick(resume_, stream, state);\n  }\n}\n\nfunction resume_(stream, state) {\n  if (!state.reading) {\n    debug('resume read 0');\n    stream.read(0);\n  }\n\n  state.resumeScheduled = false;\n  state.awaitDrain = 0;\n  stream.emit('resume');\n  flow(stream);\n  if (state.flowing && !state.reading) stream.read(0);\n}\n\nReadable.prototype.pause = function () {\n  debug('call pause flowing=%j', this._readableState.flowing);\n  if (false !== this._readableState.flowing) {\n    debug('pause');\n    this._readableState.flowing = false;\n    this.emit('pause');\n  }\n  return this;\n};\n\nfunction flow(stream) {\n  var state = stream._readableState;\n  debug('flow', state.flowing);\n  while (state.flowing && stream.read() !== null) {}\n}\n\n// wrap an old-style stream as the async data source.\n// This is *not* part of the readable stream interface.\n// It is an ugly unfortunate mess of history.\nReadable.prototype.wrap = function (stream) {\n  var _this = this;\n\n  var state = this._readableState;\n  var paused = false;\n\n  stream.on('end', function () {\n    debug('wrapped end');\n    if (state.decoder && !state.ended) {\n      var chunk = state.decoder.end();\n      if (chunk && chunk.length) _this.push(chunk);\n    }\n\n    _this.push(null);\n  });\n\n  stream.on('data', function (chunk) {\n    debug('wrapped data');\n    if (state.decoder) chunk = state.decoder.write(chunk);\n\n    // don't skip over falsy values in objectMode\n    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;\n\n    var ret = _this.push(chunk);\n    if (!ret) {\n      paused = true;\n      stream.pause();\n    }\n  });\n\n  // proxy all the other methods.\n  // important when wrapping filters and duplexes.\n  for (var i in stream) {\n    if (this[i] === undefined && typeof stream[i] === 'function') {\n      this[i] = function (method) {\n        return function () {\n          return stream[method].apply(stream, arguments);\n        };\n      }(i);\n    }\n  }\n\n  // proxy certain important events.\n  for (var n = 0; n < kProxyEvents.length; n++) {\n    stream.on(kProxyEvents[n], this.emit.bind(this, kProxyEvents[n]));\n  }\n\n  // when we try to consume some more bytes, simply unpause the\n  // underlying stream.\n  this._read = function (n) {\n    debug('wrapped _read', n);\n    if (paused) {\n      paused = false;\n      stream.resume();\n    }\n  };\n\n  return this;\n};\n\nObject.defineProperty(Readable.prototype, 'readableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function () {\n    return this._readableState.highWaterMark;\n  }\n});\n\n// exposed for testing purposes only.\nReadable._fromList = fromList;\n\n// Pluck off n bytes from an array of buffers.\n// Length is the combined lengths of all the buffers in the list.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromList(n, state) {\n  // nothing buffered\n  if (state.length === 0) return null;\n\n  var ret;\n  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {\n    // read it all, truncate the list\n    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.head.data;else ret = state.buffer.concat(state.length);\n    state.buffer.clear();\n  } else {\n    // read part of list\n    ret = fromListPartial(n, state.buffer, state.decoder);\n  }\n\n  return ret;\n}\n\n// Extracts only enough buffered data to satisfy the amount requested.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromListPartial(n, list, hasStrings) {\n  var ret;\n  if (n < list.head.data.length) {\n    // slice is the same for buffers and strings\n    ret = list.head.data.slice(0, n);\n    list.head.data = list.head.data.slice(n);\n  } else if (n === list.head.data.length) {\n    // first chunk is a perfect match\n    ret = list.shift();\n  } else {\n    // result spans more than one buffer\n    ret = hasStrings ? copyFromBufferString(n, list) : copyFromBuffer(n, list);\n  }\n  return ret;\n}\n\n// Copies a specified amount of characters from the list of buffered data\n// chunks.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction copyFromBufferString(n, list) {\n  var p = list.head;\n  var c = 1;\n  var ret = p.data;\n  n -= ret.length;\n  while (p = p.next) {\n    var str = p.data;\n    var nb = n > str.length ? str.length : n;\n    if (nb === str.length) ret += str;else ret += str.slice(0, n);\n    n -= nb;\n    if (n === 0) {\n      if (nb === str.length) {\n        ++c;\n        if (p.next) list.head = p.next;else list.head = list.tail = null;\n      } else {\n        list.head = p;\n        p.data = str.slice(nb);\n      }\n      break;\n    }\n    ++c;\n  }\n  list.length -= c;\n  return ret;\n}\n\n// Copies a specified amount of bytes from the list of buffered data chunks.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction copyFromBuffer(n, list) {\n  var ret = Buffer.allocUnsafe(n);\n  var p = list.head;\n  var c = 1;\n  p.data.copy(ret);\n  n -= p.data.length;\n  while (p = p.next) {\n    var buf = p.data;\n    var nb = n > buf.length ? buf.length : n;\n    buf.copy(ret, ret.length - n, 0, nb);\n    n -= nb;\n    if (n === 0) {\n      if (nb === buf.length) {\n        ++c;\n        if (p.next) list.head = p.next;else list.head = list.tail = null;\n      } else {\n        list.head = p;\n        p.data = buf.slice(nb);\n      }\n      break;\n    }\n    ++c;\n  }\n  list.length -= c;\n  return ret;\n}\n\nfunction endReadable(stream) {\n  var state = stream._readableState;\n\n  // If we get here before consuming all the bytes, then that is a\n  // bug in node.  Should never happen.\n  if (state.length > 0) throw new Error('\"endReadable()\" called on non-empty stream');\n\n  if (!state.endEmitted) {\n    state.ended = true;\n    pna.nextTick(endReadableNT, state, stream);\n  }\n}\n\nfunction endReadableNT(state, stream) {\n  // Check that we didn't get one last unshift.\n  if (!state.endEmitted && state.length === 0) {\n    state.endEmitted = true;\n    stream.readable = false;\n    stream.emit('end');\n  }\n}\n\nfunction indexOf(xs, x) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    if (xs[i] === x) return i;\n  }\n  return -1;\n}","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a transform stream is a readable/writable stream where you do\n// something with the data.  Sometimes it's called a \"filter\",\n// but that's not a great name for it, since that implies a thing where\n// some bits pass through, and others are simply ignored.  (That would\n// be a valid example of a transform, of course.)\n//\n// While the output is causally related to the input, it's not a\n// necessarily symmetric or synchronous transformation.  For example,\n// a zlib stream might take multiple plain-text writes(), and then\n// emit a single compressed chunk some time in the future.\n//\n// Here's how this works:\n//\n// The Transform stream has all the aspects of the readable and writable\n// stream classes.  When you write(chunk), that calls _write(chunk,cb)\n// internally, and returns false if there's a lot of pending writes\n// buffered up.  When you call read(), that calls _read(n) until\n// there's enough pending readable data buffered up.\n//\n// In a transform stream, the written data is placed in a buffer.  When\n// _read(n) is called, it transforms the queued up data, calling the\n// buffered _write cb's as it consumes chunks.  If consuming a single\n// written chunk would result in multiple output chunks, then the first\n// outputted bit calls the readcb, and subsequent chunks just go into\n// the read buffer, and will cause it to emit 'readable' if necessary.\n//\n// This way, back-pressure is actually determined by the reading side,\n// since _read has to be called to start processing a new chunk.  However,\n// a pathological inflate type of transform can cause excessive buffering\n// here.  For example, imagine a stream where every byte of input is\n// interpreted as an integer from 0-255, and then results in that many\n// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in\n// 1kb of data being output.  In this case, you could write a very small\n// amount of input, and end up with a very large amount of output.  In\n// such a pathological inflating mechanism, there'd be no way to tell\n// the system to stop doing the transform.  A single 4MB write could\n// cause the system to run out of memory.\n//\n// However, even in such a pathological case, only a single written chunk\n// would be consumed, and then the rest would wait (un-transformed) until\n// the results of the previous transformed chunk were consumed.\n\n'use strict';\n\nmodule.exports = Transform;\n\nvar Duplex = require('./_stream_duplex');\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nutil.inherits(Transform, Duplex);\n\nfunction afterTransform(er, data) {\n  var ts = this._transformState;\n  ts.transforming = false;\n\n  var cb = ts.writecb;\n\n  if (!cb) {\n    return this.emit('error', new Error('write callback called multiple times'));\n  }\n\n  ts.writechunk = null;\n  ts.writecb = null;\n\n  if (data != null) // single equals check for both `null` and `undefined`\n    this.push(data);\n\n  cb(er);\n\n  var rs = this._readableState;\n  rs.reading = false;\n  if (rs.needReadable || rs.length < rs.highWaterMark) {\n    this._read(rs.highWaterMark);\n  }\n}\n\nfunction Transform(options) {\n  if (!(this instanceof Transform)) return new Transform(options);\n\n  Duplex.call(this, options);\n\n  this._transformState = {\n    afterTransform: afterTransform.bind(this),\n    needTransform: false,\n    transforming: false,\n    writecb: null,\n    writechunk: null,\n    writeencoding: null\n  };\n\n  // start out asking for a readable event once data is transformed.\n  this._readableState.needReadable = true;\n\n  // we have implemented the _read method, and done the other things\n  // that Readable wants before the first _read call, so unset the\n  // sync guard flag.\n  this._readableState.sync = false;\n\n  if (options) {\n    if (typeof options.transform === 'function') this._transform = options.transform;\n\n    if (typeof options.flush === 'function') this._flush = options.flush;\n  }\n\n  // When the writable side finishes, then flush out anything remaining.\n  this.on('prefinish', prefinish);\n}\n\nfunction prefinish() {\n  var _this = this;\n\n  if (typeof this._flush === 'function') {\n    this._flush(function (er, data) {\n      done(_this, er, data);\n    });\n  } else {\n    done(this, null, null);\n  }\n}\n\nTransform.prototype.push = function (chunk, encoding) {\n  this._transformState.needTransform = false;\n  return Duplex.prototype.push.call(this, chunk, encoding);\n};\n\n// This is the part where you do stuff!\n// override this function in implementation classes.\n// 'chunk' is an input chunk.\n//\n// Call `push(newChunk)` to pass along transformed output\n// to the readable side.  You may call 'push' zero or more times.\n//\n// Call `cb(err)` when you are done with this chunk.  If you pass\n// an error, then that'll put the hurt on the whole operation.  If you\n// never call cb(), then you'll never get another chunk.\nTransform.prototype._transform = function (chunk, encoding, cb) {\n  throw new Error('_transform() is not implemented');\n};\n\nTransform.prototype._write = function (chunk, encoding, cb) {\n  var ts = this._transformState;\n  ts.writecb = cb;\n  ts.writechunk = chunk;\n  ts.writeencoding = encoding;\n  if (!ts.transforming) {\n    var rs = this._readableState;\n    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);\n  }\n};\n\n// Doesn't matter what the args are here.\n// _transform does all the work.\n// That we got here means that the readable side wants more data.\nTransform.prototype._read = function (n) {\n  var ts = this._transformState;\n\n  if (ts.writechunk !== null && ts.writecb && !ts.transforming) {\n    ts.transforming = true;\n    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);\n  } else {\n    // mark that we need a transform, so that any data that comes in\n    // will get processed, now that we've asked for it.\n    ts.needTransform = true;\n  }\n};\n\nTransform.prototype._destroy = function (err, cb) {\n  var _this2 = this;\n\n  Duplex.prototype._destroy.call(this, err, function (err2) {\n    cb(err2);\n    _this2.emit('close');\n  });\n};\n\nfunction done(stream, er, data) {\n  if (er) return stream.emit('error', er);\n\n  if (data != null) // single equals check for both `null` and `undefined`\n    stream.push(data);\n\n  // if there's nothing in the write buffer, then that means\n  // that nothing more will ever be provided\n  if (stream._writableState.length) throw new Error('Calling transform done when ws.length != 0');\n\n  if (stream._transformState.transforming) throw new Error('Calling transform done when still transforming');\n\n  return stream.push(null);\n}","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// A bit simpler than readable streams.\n// Implement an async ._write(chunk, encoding, cb), and it'll handle all\n// the drain event emission and buffering.\n\n'use strict';\n\n/*<replacement>*/\n\nvar pna = require('process-nextick-args');\n/*</replacement>*/\n\nmodule.exports = Writable;\n\n/* <replacement> */\nfunction WriteReq(chunk, encoding, cb) {\n  this.chunk = chunk;\n  this.encoding = encoding;\n  this.callback = cb;\n  this.next = null;\n}\n\n// It seems a linked list but it is not\n// there will be only 2 of these for each stream\nfunction CorkedRequest(state) {\n  var _this = this;\n\n  this.next = null;\n  this.entry = null;\n  this.finish = function () {\n    onCorkedFinish(_this, state);\n  };\n}\n/* </replacement> */\n\n/*<replacement>*/\nvar asyncWrite = !process.browser && ['v0.10', 'v0.9.'].indexOf(process.version.slice(0, 5)) > -1 ? setImmediate : pna.nextTick;\n/*</replacement>*/\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nWritable.WritableState = WritableState;\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\n/*<replacement>*/\nvar internalUtil = {\n  deprecate: require('util-deprecate')\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\n/*<replacement>*/\n\nvar Buffer = require('safe-buffer').Buffer;\nvar OurUint8Array = global.Uint8Array || function () {};\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n\n/*</replacement>*/\n\nvar destroyImpl = require('./internal/streams/destroy');\n\nutil.inherits(Writable, Stream);\n\nfunction nop() {}\n\nfunction WritableState(options, stream) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  options = options || {};\n\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n  var isDuplex = stream instanceof Duplex;\n\n  // object stream flag to indicate whether or not this stream\n  // contains buffers or objects.\n  this.objectMode = !!options.objectMode;\n\n  if (isDuplex) this.objectMode = this.objectMode || !!options.writableObjectMode;\n\n  // the point at which write() starts returning false\n  // Note: 0 is a valid value, means that we always return false if\n  // the entire buffer is not flushed immediately on write()\n  var hwm = options.highWaterMark;\n  var writableHwm = options.writableHighWaterMark;\n  var defaultHwm = this.objectMode ? 16 : 16 * 1024;\n\n  if (hwm || hwm === 0) this.highWaterMark = hwm;else if (isDuplex && (writableHwm || writableHwm === 0)) this.highWaterMark = writableHwm;else this.highWaterMark = defaultHwm;\n\n  // cast to ints.\n  this.highWaterMark = Math.floor(this.highWaterMark);\n\n  // if _final has been called\n  this.finalCalled = false;\n\n  // drain event flag.\n  this.needDrain = false;\n  // at the start of calling end()\n  this.ending = false;\n  // when end() has been called, and returned\n  this.ended = false;\n  // when 'finish' is emitted\n  this.finished = false;\n\n  // has it been destroyed\n  this.destroyed = false;\n\n  // should we decode strings into buffers before passing to _write?\n  // this is here so that some node-core streams can optimize string\n  // handling at a lower level.\n  var noDecode = options.decodeStrings === false;\n  this.decodeStrings = !noDecode;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // not an actual buffer we keep track of, but a measurement\n  // of how much we're waiting to get pushed to some underlying\n  // socket or file.\n  this.length = 0;\n\n  // a flag to see when we're in the middle of a write.\n  this.writing = false;\n\n  // when true all writes will be buffered until .uncork() call\n  this.corked = 0;\n\n  // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n  this.sync = true;\n\n  // a flag to know if we're processing previously buffered items, which\n  // may call the _write() callback in the same tick, so that we don't\n  // end up in an overlapped onwrite situation.\n  this.bufferProcessing = false;\n\n  // the callback that's passed to _write(chunk,cb)\n  this.onwrite = function (er) {\n    onwrite(stream, er);\n  };\n\n  // the callback that the user supplies to write(chunk,encoding,cb)\n  this.writecb = null;\n\n  // the amount that is being written when _write is called.\n  this.writelen = 0;\n\n  this.bufferedRequest = null;\n  this.lastBufferedRequest = null;\n\n  // number of pending user-supplied write callbacks\n  // this must be 0 before 'finish' can be emitted\n  this.pendingcb = 0;\n\n  // emit prefinish if the only thing we're waiting for is _write cbs\n  // This is relevant for synchronous Transform streams\n  this.prefinished = false;\n\n  // True if the error was already emitted and should not be thrown again\n  this.errorEmitted = false;\n\n  // count buffered requests\n  this.bufferedRequestCount = 0;\n\n  // allocate the first CorkedRequest, there is always\n  // one allocated and free to use, and we maintain at most two\n  this.corkedRequestsFree = new CorkedRequest(this);\n}\n\nWritableState.prototype.getBuffer = function getBuffer() {\n  var current = this.bufferedRequest;\n  var out = [];\n  while (current) {\n    out.push(current);\n    current = current.next;\n  }\n  return out;\n};\n\n(function () {\n  try {\n    Object.defineProperty(WritableState.prototype, 'buffer', {\n      get: internalUtil.deprecate(function () {\n        return this.getBuffer();\n      }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.', 'DEP0003')\n    });\n  } catch (_) {}\n})();\n\n// Test _writableState for inheritance to account for Duplex streams,\n// whose prototype chain only points to Readable.\nvar realHasInstance;\nif (typeof Symbol === 'function' && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === 'function') {\n  realHasInstance = Function.prototype[Symbol.hasInstance];\n  Object.defineProperty(Writable, Symbol.hasInstance, {\n    value: function (object) {\n      if (realHasInstance.call(this, object)) return true;\n      if (this !== Writable) return false;\n\n      return object && object._writableState instanceof WritableState;\n    }\n  });\n} else {\n  realHasInstance = function (object) {\n    return object instanceof this;\n  };\n}\n\nfunction Writable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  // Writable ctor is applied to Duplexes, too.\n  // `realHasInstance` is necessary because using plain `instanceof`\n  // would return false, as no `_writableState` property is attached.\n\n  // Trying to use the custom `instanceof` for Writable here will also break the\n  // Node.js LazyTransform implementation, which has a non-trivial getter for\n  // `_writableState` that would lead to infinite recursion.\n  if (!realHasInstance.call(Writable, this) && !(this instanceof Duplex)) {\n    return new Writable(options);\n  }\n\n  this._writableState = new WritableState(options, this);\n\n  // legacy.\n  this.writable = true;\n\n  if (options) {\n    if (typeof options.write === 'function') this._write = options.write;\n\n    if (typeof options.writev === 'function') this._writev = options.writev;\n\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n\n    if (typeof options.final === 'function') this._final = options.final;\n  }\n\n  Stream.call(this);\n}\n\n// Otherwise people can pipe Writable streams, which is just wrong.\nWritable.prototype.pipe = function () {\n  this.emit('error', new Error('Cannot pipe, not readable'));\n};\n\nfunction writeAfterEnd(stream, cb) {\n  var er = new Error('write after end');\n  // TODO: defer error events consistently everywhere, not just the cb\n  stream.emit('error', er);\n  pna.nextTick(cb, er);\n}\n\n// Checks that a user-supplied chunk is valid, especially for the particular\n// mode the stream is in. Currently this means that `null` is never accepted\n// and undefined/non-string values are only allowed in object mode.\nfunction validChunk(stream, state, chunk, cb) {\n  var valid = true;\n  var er = false;\n\n  if (chunk === null) {\n    er = new TypeError('May not write null values to stream');\n  } else if (typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new TypeError('Invalid non-string/buffer chunk');\n  }\n  if (er) {\n    stream.emit('error', er);\n    pna.nextTick(cb, er);\n    valid = false;\n  }\n  return valid;\n}\n\nWritable.prototype.write = function (chunk, encoding, cb) {\n  var state = this._writableState;\n  var ret = false;\n  var isBuf = !state.objectMode && _isUint8Array(chunk);\n\n  if (isBuf && !Buffer.isBuffer(chunk)) {\n    chunk = _uint8ArrayToBuffer(chunk);\n  }\n\n  if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (isBuf) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;\n\n  if (typeof cb !== 'function') cb = nop;\n\n  if (state.ended) writeAfterEnd(this, cb);else if (isBuf || validChunk(this, state, chunk, cb)) {\n    state.pendingcb++;\n    ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);\n  }\n\n  return ret;\n};\n\nWritable.prototype.cork = function () {\n  var state = this._writableState;\n\n  state.corked++;\n};\n\nWritable.prototype.uncork = function () {\n  var state = this._writableState;\n\n  if (state.corked) {\n    state.corked--;\n\n    if (!state.writing && !state.corked && !state.finished && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);\n  }\n};\n\nWritable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {\n  // node::ParseEncoding() requires lower case.\n  if (typeof encoding === 'string') encoding = encoding.toLowerCase();\n  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new TypeError('Unknown encoding: ' + encoding);\n  this._writableState.defaultEncoding = encoding;\n  return this;\n};\n\nfunction decodeChunk(state, chunk, encoding) {\n  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {\n    chunk = Buffer.from(chunk, encoding);\n  }\n  return chunk;\n}\n\nObject.defineProperty(Writable.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function () {\n    return this._writableState.highWaterMark;\n  }\n});\n\n// if we're already writing something, then just put this\n// in the queue, and wait our turn.  Otherwise, call _write\n// If we return false, then we need a drain event, so set that flag.\nfunction writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {\n  if (!isBuf) {\n    var newChunk = decodeChunk(state, chunk, encoding);\n    if (chunk !== newChunk) {\n      isBuf = true;\n      encoding = 'buffer';\n      chunk = newChunk;\n    }\n  }\n  var len = state.objectMode ? 1 : chunk.length;\n\n  state.length += len;\n\n  var ret = state.length < state.highWaterMark;\n  // we must ensure that previous needDrain will not be reset to false.\n  if (!ret) state.needDrain = true;\n\n  if (state.writing || state.corked) {\n    var last = state.lastBufferedRequest;\n    state.lastBufferedRequest = {\n      chunk: chunk,\n      encoding: encoding,\n      isBuf: isBuf,\n      callback: cb,\n      next: null\n    };\n    if (last) {\n      last.next = state.lastBufferedRequest;\n    } else {\n      state.bufferedRequest = state.lastBufferedRequest;\n    }\n    state.bufferedRequestCount += 1;\n  } else {\n    doWrite(stream, state, false, len, chunk, encoding, cb);\n  }\n\n  return ret;\n}\n\nfunction doWrite(stream, state, writev, len, chunk, encoding, cb) {\n  state.writelen = len;\n  state.writecb = cb;\n  state.writing = true;\n  state.sync = true;\n  if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);\n  state.sync = false;\n}\n\nfunction onwriteError(stream, state, sync, er, cb) {\n  --state.pendingcb;\n\n  if (sync) {\n    // defer the callback if we are being called synchronously\n    // to avoid piling up things on the stack\n    pna.nextTick(cb, er);\n    // this can emit finish, and it will always happen\n    // after error\n    pna.nextTick(finishMaybe, stream, state);\n    stream._writableState.errorEmitted = true;\n    stream.emit('error', er);\n  } else {\n    // the caller expect this to happen before if\n    // it is async\n    cb(er);\n    stream._writableState.errorEmitted = true;\n    stream.emit('error', er);\n    // this can emit finish, but finish must\n    // always follow error\n    finishMaybe(stream, state);\n  }\n}\n\nfunction onwriteStateUpdate(state) {\n  state.writing = false;\n  state.writecb = null;\n  state.length -= state.writelen;\n  state.writelen = 0;\n}\n\nfunction onwrite(stream, er) {\n  var state = stream._writableState;\n  var sync = state.sync;\n  var cb = state.writecb;\n\n  onwriteStateUpdate(state);\n\n  if (er) onwriteError(stream, state, sync, er, cb);else {\n    // Check if we're actually ready to finish, but don't emit yet\n    var finished = needFinish(state);\n\n    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {\n      clearBuffer(stream, state);\n    }\n\n    if (sync) {\n      /*<replacement>*/\n      asyncWrite(afterWrite, stream, state, finished, cb);\n      /*</replacement>*/\n    } else {\n      afterWrite(stream, state, finished, cb);\n    }\n  }\n}\n\nfunction afterWrite(stream, state, finished, cb) {\n  if (!finished) onwriteDrain(stream, state);\n  state.pendingcb--;\n  cb();\n  finishMaybe(stream, state);\n}\n\n// Must force callback to be called on nextTick, so that we don't\n// emit 'drain' before the write() consumer gets the 'false' return\n// value, and has a chance to attach a 'drain' listener.\nfunction onwriteDrain(stream, state) {\n  if (state.length === 0 && state.needDrain) {\n    state.needDrain = false;\n    stream.emit('drain');\n  }\n}\n\n// if there's something in the buffer waiting, then process it\nfunction clearBuffer(stream, state) {\n  state.bufferProcessing = true;\n  var entry = state.bufferedRequest;\n\n  if (stream._writev && entry && entry.next) {\n    // Fast case, write everything using _writev()\n    var l = state.bufferedRequestCount;\n    var buffer = new Array(l);\n    var holder = state.corkedRequestsFree;\n    holder.entry = entry;\n\n    var count = 0;\n    var allBuffers = true;\n    while (entry) {\n      buffer[count] = entry;\n      if (!entry.isBuf) allBuffers = false;\n      entry = entry.next;\n      count += 1;\n    }\n    buffer.allBuffers = allBuffers;\n\n    doWrite(stream, state, true, state.length, buffer, '', holder.finish);\n\n    // doWrite is almost always async, defer these to save a bit of time\n    // as the hot path ends with doWrite\n    state.pendingcb++;\n    state.lastBufferedRequest = null;\n    if (holder.next) {\n      state.corkedRequestsFree = holder.next;\n      holder.next = null;\n    } else {\n      state.corkedRequestsFree = new CorkedRequest(state);\n    }\n    state.bufferedRequestCount = 0;\n  } else {\n    // Slow case, write chunks one-by-one\n    while (entry) {\n      var chunk = entry.chunk;\n      var encoding = entry.encoding;\n      var cb = entry.callback;\n      var len = state.objectMode ? 1 : chunk.length;\n\n      doWrite(stream, state, false, len, chunk, encoding, cb);\n      entry = entry.next;\n      state.bufferedRequestCount--;\n      // if we didn't call the onwrite immediately, then\n      // it means that we need to wait until it does.\n      // also, that means that the chunk and cb are currently\n      // being processed, so move the buffer counter past them.\n      if (state.writing) {\n        break;\n      }\n    }\n\n    if (entry === null) state.lastBufferedRequest = null;\n  }\n\n  state.bufferedRequest = entry;\n  state.bufferProcessing = false;\n}\n\nWritable.prototype._write = function (chunk, encoding, cb) {\n  cb(new Error('_write() is not implemented'));\n};\n\nWritable.prototype._writev = null;\n\nWritable.prototype.end = function (chunk, encoding, cb) {\n  var state = this._writableState;\n\n  if (typeof chunk === 'function') {\n    cb = chunk;\n    chunk = null;\n    encoding = null;\n  } else if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding);\n\n  // .end() fully uncorks\n  if (state.corked) {\n    state.corked = 1;\n    this.uncork();\n  }\n\n  // ignore unnecessary end() calls.\n  if (!state.ending && !state.finished) endWritable(this, state, cb);\n};\n\nfunction needFinish(state) {\n  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;\n}\nfunction callFinal(stream, state) {\n  stream._final(function (err) {\n    state.pendingcb--;\n    if (err) {\n      stream.emit('error', err);\n    }\n    state.prefinished = true;\n    stream.emit('prefinish');\n    finishMaybe(stream, state);\n  });\n}\nfunction prefinish(stream, state) {\n  if (!state.prefinished && !state.finalCalled) {\n    if (typeof stream._final === 'function') {\n      state.pendingcb++;\n      state.finalCalled = true;\n      pna.nextTick(callFinal, stream, state);\n    } else {\n      state.prefinished = true;\n      stream.emit('prefinish');\n    }\n  }\n}\n\nfunction finishMaybe(stream, state) {\n  var need = needFinish(state);\n  if (need) {\n    prefinish(stream, state);\n    if (state.pendingcb === 0) {\n      state.finished = true;\n      stream.emit('finish');\n    }\n  }\n  return need;\n}\n\nfunction endWritable(stream, state, cb) {\n  state.ending = true;\n  finishMaybe(stream, state);\n  if (cb) {\n    if (state.finished) pna.nextTick(cb);else stream.once('finish', cb);\n  }\n  state.ended = true;\n  stream.writable = false;\n}\n\nfunction onCorkedFinish(corkReq, state, err) {\n  var entry = corkReq.entry;\n  corkReq.entry = null;\n  while (entry) {\n    var cb = entry.callback;\n    state.pendingcb--;\n    cb(err);\n    entry = entry.next;\n  }\n  if (state.corkedRequestsFree) {\n    state.corkedRequestsFree.next = corkReq;\n  } else {\n    state.corkedRequestsFree = corkReq;\n  }\n}\n\nObject.defineProperty(Writable.prototype, 'destroyed', {\n  get: function () {\n    if (this._writableState === undefined) {\n      return false;\n    }\n    return this._writableState.destroyed;\n  },\n  set: function (value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._writableState) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._writableState.destroyed = value;\n  }\n});\n\nWritable.prototype.destroy = destroyImpl.destroy;\nWritable.prototype._undestroy = destroyImpl.undestroy;\nWritable.prototype._destroy = function (err, cb) {\n  this.end();\n  cb(err);\n};","'use strict';\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Buffer = require('safe-buffer').Buffer;\nvar util = require('util');\n\nfunction copyBuffer(src, target, offset) {\n  src.copy(target, offset);\n}\n\nmodule.exports = function () {\n  function BufferList() {\n    _classCallCheck(this, BufferList);\n\n    this.head = null;\n    this.tail = null;\n    this.length = 0;\n  }\n\n  BufferList.prototype.push = function push(v) {\n    var entry = { data: v, next: null };\n    if (this.length > 0) this.tail.next = entry;else this.head = entry;\n    this.tail = entry;\n    ++this.length;\n  };\n\n  BufferList.prototype.unshift = function unshift(v) {\n    var entry = { data: v, next: this.head };\n    if (this.length === 0) this.tail = entry;\n    this.head = entry;\n    ++this.length;\n  };\n\n  BufferList.prototype.shift = function shift() {\n    if (this.length === 0) return;\n    var ret = this.head.data;\n    if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;\n    --this.length;\n    return ret;\n  };\n\n  BufferList.prototype.clear = function clear() {\n    this.head = this.tail = null;\n    this.length = 0;\n  };\n\n  BufferList.prototype.join = function join(s) {\n    if (this.length === 0) return '';\n    var p = this.head;\n    var ret = '' + p.data;\n    while (p = p.next) {\n      ret += s + p.data;\n    }return ret;\n  };\n\n  BufferList.prototype.concat = function concat(n) {\n    if (this.length === 0) return Buffer.alloc(0);\n    if (this.length === 1) return this.head.data;\n    var ret = Buffer.allocUnsafe(n >>> 0);\n    var p = this.head;\n    var i = 0;\n    while (p) {\n      copyBuffer(p.data, ret, i);\n      i += p.data.length;\n      p = p.next;\n    }\n    return ret;\n  };\n\n  return BufferList;\n}();\n\nif (util && util.inspect && util.inspect.custom) {\n  module.exports.prototype[util.inspect.custom] = function () {\n    var obj = util.inspect({ length: this.length });\n    return this.constructor.name + ' ' + obj;\n  };\n}","'use strict';\n\n/*<replacement>*/\n\nvar pna = require('process-nextick-args');\n/*</replacement>*/\n\n// undocumented cb() API, needed for core, not for public API\nfunction destroy(err, cb) {\n  var _this = this;\n\n  var readableDestroyed = this._readableState && this._readableState.destroyed;\n  var writableDestroyed = this._writableState && this._writableState.destroyed;\n\n  if (readableDestroyed || writableDestroyed) {\n    if (cb) {\n      cb(err);\n    } else if (err && (!this._writableState || !this._writableState.errorEmitted)) {\n      pna.nextTick(emitErrorNT, this, err);\n    }\n    return this;\n  }\n\n  // we set destroyed to true before firing error callbacks in order\n  // to make it re-entrance safe in case destroy() is called within callbacks\n\n  if (this._readableState) {\n    this._readableState.destroyed = true;\n  }\n\n  // if this is a duplex stream mark the writable part as destroyed as well\n  if (this._writableState) {\n    this._writableState.destroyed = true;\n  }\n\n  this._destroy(err || null, function (err) {\n    if (!cb && err) {\n      pna.nextTick(emitErrorNT, _this, err);\n      if (_this._writableState) {\n        _this._writableState.errorEmitted = true;\n      }\n    } else if (cb) {\n      cb(err);\n    }\n  });\n\n  return this;\n}\n\nfunction undestroy() {\n  if (this._readableState) {\n    this._readableState.destroyed = false;\n    this._readableState.reading = false;\n    this._readableState.ended = false;\n    this._readableState.endEmitted = false;\n  }\n\n  if (this._writableState) {\n    this._writableState.destroyed = false;\n    this._writableState.ended = false;\n    this._writableState.ending = false;\n    this._writableState.finished = false;\n    this._writableState.errorEmitted = false;\n  }\n}\n\nfunction emitErrorNT(self, err) {\n  self.emit('error', err);\n}\n\nmodule.exports = {\n  destroy: destroy,\n  undestroy: undestroy\n};","module.exports = require('events').EventEmitter;\n","/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n","module.exports = require('./readable').PassThrough\n","exports = module.exports = require('./lib/_stream_readable.js');\nexports.Stream = exports;\nexports.Readable = exports;\nexports.Writable = require('./lib/_stream_writable.js');\nexports.Duplex = require('./lib/_stream_duplex.js');\nexports.Transform = require('./lib/_stream_transform.js');\nexports.PassThrough = require('./lib/_stream_passthrough.js');\n","module.exports = require('./readable').Transform\n","module.exports = require('./lib/_stream_writable.js');\n","'use strict'\nvar Buffer = require('buffer').Buffer\nvar inherits = require('inherits')\nvar HashBase = require('hash-base')\n\nvar ARRAY16 = new Array(16)\n\nvar zl = [\n  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n  7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8,\n  3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12,\n  1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2,\n  4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13\n]\n\nvar zr = [\n  5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12,\n  6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2,\n  15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13,\n  8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14,\n  12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11\n]\n\nvar sl = [\n  11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8,\n  7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12,\n  11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5,\n  11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12,\n  9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6\n]\n\nvar sr = [\n  8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6,\n  9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11,\n  9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5,\n  15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8,\n  8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11\n]\n\nvar hl = [0x00000000, 0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xa953fd4e]\nvar hr = [0x50a28be6, 0x5c4dd124, 0x6d703ef3, 0x7a6d76e9, 0x00000000]\n\nfunction RIPEMD160 () {\n  HashBase.call(this, 64)\n\n  // state\n  this._a = 0x67452301\n  this._b = 0xefcdab89\n  this._c = 0x98badcfe\n  this._d = 0x10325476\n  this._e = 0xc3d2e1f0\n}\n\ninherits(RIPEMD160, HashBase)\n\nRIPEMD160.prototype._update = function () {\n  var words = ARRAY16\n  for (var j = 0; j < 16; ++j) words[j] = this._block.readInt32LE(j * 4)\n\n  var al = this._a | 0\n  var bl = this._b | 0\n  var cl = this._c | 0\n  var dl = this._d | 0\n  var el = this._e | 0\n\n  var ar = this._a | 0\n  var br = this._b | 0\n  var cr = this._c | 0\n  var dr = this._d | 0\n  var er = this._e | 0\n\n  // computation\n  for (var i = 0; i < 80; i += 1) {\n    var tl\n    var tr\n    if (i < 16) {\n      tl = fn1(al, bl, cl, dl, el, words[zl[i]], hl[0], sl[i])\n      tr = fn5(ar, br, cr, dr, er, words[zr[i]], hr[0], sr[i])\n    } else if (i < 32) {\n      tl = fn2(al, bl, cl, dl, el, words[zl[i]], hl[1], sl[i])\n      tr = fn4(ar, br, cr, dr, er, words[zr[i]], hr[1], sr[i])\n    } else if (i < 48) {\n      tl = fn3(al, bl, cl, dl, el, words[zl[i]], hl[2], sl[i])\n      tr = fn3(ar, br, cr, dr, er, words[zr[i]], hr[2], sr[i])\n    } else if (i < 64) {\n      tl = fn4(al, bl, cl, dl, el, words[zl[i]], hl[3], sl[i])\n      tr = fn2(ar, br, cr, dr, er, words[zr[i]], hr[3], sr[i])\n    } else { // if (i<80) {\n      tl = fn5(al, bl, cl, dl, el, words[zl[i]], hl[4], sl[i])\n      tr = fn1(ar, br, cr, dr, er, words[zr[i]], hr[4], sr[i])\n    }\n\n    al = el\n    el = dl\n    dl = rotl(cl, 10)\n    cl = bl\n    bl = tl\n\n    ar = er\n    er = dr\n    dr = rotl(cr, 10)\n    cr = br\n    br = tr\n  }\n\n  // update state\n  var t = (this._b + cl + dr) | 0\n  this._b = (this._c + dl + er) | 0\n  this._c = (this._d + el + ar) | 0\n  this._d = (this._e + al + br) | 0\n  this._e = (this._a + bl + cr) | 0\n  this._a = t\n}\n\nRIPEMD160.prototype._digest = function () {\n  // create padding and handle blocks\n  this._block[this._blockOffset++] = 0x80\n  if (this._blockOffset > 56) {\n    this._block.fill(0, this._blockOffset, 64)\n    this._update()\n    this._blockOffset = 0\n  }\n\n  this._block.fill(0, this._blockOffset, 56)\n  this._block.writeUInt32LE(this._length[0], 56)\n  this._block.writeUInt32LE(this._length[1], 60)\n  this._update()\n\n  // produce result\n  var buffer = Buffer.alloc ? Buffer.alloc(20) : new Buffer(20)\n  buffer.writeInt32LE(this._a, 0)\n  buffer.writeInt32LE(this._b, 4)\n  buffer.writeInt32LE(this._c, 8)\n  buffer.writeInt32LE(this._d, 12)\n  buffer.writeInt32LE(this._e, 16)\n  return buffer\n}\n\nfunction rotl (x, n) {\n  return (x << n) | (x >>> (32 - n))\n}\n\nfunction fn1 (a, b, c, d, e, m, k, s) {\n  return (rotl((a + (b ^ c ^ d) + m + k) | 0, s) + e) | 0\n}\n\nfunction fn2 (a, b, c, d, e, m, k, s) {\n  return (rotl((a + ((b & c) | ((~b) & d)) + m + k) | 0, s) + e) | 0\n}\n\nfunction fn3 (a, b, c, d, e, m, k, s) {\n  return (rotl((a + ((b | (~c)) ^ d) + m + k) | 0, s) + e) | 0\n}\n\nfunction fn4 (a, b, c, d, e, m, k, s) {\n  return (rotl((a + ((b & d) | (c & (~d))) + m + k) | 0, s) + e) | 0\n}\n\nfunction fn5 (a, b, c, d, e, m, k, s) {\n  return (rotl((a + (b ^ (c | (~d))) + m + k) | 0, s) + e) | 0\n}\n\nmodule.exports = RIPEMD160\n","/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.prototype = Object.create(Buffer.prototype)\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n","(function (global, undefined) {\n    \"use strict\";\n\n    if (global.setImmediate) {\n        return;\n    }\n\n    var nextHandle = 1; // Spec says greater than zero\n    var tasksByHandle = {};\n    var currentlyRunningATask = false;\n    var doc = global.document;\n    var registerImmediate;\n\n    function setImmediate(callback) {\n      // Callback can either be a function or a string\n      if (typeof callback !== \"function\") {\n        callback = new Function(\"\" + callback);\n      }\n      // Copy function arguments\n      var args = new Array(arguments.length - 1);\n      for (var i = 0; i < args.length; i++) {\n          args[i] = arguments[i + 1];\n      }\n      // Store and register the task\n      var task = { callback: callback, args: args };\n      tasksByHandle[nextHandle] = task;\n      registerImmediate(nextHandle);\n      return nextHandle++;\n    }\n\n    function clearImmediate(handle) {\n        delete tasksByHandle[handle];\n    }\n\n    function run(task) {\n        var callback = task.callback;\n        var args = task.args;\n        switch (args.length) {\n        case 0:\n            callback();\n            break;\n        case 1:\n            callback(args[0]);\n            break;\n        case 2:\n            callback(args[0], args[1]);\n            break;\n        case 3:\n            callback(args[0], args[1], args[2]);\n            break;\n        default:\n            callback.apply(undefined, args);\n            break;\n        }\n    }\n\n    function runIfPresent(handle) {\n        // From the spec: \"Wait until any invocations of this algorithm started before this one have completed.\"\n        // So if we're currently running a task, we'll need to delay this invocation.\n        if (currentlyRunningATask) {\n            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n            // \"too much recursion\" error.\n            setTimeout(runIfPresent, 0, handle);\n        } else {\n            var task = tasksByHandle[handle];\n            if (task) {\n                currentlyRunningATask = true;\n                try {\n                    run(task);\n                } finally {\n                    clearImmediate(handle);\n                    currentlyRunningATask = false;\n                }\n            }\n        }\n    }\n\n    function installNextTickImplementation() {\n        registerImmediate = function(handle) {\n            process.nextTick(function () { runIfPresent(handle); });\n        };\n    }\n\n    function canUsePostMessage() {\n        // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n        // where `global.postMessage` means something completely different and can't be used for this purpose.\n        if (global.postMessage && !global.importScripts) {\n            var postMessageIsAsynchronous = true;\n            var oldOnMessage = global.onmessage;\n            global.onmessage = function() {\n                postMessageIsAsynchronous = false;\n            };\n            global.postMessage(\"\", \"*\");\n            global.onmessage = oldOnMessage;\n            return postMessageIsAsynchronous;\n        }\n    }\n\n    function installPostMessageImplementation() {\n        // Installs an event handler on `global` for the `message` event: see\n        // * https://developer.mozilla.org/en/DOM/window.postMessage\n        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n\n        var messagePrefix = \"setImmediate$\" + Math.random() + \"$\";\n        var onGlobalMessage = function(event) {\n            if (event.source === global &&\n                typeof event.data === \"string\" &&\n                event.data.indexOf(messagePrefix) === 0) {\n                runIfPresent(+event.data.slice(messagePrefix.length));\n            }\n        };\n\n        if (global.addEventListener) {\n            global.addEventListener(\"message\", onGlobalMessage, false);\n        } else {\n            global.attachEvent(\"onmessage\", onGlobalMessage);\n        }\n\n        registerImmediate = function(handle) {\n            global.postMessage(messagePrefix + handle, \"*\");\n        };\n    }\n\n    function installMessageChannelImplementation() {\n        var channel = new MessageChannel();\n        channel.port1.onmessage = function(event) {\n            var handle = event.data;\n            runIfPresent(handle);\n        };\n\n        registerImmediate = function(handle) {\n            channel.port2.postMessage(handle);\n        };\n    }\n\n    function installReadyStateChangeImplementation() {\n        var html = doc.documentElement;\n        registerImmediate = function(handle) {\n            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n            var script = doc.createElement(\"script\");\n            script.onreadystatechange = function () {\n                runIfPresent(handle);\n                script.onreadystatechange = null;\n                html.removeChild(script);\n                script = null;\n            };\n            html.appendChild(script);\n        };\n    }\n\n    function installSetTimeoutImplementation() {\n        registerImmediate = function(handle) {\n            setTimeout(runIfPresent, 0, handle);\n        };\n    }\n\n    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.\n    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\n    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;\n\n    // Don't get fooled by e.g. browserify environments.\n    if ({}.toString.call(global.process) === \"[object process]\") {\n        // For Node.js before 0.9\n        installNextTickImplementation();\n\n    } else if (canUsePostMessage()) {\n        // For non-IE10 modern browsers\n        installPostMessageImplementation();\n\n    } else if (global.MessageChannel) {\n        // For web workers, where supported\n        installMessageChannelImplementation();\n\n    } else if (doc && \"onreadystatechange\" in doc.createElement(\"script\")) {\n        // For IE 6–8\n        installReadyStateChangeImplementation();\n\n    } else {\n        // For older browsers\n        installSetTimeoutImplementation();\n    }\n\n    attachTo.setImmediate = setImmediate;\n    attachTo.clearImmediate = clearImmediate;\n}(typeof self === \"undefined\" ? typeof global === \"undefined\" ? this : global : self));\n","var Buffer = require('safe-buffer').Buffer\n\n// prototype class for hash functions\nfunction Hash (blockSize, finalSize) {\n  this._block = Buffer.alloc(blockSize)\n  this._finalSize = finalSize\n  this._blockSize = blockSize\n  this._len = 0\n}\n\nHash.prototype.update = function (data, enc) {\n  if (typeof data === 'string') {\n    enc = enc || 'utf8'\n    data = Buffer.from(data, enc)\n  }\n\n  var block = this._block\n  var blockSize = this._blockSize\n  var length = data.length\n  var accum = this._len\n\n  for (var offset = 0; offset < length;) {\n    var assigned = accum % blockSize\n    var remainder = Math.min(length - offset, blockSize - assigned)\n\n    for (var i = 0; i < remainder; i++) {\n      block[assigned + i] = data[offset + i]\n    }\n\n    accum += remainder\n    offset += remainder\n\n    if ((accum % blockSize) === 0) {\n      this._update(block)\n    }\n  }\n\n  this._len += length\n  return this\n}\n\nHash.prototype.digest = function (enc) {\n  var rem = this._len % this._blockSize\n\n  this._block[rem] = 0x80\n\n  // zero (rem + 1) trailing bits, where (rem + 1) is the smallest\n  // non-negative solution to the equation (length + 1 + (rem + 1)) === finalSize mod blockSize\n  this._block.fill(0, rem + 1)\n\n  if (rem >= this._finalSize) {\n    this._update(this._block)\n    this._block.fill(0)\n  }\n\n  var bits = this._len * 8\n\n  // uint32\n  if (bits <= 0xffffffff) {\n    this._block.writeUInt32BE(bits, this._blockSize - 4)\n\n  // uint64\n  } else {\n    var lowBits = (bits & 0xffffffff) >>> 0\n    var highBits = (bits - lowBits) / 0x100000000\n\n    this._block.writeUInt32BE(highBits, this._blockSize - 8)\n    this._block.writeUInt32BE(lowBits, this._blockSize - 4)\n  }\n\n  this._update(this._block)\n  var hash = this._hash()\n\n  return enc ? hash.toString(enc) : hash\n}\n\nHash.prototype._update = function () {\n  throw new Error('_update must be implemented by subclass')\n}\n\nmodule.exports = Hash\n","var exports = module.exports = function SHA (algorithm) {\n  algorithm = algorithm.toLowerCase()\n\n  var Algorithm = exports[algorithm]\n  if (!Algorithm) throw new Error(algorithm + ' is not supported (we accept pull requests)')\n\n  return new Algorithm()\n}\n\nexports.sha = require('./sha')\nexports.sha1 = require('./sha1')\nexports.sha224 = require('./sha224')\nexports.sha256 = require('./sha256')\nexports.sha384 = require('./sha384')\nexports.sha512 = require('./sha512')\n","/*\n * A JavaScript implementation of the Secure Hash Algorithm, SHA-0, as defined\n * in FIPS PUB 180-1\n * This source code is derived from sha1.js of the same repository.\n * The difference between SHA-0 and SHA-1 is just a bitwise rotate left\n * operation was added.\n */\n\nvar inherits = require('inherits')\nvar Hash = require('./hash')\nvar Buffer = require('safe-buffer').Buffer\n\nvar K = [\n  0x5a827999, 0x6ed9eba1, 0x8f1bbcdc | 0, 0xca62c1d6 | 0\n]\n\nvar W = new Array(80)\n\nfunction Sha () {\n  this.init()\n  this._w = W\n\n  Hash.call(this, 64, 56)\n}\n\ninherits(Sha, Hash)\n\nSha.prototype.init = function () {\n  this._a = 0x67452301\n  this._b = 0xefcdab89\n  this._c = 0x98badcfe\n  this._d = 0x10325476\n  this._e = 0xc3d2e1f0\n\n  return this\n}\n\nfunction rotl5 (num) {\n  return (num << 5) | (num >>> 27)\n}\n\nfunction rotl30 (num) {\n  return (num << 30) | (num >>> 2)\n}\n\nfunction ft (s, b, c, d) {\n  if (s === 0) return (b & c) | ((~b) & d)\n  if (s === 2) return (b & c) | (b & d) | (c & d)\n  return b ^ c ^ d\n}\n\nSha.prototype._update = function (M) {\n  var W = this._w\n\n  var a = this._a | 0\n  var b = this._b | 0\n  var c = this._c | 0\n  var d = this._d | 0\n  var e = this._e | 0\n\n  for (var i = 0; i < 16; ++i) W[i] = M.readInt32BE(i * 4)\n  for (; i < 80; ++i) W[i] = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16]\n\n  for (var j = 0; j < 80; ++j) {\n    var s = ~~(j / 20)\n    var t = (rotl5(a) + ft(s, b, c, d) + e + W[j] + K[s]) | 0\n\n    e = d\n    d = c\n    c = rotl30(b)\n    b = a\n    a = t\n  }\n\n  this._a = (a + this._a) | 0\n  this._b = (b + this._b) | 0\n  this._c = (c + this._c) | 0\n  this._d = (d + this._d) | 0\n  this._e = (e + this._e) | 0\n}\n\nSha.prototype._hash = function () {\n  var H = Buffer.allocUnsafe(20)\n\n  H.writeInt32BE(this._a | 0, 0)\n  H.writeInt32BE(this._b | 0, 4)\n  H.writeInt32BE(this._c | 0, 8)\n  H.writeInt32BE(this._d | 0, 12)\n  H.writeInt32BE(this._e | 0, 16)\n\n  return H\n}\n\nmodule.exports = Sha\n","/*\n * A JavaScript implementation of the Secure Hash Algorithm, SHA-1, as defined\n * in FIPS PUB 180-1\n * Version 2.1a Copyright Paul Johnston 2000 - 2002.\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n * Distributed under the BSD License\n * See http://pajhome.org.uk/crypt/md5 for details.\n */\n\nvar inherits = require('inherits')\nvar Hash = require('./hash')\nvar Buffer = require('safe-buffer').Buffer\n\nvar K = [\n  0x5a827999, 0x6ed9eba1, 0x8f1bbcdc | 0, 0xca62c1d6 | 0\n]\n\nvar W = new Array(80)\n\nfunction Sha1 () {\n  this.init()\n  this._w = W\n\n  Hash.call(this, 64, 56)\n}\n\ninherits(Sha1, Hash)\n\nSha1.prototype.init = function () {\n  this._a = 0x67452301\n  this._b = 0xefcdab89\n  this._c = 0x98badcfe\n  this._d = 0x10325476\n  this._e = 0xc3d2e1f0\n\n  return this\n}\n\nfunction rotl1 (num) {\n  return (num << 1) | (num >>> 31)\n}\n\nfunction rotl5 (num) {\n  return (num << 5) | (num >>> 27)\n}\n\nfunction rotl30 (num) {\n  return (num << 30) | (num >>> 2)\n}\n\nfunction ft (s, b, c, d) {\n  if (s === 0) return (b & c) | ((~b) & d)\n  if (s === 2) return (b & c) | (b & d) | (c & d)\n  return b ^ c ^ d\n}\n\nSha1.prototype._update = function (M) {\n  var W = this._w\n\n  var a = this._a | 0\n  var b = this._b | 0\n  var c = this._c | 0\n  var d = this._d | 0\n  var e = this._e | 0\n\n  for (var i = 0; i < 16; ++i) W[i] = M.readInt32BE(i * 4)\n  for (; i < 80; ++i) W[i] = rotl1(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16])\n\n  for (var j = 0; j < 80; ++j) {\n    var s = ~~(j / 20)\n    var t = (rotl5(a) + ft(s, b, c, d) + e + W[j] + K[s]) | 0\n\n    e = d\n    d = c\n    c = rotl30(b)\n    b = a\n    a = t\n  }\n\n  this._a = (a + this._a) | 0\n  this._b = (b + this._b) | 0\n  this._c = (c + this._c) | 0\n  this._d = (d + this._d) | 0\n  this._e = (e + this._e) | 0\n}\n\nSha1.prototype._hash = function () {\n  var H = Buffer.allocUnsafe(20)\n\n  H.writeInt32BE(this._a | 0, 0)\n  H.writeInt32BE(this._b | 0, 4)\n  H.writeInt32BE(this._c | 0, 8)\n  H.writeInt32BE(this._d | 0, 12)\n  H.writeInt32BE(this._e | 0, 16)\n\n  return H\n}\n\nmodule.exports = Sha1\n","/**\n * A JavaScript implementation of the Secure Hash Algorithm, SHA-256, as defined\n * in FIPS 180-2\n * Version 2.2-beta Copyright Angel Marin, Paul Johnston 2000 - 2009.\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n *\n */\n\nvar inherits = require('inherits')\nvar Sha256 = require('./sha256')\nvar Hash = require('./hash')\nvar Buffer = require('safe-buffer').Buffer\n\nvar W = new Array(64)\n\nfunction Sha224 () {\n  this.init()\n\n  this._w = W // new Array(64)\n\n  Hash.call(this, 64, 56)\n}\n\ninherits(Sha224, Sha256)\n\nSha224.prototype.init = function () {\n  this._a = 0xc1059ed8\n  this._b = 0x367cd507\n  this._c = 0x3070dd17\n  this._d = 0xf70e5939\n  this._e = 0xffc00b31\n  this._f = 0x68581511\n  this._g = 0x64f98fa7\n  this._h = 0xbefa4fa4\n\n  return this\n}\n\nSha224.prototype._hash = function () {\n  var H = Buffer.allocUnsafe(28)\n\n  H.writeInt32BE(this._a, 0)\n  H.writeInt32BE(this._b, 4)\n  H.writeInt32BE(this._c, 8)\n  H.writeInt32BE(this._d, 12)\n  H.writeInt32BE(this._e, 16)\n  H.writeInt32BE(this._f, 20)\n  H.writeInt32BE(this._g, 24)\n\n  return H\n}\n\nmodule.exports = Sha224\n","/**\n * A JavaScript implementation of the Secure Hash Algorithm, SHA-256, as defined\n * in FIPS 180-2\n * Version 2.2-beta Copyright Angel Marin, Paul Johnston 2000 - 2009.\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n *\n */\n\nvar inherits = require('inherits')\nvar Hash = require('./hash')\nvar Buffer = require('safe-buffer').Buffer\n\nvar K = [\n  0x428A2F98, 0x71374491, 0xB5C0FBCF, 0xE9B5DBA5,\n  0x3956C25B, 0x59F111F1, 0x923F82A4, 0xAB1C5ED5,\n  0xD807AA98, 0x12835B01, 0x243185BE, 0x550C7DC3,\n  0x72BE5D74, 0x80DEB1FE, 0x9BDC06A7, 0xC19BF174,\n  0xE49B69C1, 0xEFBE4786, 0x0FC19DC6, 0x240CA1CC,\n  0x2DE92C6F, 0x4A7484AA, 0x5CB0A9DC, 0x76F988DA,\n  0x983E5152, 0xA831C66D, 0xB00327C8, 0xBF597FC7,\n  0xC6E00BF3, 0xD5A79147, 0x06CA6351, 0x14292967,\n  0x27B70A85, 0x2E1B2138, 0x4D2C6DFC, 0x53380D13,\n  0x650A7354, 0x766A0ABB, 0x81C2C92E, 0x92722C85,\n  0xA2BFE8A1, 0xA81A664B, 0xC24B8B70, 0xC76C51A3,\n  0xD192E819, 0xD6990624, 0xF40E3585, 0x106AA070,\n  0x19A4C116, 0x1E376C08, 0x2748774C, 0x34B0BCB5,\n  0x391C0CB3, 0x4ED8AA4A, 0x5B9CCA4F, 0x682E6FF3,\n  0x748F82EE, 0x78A5636F, 0x84C87814, 0x8CC70208,\n  0x90BEFFFA, 0xA4506CEB, 0xBEF9A3F7, 0xC67178F2\n]\n\nvar W = new Array(64)\n\nfunction Sha256 () {\n  this.init()\n\n  this._w = W // new Array(64)\n\n  Hash.call(this, 64, 56)\n}\n\ninherits(Sha256, Hash)\n\nSha256.prototype.init = function () {\n  this._a = 0x6a09e667\n  this._b = 0xbb67ae85\n  this._c = 0x3c6ef372\n  this._d = 0xa54ff53a\n  this._e = 0x510e527f\n  this._f = 0x9b05688c\n  this._g = 0x1f83d9ab\n  this._h = 0x5be0cd19\n\n  return this\n}\n\nfunction ch (x, y, z) {\n  return z ^ (x & (y ^ z))\n}\n\nfunction maj (x, y, z) {\n  return (x & y) | (z & (x | y))\n}\n\nfunction sigma0 (x) {\n  return (x >>> 2 | x << 30) ^ (x >>> 13 | x << 19) ^ (x >>> 22 | x << 10)\n}\n\nfunction sigma1 (x) {\n  return (x >>> 6 | x << 26) ^ (x >>> 11 | x << 21) ^ (x >>> 25 | x << 7)\n}\n\nfunction gamma0 (x) {\n  return (x >>> 7 | x << 25) ^ (x >>> 18 | x << 14) ^ (x >>> 3)\n}\n\nfunction gamma1 (x) {\n  return (x >>> 17 | x << 15) ^ (x >>> 19 | x << 13) ^ (x >>> 10)\n}\n\nSha256.prototype._update = function (M) {\n  var W = this._w\n\n  var a = this._a | 0\n  var b = this._b | 0\n  var c = this._c | 0\n  var d = this._d | 0\n  var e = this._e | 0\n  var f = this._f | 0\n  var g = this._g | 0\n  var h = this._h | 0\n\n  for (var i = 0; i < 16; ++i) W[i] = M.readInt32BE(i * 4)\n  for (; i < 64; ++i) W[i] = (gamma1(W[i - 2]) + W[i - 7] + gamma0(W[i - 15]) + W[i - 16]) | 0\n\n  for (var j = 0; j < 64; ++j) {\n    var T1 = (h + sigma1(e) + ch(e, f, g) + K[j] + W[j]) | 0\n    var T2 = (sigma0(a) + maj(a, b, c)) | 0\n\n    h = g\n    g = f\n    f = e\n    e = (d + T1) | 0\n    d = c\n    c = b\n    b = a\n    a = (T1 + T2) | 0\n  }\n\n  this._a = (a + this._a) | 0\n  this._b = (b + this._b) | 0\n  this._c = (c + this._c) | 0\n  this._d = (d + this._d) | 0\n  this._e = (e + this._e) | 0\n  this._f = (f + this._f) | 0\n  this._g = (g + this._g) | 0\n  this._h = (h + this._h) | 0\n}\n\nSha256.prototype._hash = function () {\n  var H = Buffer.allocUnsafe(32)\n\n  H.writeInt32BE(this._a, 0)\n  H.writeInt32BE(this._b, 4)\n  H.writeInt32BE(this._c, 8)\n  H.writeInt32BE(this._d, 12)\n  H.writeInt32BE(this._e, 16)\n  H.writeInt32BE(this._f, 20)\n  H.writeInt32BE(this._g, 24)\n  H.writeInt32BE(this._h, 28)\n\n  return H\n}\n\nmodule.exports = Sha256\n","var inherits = require('inherits')\nvar SHA512 = require('./sha512')\nvar Hash = require('./hash')\nvar Buffer = require('safe-buffer').Buffer\n\nvar W = new Array(160)\n\nfunction Sha384 () {\n  this.init()\n  this._w = W\n\n  Hash.call(this, 128, 112)\n}\n\ninherits(Sha384, SHA512)\n\nSha384.prototype.init = function () {\n  this._ah = 0xcbbb9d5d\n  this._bh = 0x629a292a\n  this._ch = 0x9159015a\n  this._dh = 0x152fecd8\n  this._eh = 0x67332667\n  this._fh = 0x8eb44a87\n  this._gh = 0xdb0c2e0d\n  this._hh = 0x47b5481d\n\n  this._al = 0xc1059ed8\n  this._bl = 0x367cd507\n  this._cl = 0x3070dd17\n  this._dl = 0xf70e5939\n  this._el = 0xffc00b31\n  this._fl = 0x68581511\n  this._gl = 0x64f98fa7\n  this._hl = 0xbefa4fa4\n\n  return this\n}\n\nSha384.prototype._hash = function () {\n  var H = Buffer.allocUnsafe(48)\n\n  function writeInt64BE (h, l, offset) {\n    H.writeInt32BE(h, offset)\n    H.writeInt32BE(l, offset + 4)\n  }\n\n  writeInt64BE(this._ah, this._al, 0)\n  writeInt64BE(this._bh, this._bl, 8)\n  writeInt64BE(this._ch, this._cl, 16)\n  writeInt64BE(this._dh, this._dl, 24)\n  writeInt64BE(this._eh, this._el, 32)\n  writeInt64BE(this._fh, this._fl, 40)\n\n  return H\n}\n\nmodule.exports = Sha384\n","var inherits = require('inherits')\nvar Hash = require('./hash')\nvar Buffer = require('safe-buffer').Buffer\n\nvar K = [\n  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,\n  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,\n  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,\n  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,\n  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,\n  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,\n  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,\n  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,\n  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,\n  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,\n  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,\n  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,\n  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,\n  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,\n  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,\n  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,\n  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,\n  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,\n  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,\n  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,\n  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,\n  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,\n  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,\n  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,\n  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,\n  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,\n  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,\n  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,\n  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,\n  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,\n  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,\n  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,\n  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,\n  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,\n  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,\n  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,\n  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,\n  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,\n  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,\n  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817\n]\n\nvar W = new Array(160)\n\nfunction Sha512 () {\n  this.init()\n  this._w = W\n\n  Hash.call(this, 128, 112)\n}\n\ninherits(Sha512, Hash)\n\nSha512.prototype.init = function () {\n  this._ah = 0x6a09e667\n  this._bh = 0xbb67ae85\n  this._ch = 0x3c6ef372\n  this._dh = 0xa54ff53a\n  this._eh = 0x510e527f\n  this._fh = 0x9b05688c\n  this._gh = 0x1f83d9ab\n  this._hh = 0x5be0cd19\n\n  this._al = 0xf3bcc908\n  this._bl = 0x84caa73b\n  this._cl = 0xfe94f82b\n  this._dl = 0x5f1d36f1\n  this._el = 0xade682d1\n  this._fl = 0x2b3e6c1f\n  this._gl = 0xfb41bd6b\n  this._hl = 0x137e2179\n\n  return this\n}\n\nfunction Ch (x, y, z) {\n  return z ^ (x & (y ^ z))\n}\n\nfunction maj (x, y, z) {\n  return (x & y) | (z & (x | y))\n}\n\nfunction sigma0 (x, xl) {\n  return (x >>> 28 | xl << 4) ^ (xl >>> 2 | x << 30) ^ (xl >>> 7 | x << 25)\n}\n\nfunction sigma1 (x, xl) {\n  return (x >>> 14 | xl << 18) ^ (x >>> 18 | xl << 14) ^ (xl >>> 9 | x << 23)\n}\n\nfunction Gamma0 (x, xl) {\n  return (x >>> 1 | xl << 31) ^ (x >>> 8 | xl << 24) ^ (x >>> 7)\n}\n\nfunction Gamma0l (x, xl) {\n  return (x >>> 1 | xl << 31) ^ (x >>> 8 | xl << 24) ^ (x >>> 7 | xl << 25)\n}\n\nfunction Gamma1 (x, xl) {\n  return (x >>> 19 | xl << 13) ^ (xl >>> 29 | x << 3) ^ (x >>> 6)\n}\n\nfunction Gamma1l (x, xl) {\n  return (x >>> 19 | xl << 13) ^ (xl >>> 29 | x << 3) ^ (x >>> 6 | xl << 26)\n}\n\nfunction getCarry (a, b) {\n  return (a >>> 0) < (b >>> 0) ? 1 : 0\n}\n\nSha512.prototype._update = function (M) {\n  var W = this._w\n\n  var ah = this._ah | 0\n  var bh = this._bh | 0\n  var ch = this._ch | 0\n  var dh = this._dh | 0\n  var eh = this._eh | 0\n  var fh = this._fh | 0\n  var gh = this._gh | 0\n  var hh = this._hh | 0\n\n  var al = this._al | 0\n  var bl = this._bl | 0\n  var cl = this._cl | 0\n  var dl = this._dl | 0\n  var el = this._el | 0\n  var fl = this._fl | 0\n  var gl = this._gl | 0\n  var hl = this._hl | 0\n\n  for (var i = 0; i < 32; i += 2) {\n    W[i] = M.readInt32BE(i * 4)\n    W[i + 1] = M.readInt32BE(i * 4 + 4)\n  }\n  for (; i < 160; i += 2) {\n    var xh = W[i - 15 * 2]\n    var xl = W[i - 15 * 2 + 1]\n    var gamma0 = Gamma0(xh, xl)\n    var gamma0l = Gamma0l(xl, xh)\n\n    xh = W[i - 2 * 2]\n    xl = W[i - 2 * 2 + 1]\n    var gamma1 = Gamma1(xh, xl)\n    var gamma1l = Gamma1l(xl, xh)\n\n    // W[i] = gamma0 + W[i - 7] + gamma1 + W[i - 16]\n    var Wi7h = W[i - 7 * 2]\n    var Wi7l = W[i - 7 * 2 + 1]\n\n    var Wi16h = W[i - 16 * 2]\n    var Wi16l = W[i - 16 * 2 + 1]\n\n    var Wil = (gamma0l + Wi7l) | 0\n    var Wih = (gamma0 + Wi7h + getCarry(Wil, gamma0l)) | 0\n    Wil = (Wil + gamma1l) | 0\n    Wih = (Wih + gamma1 + getCarry(Wil, gamma1l)) | 0\n    Wil = (Wil + Wi16l) | 0\n    Wih = (Wih + Wi16h + getCarry(Wil, Wi16l)) | 0\n\n    W[i] = Wih\n    W[i + 1] = Wil\n  }\n\n  for (var j = 0; j < 160; j += 2) {\n    Wih = W[j]\n    Wil = W[j + 1]\n\n    var majh = maj(ah, bh, ch)\n    var majl = maj(al, bl, cl)\n\n    var sigma0h = sigma0(ah, al)\n    var sigma0l = sigma0(al, ah)\n    var sigma1h = sigma1(eh, el)\n    var sigma1l = sigma1(el, eh)\n\n    // t1 = h + sigma1 + ch + K[j] + W[j]\n    var Kih = K[j]\n    var Kil = K[j + 1]\n\n    var chh = Ch(eh, fh, gh)\n    var chl = Ch(el, fl, gl)\n\n    var t1l = (hl + sigma1l) | 0\n    var t1h = (hh + sigma1h + getCarry(t1l, hl)) | 0\n    t1l = (t1l + chl) | 0\n    t1h = (t1h + chh + getCarry(t1l, chl)) | 0\n    t1l = (t1l + Kil) | 0\n    t1h = (t1h + Kih + getCarry(t1l, Kil)) | 0\n    t1l = (t1l + Wil) | 0\n    t1h = (t1h + Wih + getCarry(t1l, Wil)) | 0\n\n    // t2 = sigma0 + maj\n    var t2l = (sigma0l + majl) | 0\n    var t2h = (sigma0h + majh + getCarry(t2l, sigma0l)) | 0\n\n    hh = gh\n    hl = gl\n    gh = fh\n    gl = fl\n    fh = eh\n    fl = el\n    el = (dl + t1l) | 0\n    eh = (dh + t1h + getCarry(el, dl)) | 0\n    dh = ch\n    dl = cl\n    ch = bh\n    cl = bl\n    bh = ah\n    bl = al\n    al = (t1l + t2l) | 0\n    ah = (t1h + t2h + getCarry(al, t1l)) | 0\n  }\n\n  this._al = (this._al + al) | 0\n  this._bl = (this._bl + bl) | 0\n  this._cl = (this._cl + cl) | 0\n  this._dl = (this._dl + dl) | 0\n  this._el = (this._el + el) | 0\n  this._fl = (this._fl + fl) | 0\n  this._gl = (this._gl + gl) | 0\n  this._hl = (this._hl + hl) | 0\n\n  this._ah = (this._ah + ah + getCarry(this._al, al)) | 0\n  this._bh = (this._bh + bh + getCarry(this._bl, bl)) | 0\n  this._ch = (this._ch + ch + getCarry(this._cl, cl)) | 0\n  this._dh = (this._dh + dh + getCarry(this._dl, dl)) | 0\n  this._eh = (this._eh + eh + getCarry(this._el, el)) | 0\n  this._fh = (this._fh + fh + getCarry(this._fl, fl)) | 0\n  this._gh = (this._gh + gh + getCarry(this._gl, gl)) | 0\n  this._hh = (this._hh + hh + getCarry(this._hl, hl)) | 0\n}\n\nSha512.prototype._hash = function () {\n  var H = Buffer.allocUnsafe(64)\n\n  function writeInt64BE (h, l, offset) {\n    H.writeInt32BE(h, offset)\n    H.writeInt32BE(l, offset + 4)\n  }\n\n  writeInt64BE(this._ah, this._al, 0)\n  writeInt64BE(this._bh, this._bl, 8)\n  writeInt64BE(this._ch, this._cl, 16)\n  writeInt64BE(this._dh, this._dl, 24)\n  writeInt64BE(this._eh, this._el, 32)\n  writeInt64BE(this._fh, this._fl, 40)\n  writeInt64BE(this._gh, this._gl, 48)\n  writeInt64BE(this._hh, this._hl, 56)\n\n  return H\n}\n\nmodule.exports = Sha512\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nmodule.exports = Stream;\n\nvar EE = require('events').EventEmitter;\nvar inherits = require('inherits');\n\ninherits(Stream, EE);\nStream.Readable = require('readable-stream/readable.js');\nStream.Writable = require('readable-stream/writable.js');\nStream.Duplex = require('readable-stream/duplex.js');\nStream.Transform = require('readable-stream/transform.js');\nStream.PassThrough = require('readable-stream/passthrough.js');\n\n// Backwards-compat with node 0.4.x\nStream.Stream = Stream;\n\n\n\n// old-style streams.  Note that the pipe method (the only relevant\n// part of this class) is overridden in the Readable class.\n\nfunction Stream() {\n  EE.call(this);\n}\n\nStream.prototype.pipe = function(dest, options) {\n  var source = this;\n\n  function ondata(chunk) {\n    if (dest.writable) {\n      if (false === dest.write(chunk) && source.pause) {\n        source.pause();\n      }\n    }\n  }\n\n  source.on('data', ondata);\n\n  function ondrain() {\n    if (source.readable && source.resume) {\n      source.resume();\n    }\n  }\n\n  dest.on('drain', ondrain);\n\n  // If the 'end' option is not supplied, dest.end() will be called when\n  // source gets the 'end' or 'close' events.  Only dest.end() once.\n  if (!dest._isStdio && (!options || options.end !== false)) {\n    source.on('end', onend);\n    source.on('close', onclose);\n  }\n\n  var didOnEnd = false;\n  function onend() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n\n    dest.end();\n  }\n\n\n  function onclose() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n\n    if (typeof dest.destroy === 'function') dest.destroy();\n  }\n\n  // don't leave dangling pipes when there are errors.\n  function onerror(er) {\n    cleanup();\n    if (EE.listenerCount(this, 'error') === 0) {\n      throw er; // Unhandled stream error in pipe.\n    }\n  }\n\n  source.on('error', onerror);\n  dest.on('error', onerror);\n\n  // remove all the event listeners that were added.\n  function cleanup() {\n    source.removeListener('data', ondata);\n    dest.removeListener('drain', ondrain);\n\n    source.removeListener('end', onend);\n    source.removeListener('close', onclose);\n\n    source.removeListener('error', onerror);\n    dest.removeListener('error', onerror);\n\n    source.removeListener('end', cleanup);\n    source.removeListener('close', cleanup);\n\n    dest.removeListener('close', cleanup);\n  }\n\n  source.on('end', cleanup);\n  source.on('close', cleanup);\n\n  dest.on('close', cleanup);\n\n  dest.emit('pipe', source);\n\n  // Allow for unix-like usage: A.pipe(B).pipe(C)\n  return dest;\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n/*<replacement>*/\n\nvar Buffer = require('safe-buffer').Buffer;\n/*</replacement>*/\n\nvar isEncoding = Buffer.isEncoding || function (encoding) {\n  encoding = '' + encoding;\n  switch (encoding && encoding.toLowerCase()) {\n    case 'hex':case 'utf8':case 'utf-8':case 'ascii':case 'binary':case 'base64':case 'ucs2':case 'ucs-2':case 'utf16le':case 'utf-16le':case 'raw':\n      return true;\n    default:\n      return false;\n  }\n};\n\nfunction _normalizeEncoding(enc) {\n  if (!enc) return 'utf8';\n  var retried;\n  while (true) {\n    switch (enc) {\n      case 'utf8':\n      case 'utf-8':\n        return 'utf8';\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return 'utf16le';\n      case 'latin1':\n      case 'binary':\n        return 'latin1';\n      case 'base64':\n      case 'ascii':\n      case 'hex':\n        return enc;\n      default:\n        if (retried) return; // undefined\n        enc = ('' + enc).toLowerCase();\n        retried = true;\n    }\n  }\n};\n\n// Do not cache `Buffer.isEncoding` when checking encoding names as some\n// modules monkey-patch it to support additional encodings\nfunction normalizeEncoding(enc) {\n  var nenc = _normalizeEncoding(enc);\n  if (typeof nenc !== 'string' && (Buffer.isEncoding === isEncoding || !isEncoding(enc))) throw new Error('Unknown encoding: ' + enc);\n  return nenc || enc;\n}\n\n// StringDecoder provides an interface for efficiently splitting a series of\n// buffers into a series of JS strings without breaking apart multi-byte\n// characters.\nexports.StringDecoder = StringDecoder;\nfunction StringDecoder(encoding) {\n  this.encoding = normalizeEncoding(encoding);\n  var nb;\n  switch (this.encoding) {\n    case 'utf16le':\n      this.text = utf16Text;\n      this.end = utf16End;\n      nb = 4;\n      break;\n    case 'utf8':\n      this.fillLast = utf8FillLast;\n      nb = 4;\n      break;\n    case 'base64':\n      this.text = base64Text;\n      this.end = base64End;\n      nb = 3;\n      break;\n    default:\n      this.write = simpleWrite;\n      this.end = simpleEnd;\n      return;\n  }\n  this.lastNeed = 0;\n  this.lastTotal = 0;\n  this.lastChar = Buffer.allocUnsafe(nb);\n}\n\nStringDecoder.prototype.write = function (buf) {\n  if (buf.length === 0) return '';\n  var r;\n  var i;\n  if (this.lastNeed) {\n    r = this.fillLast(buf);\n    if (r === undefined) return '';\n    i = this.lastNeed;\n    this.lastNeed = 0;\n  } else {\n    i = 0;\n  }\n  if (i < buf.length) return r ? r + this.text(buf, i) : this.text(buf, i);\n  return r || '';\n};\n\nStringDecoder.prototype.end = utf8End;\n\n// Returns only complete characters in a Buffer\nStringDecoder.prototype.text = utf8Text;\n\n// Attempts to complete a partial non-UTF-8 character using bytes from a Buffer\nStringDecoder.prototype.fillLast = function (buf) {\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, buf.length);\n  this.lastNeed -= buf.length;\n};\n\n// Checks the type of a UTF-8 byte, whether it's ASCII, a leading byte, or a\n// continuation byte. If an invalid byte is detected, -2 is returned.\nfunction utf8CheckByte(byte) {\n  if (byte <= 0x7F) return 0;else if (byte >> 5 === 0x06) return 2;else if (byte >> 4 === 0x0E) return 3;else if (byte >> 3 === 0x1E) return 4;\n  return byte >> 6 === 0x02 ? -1 : -2;\n}\n\n// Checks at most 3 bytes at the end of a Buffer in order to detect an\n// incomplete multi-byte UTF-8 character. The total number of bytes (2, 3, or 4)\n// needed to complete the UTF-8 character (if applicable) are returned.\nfunction utf8CheckIncomplete(self, buf, i) {\n  var j = buf.length - 1;\n  if (j < i) return 0;\n  var nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 1;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 2;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) {\n      if (nb === 2) nb = 0;else self.lastNeed = nb - 3;\n    }\n    return nb;\n  }\n  return 0;\n}\n\n// Validates as many continuation bytes for a multi-byte UTF-8 character as\n// needed or are available. If we see a non-continuation byte where we expect\n// one, we \"replace\" the validated continuation bytes we've seen so far with\n// a single UTF-8 replacement character ('\\ufffd'), to match v8's UTF-8 decoding\n// behavior. The continuation byte check is included three times in the case\n// where all of the continuation bytes for a character exist in the same buffer.\n// It is also done this way as a slight performance increase instead of using a\n// loop.\nfunction utf8CheckExtraBytes(self, buf, p) {\n  if ((buf[0] & 0xC0) !== 0x80) {\n    self.lastNeed = 0;\n    return '\\ufffd';\n  }\n  if (self.lastNeed > 1 && buf.length > 1) {\n    if ((buf[1] & 0xC0) !== 0x80) {\n      self.lastNeed = 1;\n      return '\\ufffd';\n    }\n    if (self.lastNeed > 2 && buf.length > 2) {\n      if ((buf[2] & 0xC0) !== 0x80) {\n        self.lastNeed = 2;\n        return '\\ufffd';\n      }\n    }\n  }\n}\n\n// Attempts to complete a multi-byte UTF-8 character using bytes from a Buffer.\nfunction utf8FillLast(buf) {\n  var p = this.lastTotal - this.lastNeed;\n  var r = utf8CheckExtraBytes(this, buf, p);\n  if (r !== undefined) return r;\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, p, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, p, 0, buf.length);\n  this.lastNeed -= buf.length;\n}\n\n// Returns all complete UTF-8 characters in a Buffer. If the Buffer ended on a\n// partial character, the character's bytes are buffered until the required\n// number of bytes are available.\nfunction utf8Text(buf, i) {\n  var total = utf8CheckIncomplete(this, buf, i);\n  if (!this.lastNeed) return buf.toString('utf8', i);\n  this.lastTotal = total;\n  var end = buf.length - (total - this.lastNeed);\n  buf.copy(this.lastChar, 0, end);\n  return buf.toString('utf8', i, end);\n}\n\n// For UTF-8, a replacement character is added when ending on a partial\n// character.\nfunction utf8End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + '\\ufffd';\n  return r;\n}\n\n// UTF-16LE typically needs two bytes per character, but even if we have an even\n// number of bytes available, we need to check if we end on a leading/high\n// surrogate. In that case, we need to wait for the next two bytes in order to\n// decode the last character properly.\nfunction utf16Text(buf, i) {\n  if ((buf.length - i) % 2 === 0) {\n    var r = buf.toString('utf16le', i);\n    if (r) {\n      var c = r.charCodeAt(r.length - 1);\n      if (c >= 0xD800 && c <= 0xDBFF) {\n        this.lastNeed = 2;\n        this.lastTotal = 4;\n        this.lastChar[0] = buf[buf.length - 2];\n        this.lastChar[1] = buf[buf.length - 1];\n        return r.slice(0, -1);\n      }\n    }\n    return r;\n  }\n  this.lastNeed = 1;\n  this.lastTotal = 2;\n  this.lastChar[0] = buf[buf.length - 1];\n  return buf.toString('utf16le', i, buf.length - 1);\n}\n\n// For UTF-16LE we do not explicitly append special replacement characters if we\n// end on a partial character, we simply let v8 handle that.\nfunction utf16End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) {\n    var end = this.lastTotal - this.lastNeed;\n    return r + this.lastChar.toString('utf16le', 0, end);\n  }\n  return r;\n}\n\nfunction base64Text(buf, i) {\n  var n = (buf.length - i) % 3;\n  if (n === 0) return buf.toString('base64', i);\n  this.lastNeed = 3 - n;\n  this.lastTotal = 3;\n  if (n === 1) {\n    this.lastChar[0] = buf[buf.length - 1];\n  } else {\n    this.lastChar[0] = buf[buf.length - 2];\n    this.lastChar[1] = buf[buf.length - 1];\n  }\n  return buf.toString('base64', i, buf.length - n);\n}\n\nfunction base64End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + this.lastChar.toString('base64', 0, 3 - this.lastNeed);\n  return r;\n}\n\n// Pass bytes on through for single-byte encodings (e.g. ascii, latin1, hex)\nfunction simpleWrite(buf) {\n  return buf.toString(this.encoding);\n}\n\nfunction simpleEnd(buf) {\n  return buf && buf.length ? this.write(buf) : '';\n}","var scope = (typeof global !== \"undefined\" && global) ||\n            (typeof self !== \"undefined\" && self) ||\n            window;\nvar apply = Function.prototype.apply;\n\n// DOM APIs, for completeness\n\nexports.setTimeout = function() {\n  return new Timeout(apply.call(setTimeout, scope, arguments), clearTimeout);\n};\nexports.setInterval = function() {\n  return new Timeout(apply.call(setInterval, scope, arguments), clearInterval);\n};\nexports.clearTimeout =\nexports.clearInterval = function(timeout) {\n  if (timeout) {\n    timeout.close();\n  }\n};\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\nTimeout.prototype.close = function() {\n  this._clearFn.call(scope, this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll = function(item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function(item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function(item) {\n  clearTimeout(item._idleTimeoutId);\n\n  var msecs = item._idleTimeout;\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout)\n        item._onTimeout();\n    }, msecs);\n  }\n};\n\n// setimmediate attaches itself to the global object\nrequire(\"setimmediate\");\n// On some exotic environments, it's not clear which object `setimmediate` was\n// able to install onto.  Search each possibility in the same order as the\n// `setimmediate` library.\nexports.setImmediate = (typeof self !== \"undefined\" && self.setImmediate) ||\n                       (typeof global !== \"undefined\" && global.setImmediate) ||\n                       (this && this.setImmediate);\nexports.clearImmediate = (typeof self !== \"undefined\" && self.clearImmediate) ||\n                         (typeof global !== \"undefined\" && global.clearImmediate) ||\n                         (this && this.clearImmediate);\n","const BN = require('bn.js')\nconst EC = require('elliptic').ec\nconst secp256k1 = new EC('secp256k1')\nconst deterministicGenerateK = require('./rfc6979')\n\nconst ZERO32 = Buffer.alloc(32, 0)\nconst EC_GROUP_ORDER = Buffer.from('fffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141', 'hex')\nconst EC_P = Buffer.from('fffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f', 'hex')\n\nconst n = secp256k1.curve.n\nconst nDiv2 = n.shrn(1)\nconst G = secp256k1.curve.g\n\nconst THROW_BAD_PRIVATE = 'Expected Private'\nconst THROW_BAD_POINT = 'Expected Point'\nconst THROW_BAD_TWEAK = 'Expected Tweak'\nconst THROW_BAD_HASH = 'Expected Hash'\nconst THROW_BAD_SIGNATURE = 'Expected Signature'\nconst THROW_BAD_EXTRA_DATA = 'Expected Extra Data (32 bytes)'\n\nfunction isScalar (x) {\n  return Buffer.isBuffer(x) && x.length === 32\n}\n\nfunction isOrderScalar (x) {\n  if (!isScalar(x)) return false\n  return x.compare(EC_GROUP_ORDER) < 0 // < G\n}\n\nfunction isPoint (p) {\n  if (!Buffer.isBuffer(p)) return false\n  if (p.length < 33) return false\n\n  const t = p[0]\n  const x = p.slice(1, 33)\n  if (x.compare(ZERO32) === 0) return false\n  if (x.compare(EC_P) >= 0) return false\n  if ((t === 0x02 || t === 0x03) && p.length === 33) {\n    try { decodeFrom(p) } catch (e) { return false } // TODO: temporary\n    return true\n  }\n\n  const y = p.slice(33)\n  if (y.compare(ZERO32) === 0) return false\n  if (y.compare(EC_P) >= 0) return false\n  if (t === 0x04 && p.length === 65) return true\n  return false\n}\n\nfunction __isPointCompressed (p) {\n  return p[0] !== 0x04\n}\n\nfunction isPointCompressed (p) {\n  if (!isPoint(p)) return false\n  return __isPointCompressed(p)\n}\n\nfunction isPrivate (x) {\n  if (!isScalar(x)) return false\n  return x.compare(ZERO32) > 0 && // > 0\n    x.compare(EC_GROUP_ORDER) < 0 // < G\n}\n\nfunction isSignature (value) {\n  const r = value.slice(0, 32)\n  const s = value.slice(32, 64)\n  return Buffer.isBuffer(value) && value.length === 64 &&\n    r.compare(EC_GROUP_ORDER) < 0 &&\n    s.compare(EC_GROUP_ORDER) < 0\n}\n\nfunction assumeCompression (value, pubkey) {\n  if (value === undefined && pubkey !== undefined) return __isPointCompressed(pubkey)\n  if (value === undefined) return true\n  return value\n}\n\nfunction fromBuffer (d) { return new BN(d) }\nfunction toBuffer (d) { return d.toArrayLike(Buffer, 'be', 32) }\nfunction decodeFrom (P) { return secp256k1.curve.decodePoint(P) }\nfunction getEncoded (P, compressed) { return Buffer.from(P._encode(compressed)) }\n\nfunction pointAdd (pA, pB, __compressed) {\n  if (!isPoint(pA)) throw new TypeError(THROW_BAD_POINT)\n  if (!isPoint(pB)) throw new TypeError(THROW_BAD_POINT)\n\n  const a = decodeFrom(pA)\n  const b = decodeFrom(pB)\n  const pp = a.add(b)\n  if (pp.isInfinity()) return null\n\n  const compressed = assumeCompression(__compressed, pA)\n  return getEncoded(pp, compressed)\n}\n\nfunction pointAddScalar (p, tweak, __compressed) {\n  if (!isPoint(p)) throw new TypeError(THROW_BAD_POINT)\n  if (!isOrderScalar(tweak)) throw new TypeError(THROW_BAD_TWEAK)\n\n  const compressed = assumeCompression(__compressed, p)\n  const pp = decodeFrom(p)\n  if (tweak.compare(ZERO32) === 0) return getEncoded(pp, compressed)\n\n  const tt = fromBuffer(tweak)\n  const qq = G.mul(tt)\n  const uu = pp.add(qq)\n  if (uu.isInfinity()) return null\n\n  return getEncoded(uu, compressed)\n}\n\nfunction pointCompress (p, compressed) {\n  if (!isPoint(p)) throw new TypeError(THROW_BAD_POINT)\n\n  const pp = decodeFrom(p)\n  if (pp.isInfinity()) throw new TypeError(THROW_BAD_POINT)\n\n  return getEncoded(pp, compressed)\n}\n\nfunction pointFromScalar (d, __compressed) {\n  if (!isPrivate(d)) throw new TypeError(THROW_BAD_PRIVATE)\n\n  const dd = fromBuffer(d)\n  const pp = G.mul(dd)\n  if (pp.isInfinity()) return null\n\n  const compressed = assumeCompression(__compressed)\n  return getEncoded(pp, compressed)\n}\n\nfunction pointMultiply (p, tweak, __compressed) {\n  if (!isPoint(p)) throw new TypeError(THROW_BAD_POINT)\n  if (!isOrderScalar(tweak)) throw new TypeError(THROW_BAD_TWEAK)\n\n  const compressed = assumeCompression(__compressed, p)\n  const pp = decodeFrom(p)\n  const tt = fromBuffer(tweak)\n  const qq = pp.mul(tt)\n  if (qq.isInfinity()) return null\n\n  return getEncoded(qq, compressed)\n}\n\nfunction privateAdd (d, tweak) {\n  if (!isPrivate(d)) throw new TypeError(THROW_BAD_PRIVATE)\n  if (!isOrderScalar(tweak)) throw new TypeError(THROW_BAD_TWEAK)\n\n  const dd = fromBuffer(d)\n  const tt = fromBuffer(tweak)\n  const dt = toBuffer(dd.add(tt).umod(n))\n  if (!isPrivate(dt)) return null\n\n  return dt\n}\n\nfunction privateSub (d, tweak) {\n  if (!isPrivate(d)) throw new TypeError(THROW_BAD_PRIVATE)\n  if (!isOrderScalar(tweak)) throw new TypeError(THROW_BAD_TWEAK)\n\n  const dd = fromBuffer(d)\n  const tt = fromBuffer(tweak)\n  const dt = toBuffer(dd.sub(tt).umod(n))\n  if (!isPrivate(dt)) return null\n\n  return dt\n}\n\nfunction sign (hash, x) {\n  return __sign(hash, x)\n}\n\nfunction signWithEntropy (hash, x, addData) {\n  return __sign(hash, x, addData)\n}\n\nfunction __sign (hash, x, addData) {\n  if (!isScalar(hash)) throw new TypeError(THROW_BAD_HASH)\n  if (!isPrivate(x)) throw new TypeError(THROW_BAD_PRIVATE)\n  if (addData !== undefined && !isScalar(addData)) throw new TypeError(THROW_BAD_EXTRA_DATA)\n\n  const d = fromBuffer(x)\n  const e = fromBuffer(hash)\n\n  let r, s\n  const checkSig = function (k) {\n    const kI = fromBuffer(k)\n    const Q = G.mul(kI)\n\n    if (Q.isInfinity()) return false\n\n    r = Q.x.umod(n)\n    if (r.isZero() === 0) return false\n\n    s = kI\n      .invm(n)\n      .mul(e.add(d.mul(r)))\n      .umod(n)\n    if (s.isZero() === 0) return false\n\n    return true\n  }\n\n  deterministicGenerateK(hash, x, checkSig, isPrivate, addData)\n\n  // enforce low S values, see bip62: 'low s values in signatures'\n  if (s.cmp(nDiv2) > 0) {\n    s = n.sub(s)\n  }\n\n  const buffer = Buffer.allocUnsafe(64)\n  toBuffer(r).copy(buffer, 0)\n  toBuffer(s).copy(buffer, 32)\n  return buffer\n}\n\nfunction verify (hash, q, signature) {\n  if (!isScalar(hash)) throw new TypeError(THROW_BAD_HASH)\n  if (!isPoint(q)) throw new TypeError(THROW_BAD_POINT)\n\n  // 1.4.1 Enforce r and s are both integers in the interval [1, n − 1] (1, isSignature enforces '< n - 1')\n  if (!isSignature(signature)) throw new TypeError(THROW_BAD_SIGNATURE)\n\n  const Q = decodeFrom(q)\n  const r = fromBuffer(signature.slice(0, 32))\n  const s = fromBuffer(signature.slice(32, 64))\n\n  // 1.4.1 Enforce r and s are both integers in the interval [1, n − 1] (2, enforces '> 0')\n  if (r.gtn(0) <= 0 /* || r.compareTo(n) >= 0 */) return false\n  if (s.gtn(0) <= 0 /* || s.compareTo(n) >= 0 */) return false\n\n  // 1.4.2 H = Hash(M), already done by the user\n  // 1.4.3 e = H\n  const e = fromBuffer(hash)\n\n  // Compute s^-1\n  const sInv = s.invm(n)\n\n  // 1.4.4 Compute u1 = es^−1 mod n\n  //               u2 = rs^−1 mod n\n  const u1 = e.mul(sInv).umod(n)\n  const u2 = r.mul(sInv).umod(n)\n\n  // 1.4.5 Compute R = (xR, yR)\n  //               R = u1G + u2Q\n  const R = G.mulAdd(u1, Q, u2)\n\n  // 1.4.5 (cont.) Enforce R is not at infinity\n  if (R.isInfinity()) return false\n\n  // 1.4.6 Convert the field element R.x to an integer\n  const xR = R.x\n\n  // 1.4.7 Set v = xR mod n\n  const v = xR.umod(n)\n\n  // 1.4.8 If v = r, output \"valid\", and if v != r, output \"invalid\"\n  return v.eq(r)\n}\n\nmodule.exports = {\n  isPoint,\n  isPointCompressed,\n  isPrivate,\n  pointAdd,\n  pointAddScalar,\n  pointCompress,\n  pointFromScalar,\n  pointMultiply,\n  privateAdd,\n  privateSub,\n  sign,\n  signWithEntropy,\n  verify\n}\n","const createHmac = require('create-hmac')\n\nconst ONE1 = Buffer.alloc(1, 1)\nconst ZERO1 = Buffer.alloc(1, 0)\n\n// https://tools.ietf.org/html/rfc6979#section-3.2\nfunction deterministicGenerateK (hash, x, checkSig, isPrivate, extraEntropy) {\n  // Step A, ignored as hash already provided\n  // Step B\n  // Step C\n  let k = Buffer.alloc(32, 0)\n  let v = Buffer.alloc(32, 1)\n\n  // Step D\n  k = createHmac('sha256', k)\n    .update(v)\n    .update(ZERO1)\n    .update(x)\n    .update(hash)\n    .update(extraEntropy || '')\n    .digest()\n\n  // Step E\n  v = createHmac('sha256', k).update(v).digest()\n\n  // Step F\n  k = createHmac('sha256', k)\n    .update(v)\n    .update(ONE1)\n    .update(x)\n    .update(hash)\n    .update(extraEntropy || '')\n    .digest()\n\n  // Step G\n  v = createHmac('sha256', k).update(v).digest()\n\n  // Step H1/H2a, ignored as tlen === qlen (256 bit)\n  // Step H2b\n  v = createHmac('sha256', k).update(v).digest()\n\n  let T = v\n\n  // Step H3, repeat until T is within the interval [1, n - 1] and is suitable for ECDSA\n  while (!isPrivate(T) || !checkSig(T)) {\n    k = createHmac('sha256', k)\n      .update(v)\n      .update(ZERO1)\n      .digest()\n\n    v = createHmac('sha256', k).update(v).digest()\n\n    // Step H1/H2a, again, ignored as tlen === qlen (256 bit)\n    // Step H2b again\n    v = createHmac('sha256', k).update(v).digest()\n    T = v\n  }\n\n  return T\n}\n\nmodule.exports = deterministicGenerateK\n","var native = require('./native')\n\nfunction getTypeName (fn) {\n  return fn.name || fn.toString().match(/function (.*?)\\s*\\(/)[1]\n}\n\nfunction getValueTypeName (value) {\n  return native.Nil(value) ? '' : getTypeName(value.constructor)\n}\n\nfunction getValue (value) {\n  if (native.Function(value)) return ''\n  if (native.String(value)) return JSON.stringify(value)\n  if (value && native.Object(value)) return ''\n  return value\n}\n\nfunction captureStackTrace (e, t) {\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(e, t)\n  }\n}\n\nfunction tfJSON (type) {\n  if (native.Function(type)) return type.toJSON ? type.toJSON() : getTypeName(type)\n  if (native.Array(type)) return 'Array'\n  if (type && native.Object(type)) return 'Object'\n\n  return type !== undefined ? type : ''\n}\n\nfunction tfErrorString (type, value, valueTypeName) {\n  var valueJson = getValue(value)\n\n  return 'Expected ' + tfJSON(type) + ', got' +\n    (valueTypeName !== '' ? ' ' + valueTypeName : '') +\n    (valueJson !== '' ? ' ' + valueJson : '')\n}\n\nfunction TfTypeError (type, value, valueTypeName) {\n  valueTypeName = valueTypeName || getValueTypeName(value)\n  this.message = tfErrorString(type, value, valueTypeName)\n\n  captureStackTrace(this, TfTypeError)\n  this.__type = type\n  this.__value = value\n  this.__valueTypeName = valueTypeName\n}\n\nTfTypeError.prototype = Object.create(Error.prototype)\nTfTypeError.prototype.constructor = TfTypeError\n\nfunction tfPropertyErrorString (type, label, name, value, valueTypeName) {\n  var description = '\" of type '\n  if (label === 'key') description = '\" with key type '\n\n  return tfErrorString('property \"' + tfJSON(name) + description + tfJSON(type), value, valueTypeName)\n}\n\nfunction TfPropertyTypeError (type, property, label, value, valueTypeName) {\n  if (type) {\n    valueTypeName = valueTypeName || getValueTypeName(value)\n    this.message = tfPropertyErrorString(type, label, property, value, valueTypeName)\n  } else {\n    this.message = 'Unexpected property \"' + property + '\"'\n  }\n\n  captureStackTrace(this, TfTypeError)\n  this.__label = label\n  this.__property = property\n  this.__type = type\n  this.__value = value\n  this.__valueTypeName = valueTypeName\n}\n\nTfPropertyTypeError.prototype = Object.create(Error.prototype)\nTfPropertyTypeError.prototype.constructor = TfTypeError\n\nfunction tfCustomError (expected, actual) {\n  return new TfTypeError(expected, {}, actual)\n}\n\nfunction tfSubError (e, property, label) {\n  // sub child?\n  if (e instanceof TfPropertyTypeError) {\n    property = property + '.' + e.__property\n\n    e = new TfPropertyTypeError(\n      e.__type, property, e.__label, e.__value, e.__valueTypeName\n    )\n\n  // child?\n  } else if (e instanceof TfTypeError) {\n    e = new TfPropertyTypeError(\n      e.__type, property, label, e.__value, e.__valueTypeName\n    )\n  }\n\n  captureStackTrace(e)\n  return e\n}\n\nmodule.exports = {\n  TfTypeError: TfTypeError,\n  TfPropertyTypeError: TfPropertyTypeError,\n  tfCustomError: tfCustomError,\n  tfSubError: tfSubError,\n  tfJSON: tfJSON,\n  getValueTypeName: getValueTypeName\n}\n","var NATIVE = require('./native')\nvar ERRORS = require('./errors')\n\nfunction _Buffer (value) {\n  return Buffer.isBuffer(value)\n}\n\nfunction Hex (value) {\n  return typeof value === 'string' && /^([0-9a-f]{2})+$/i.test(value)\n}\n\nfunction _LengthN (type, length) {\n  var name = type.toJSON()\n\n  function Length (value) {\n    if (!type(value)) return false\n    if (value.length === length) return true\n\n    throw ERRORS.tfCustomError(name + '(Length: ' + length + ')', name + '(Length: ' + value.length + ')')\n  }\n  Length.toJSON = function () { return name }\n\n  return Length\n}\n\nvar _ArrayN = _LengthN.bind(null, NATIVE.Array)\nvar _BufferN = _LengthN.bind(null, _Buffer)\nvar _HexN = _LengthN.bind(null, Hex)\nvar _StringN = _LengthN.bind(null, NATIVE.String)\n\nfunction Range (a, b, f) {\n  f = f || NATIVE.Number\n  function _range (value, strict) {\n    return f(value, strict) && (value > a) && (value < b)\n  }\n  _range.toJSON = function () {\n    return `${f.toJSON()} between [${a}, ${b}]`\n  }\n  return _range\n}\n\nvar INT53_MAX = Math.pow(2, 53) - 1\n\nfunction Finite (value) {\n  return typeof value === 'number' && isFinite(value)\n}\nfunction Int8 (value) { return ((value << 24) >> 24) === value }\nfunction Int16 (value) { return ((value << 16) >> 16) === value }\nfunction Int32 (value) { return (value | 0) === value }\nfunction Int53 (value) {\n  return typeof value === 'number' &&\n    value >= -INT53_MAX &&\n    value <= INT53_MAX &&\n    Math.floor(value) === value\n}\nfunction UInt8 (value) { return (value & 0xff) === value }\nfunction UInt16 (value) { return (value & 0xffff) === value }\nfunction UInt32 (value) { return (value >>> 0) === value }\nfunction UInt53 (value) {\n  return typeof value === 'number' &&\n    value >= 0 &&\n    value <= INT53_MAX &&\n    Math.floor(value) === value\n}\n\nvar types = {\n  ArrayN: _ArrayN,\n  Buffer: _Buffer,\n  BufferN: _BufferN,\n  Finite: Finite,\n  Hex: Hex,\n  HexN: _HexN,\n  Int8: Int8,\n  Int16: Int16,\n  Int32: Int32,\n  Int53: Int53,\n  Range: Range,\n  StringN: _StringN,\n  UInt8: UInt8,\n  UInt16: UInt16,\n  UInt32: UInt32,\n  UInt53: UInt53\n}\n\nfor (var typeName in types) {\n  types[typeName].toJSON = function (t) {\n    return t\n  }.bind(null, typeName)\n}\n\nmodule.exports = types\n","var ERRORS = require('./errors')\nvar NATIVE = require('./native')\n\n// short-hand\nvar tfJSON = ERRORS.tfJSON\nvar TfTypeError = ERRORS.TfTypeError\nvar TfPropertyTypeError = ERRORS.TfPropertyTypeError\nvar tfSubError = ERRORS.tfSubError\nvar getValueTypeName = ERRORS.getValueTypeName\n\nvar TYPES = {\n  arrayOf: function arrayOf (type, options) {\n    type = compile(type)\n    options = options || {}\n\n    function _arrayOf (array, strict) {\n      if (!NATIVE.Array(array)) return false\n      if (NATIVE.Nil(array)) return false\n      if (options.minLength !== undefined && array.length < options.minLength) return false\n      if (options.maxLength !== undefined && array.length > options.maxLength) return false\n      if (options.length !== undefined && array.length !== options.length) return false\n\n      return array.every(function (value, i) {\n        try {\n          return typeforce(type, value, strict)\n        } catch (e) {\n          throw tfSubError(e, i)\n        }\n      })\n    }\n    _arrayOf.toJSON = function () {\n      var str = '[' + tfJSON(type) + ']'\n      if (options.length !== undefined) {\n        str += '{' + options.length + '}'\n      } else if (options.minLength !== undefined || options.maxLength !== undefined) {\n        str += '{' +\n          (options.minLength === undefined ? 0 : options.minLength) + ',' +\n          (options.maxLength === undefined ? Infinity : options.maxLength) + '}'\n      }\n      return str\n    }\n\n    return _arrayOf\n  },\n\n  maybe: function maybe (type) {\n    type = compile(type)\n\n    function _maybe (value, strict) {\n      return NATIVE.Nil(value) || type(value, strict, maybe)\n    }\n    _maybe.toJSON = function () { return '?' + tfJSON(type) }\n\n    return _maybe\n  },\n\n  map: function map (propertyType, propertyKeyType) {\n    propertyType = compile(propertyType)\n    if (propertyKeyType) propertyKeyType = compile(propertyKeyType)\n\n    function _map (value, strict) {\n      if (!NATIVE.Object(value)) return false\n      if (NATIVE.Nil(value)) return false\n\n      for (var propertyName in value) {\n        try {\n          if (propertyKeyType) {\n            typeforce(propertyKeyType, propertyName, strict)\n          }\n        } catch (e) {\n          throw tfSubError(e, propertyName, 'key')\n        }\n\n        try {\n          var propertyValue = value[propertyName]\n          typeforce(propertyType, propertyValue, strict)\n        } catch (e) {\n          throw tfSubError(e, propertyName)\n        }\n      }\n\n      return true\n    }\n\n    if (propertyKeyType) {\n      _map.toJSON = function () {\n        return '{' + tfJSON(propertyKeyType) + ': ' + tfJSON(propertyType) + '}'\n      }\n    } else {\n      _map.toJSON = function () { return '{' + tfJSON(propertyType) + '}' }\n    }\n\n    return _map\n  },\n\n  object: function object (uncompiled) {\n    var type = {}\n\n    for (var typePropertyName in uncompiled) {\n      type[typePropertyName] = compile(uncompiled[typePropertyName])\n    }\n\n    function _object (value, strict) {\n      if (!NATIVE.Object(value)) return false\n      if (NATIVE.Nil(value)) return false\n\n      var propertyName\n\n      try {\n        for (propertyName in type) {\n          var propertyType = type[propertyName]\n          var propertyValue = value[propertyName]\n\n          typeforce(propertyType, propertyValue, strict)\n        }\n      } catch (e) {\n        throw tfSubError(e, propertyName)\n      }\n\n      if (strict) {\n        for (propertyName in value) {\n          if (type[propertyName]) continue\n\n          throw new TfPropertyTypeError(undefined, propertyName)\n        }\n      }\n\n      return true\n    }\n    _object.toJSON = function () { return tfJSON(type) }\n\n    return _object\n  },\n\n  anyOf: function anyOf () {\n    var types = [].slice.call(arguments).map(compile)\n\n    function _anyOf (value, strict) {\n      return types.some(function (type) {\n        try {\n          return typeforce(type, value, strict)\n        } catch (e) {\n          return false\n        }\n      })\n    }\n    _anyOf.toJSON = function () { return types.map(tfJSON).join('|') }\n\n    return _anyOf\n  },\n\n  allOf: function allOf () {\n    var types = [].slice.call(arguments).map(compile)\n\n    function _allOf (value, strict) {\n      return types.every(function (type) {\n        try {\n          return typeforce(type, value, strict)\n        } catch (e) {\n          return false\n        }\n      })\n    }\n    _allOf.toJSON = function () { return types.map(tfJSON).join(' & ') }\n\n    return _allOf\n  },\n\n  quacksLike: function quacksLike (type) {\n    function _quacksLike (value) {\n      return type === getValueTypeName(value)\n    }\n    _quacksLike.toJSON = function () { return type }\n\n    return _quacksLike\n  },\n\n  tuple: function tuple () {\n    var types = [].slice.call(arguments).map(compile)\n\n    function _tuple (values, strict) {\n      if (NATIVE.Nil(values)) return false\n      if (NATIVE.Nil(values.length)) return false\n      if (strict && (values.length !== types.length)) return false\n\n      return types.every(function (type, i) {\n        try {\n          return typeforce(type, values[i], strict)\n        } catch (e) {\n          throw tfSubError(e, i)\n        }\n      })\n    }\n    _tuple.toJSON = function () { return '(' + types.map(tfJSON).join(', ') + ')' }\n\n    return _tuple\n  },\n\n  value: function value (expected) {\n    function _value (actual) {\n      return actual === expected\n    }\n    _value.toJSON = function () { return expected }\n\n    return _value\n  }\n}\n\n// TODO: deprecate\nTYPES.oneOf = TYPES.anyOf\n\nfunction compile (type) {\n  if (NATIVE.String(type)) {\n    if (type[0] === '?') return TYPES.maybe(type.slice(1))\n\n    return NATIVE[type] || TYPES.quacksLike(type)\n  } else if (type && NATIVE.Object(type)) {\n    if (NATIVE.Array(type)) {\n      if (type.length !== 1) throw new TypeError('Expected compile() parameter of type Array of length 1')\n      return TYPES.arrayOf(type[0])\n    }\n\n    return TYPES.object(type)\n  } else if (NATIVE.Function(type)) {\n    return type\n  }\n\n  return TYPES.value(type)\n}\n\nfunction typeforce (type, value, strict, surrogate) {\n  if (NATIVE.Function(type)) {\n    if (type(value, strict)) return true\n\n    throw new TfTypeError(surrogate || type, value)\n  }\n\n  // JIT\n  return typeforce(compile(type), value, strict)\n}\n\n// assign types to typeforce function\nfor (var typeName in NATIVE) {\n  typeforce[typeName] = NATIVE[typeName]\n}\n\nfor (typeName in TYPES) {\n  typeforce[typeName] = TYPES[typeName]\n}\n\nvar EXTRA = require('./extra')\nfor (typeName in EXTRA) {\n  typeforce[typeName] = EXTRA[typeName]\n}\n\ntypeforce.compile = compile\ntypeforce.TfTypeError = TfTypeError\ntypeforce.TfPropertyTypeError = TfPropertyTypeError\n\nmodule.exports = typeforce\n","var types = {\n  Array: function (value) { return value !== null && value !== undefined && value.constructor === Array },\n  Boolean: function (value) { return typeof value === 'boolean' },\n  Function: function (value) { return typeof value === 'function' },\n  Nil: function (value) { return value === undefined || value === null },\n  Number: function (value) { return typeof value === 'number' },\n  Object: function (value) { return typeof value === 'object' },\n  String: function (value) { return typeof value === 'string' },\n  '': function () { return true }\n}\n\n// TODO: deprecate\ntypes.Null = types.Nil\n\nfor (var typeName in types) {\n  types[typeName].toJSON = function (t) {\n    return t\n  }.bind(null, typeName)\n}\n\nmodule.exports = types\n","\n/**\n * Module exports.\n */\n\nmodule.exports = deprecate;\n\n/**\n * Mark that a method should not be used.\n * Returns a modified function which warns once by default.\n *\n * If `localStorage.noDeprecation = true` is set, then it is a no-op.\n *\n * If `localStorage.throwDeprecation = true` is set, then deprecated functions\n * will throw an Error when invoked.\n *\n * If `localStorage.traceDeprecation = true` is set, then deprecated functions\n * will invoke `console.trace()` instead of `console.error()`.\n *\n * @param {Function} fn - the function to deprecate\n * @param {String} msg - the string to print to the console when `fn` is invoked\n * @returns {Function} a new \"deprecated\" version of `fn`\n * @api public\n */\n\nfunction deprecate (fn, msg) {\n  if (config('noDeprecation')) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (config('throwDeprecation')) {\n        throw new Error(msg);\n      } else if (config('traceDeprecation')) {\n        console.trace(msg);\n      } else {\n        console.warn(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n}\n\n/**\n * Checks `localStorage` for boolean values for the given `name`.\n *\n * @param {String} name\n * @returns {Boolean}\n * @api private\n */\n\nfunction config (name) {\n  // accessing global.localStorage can trigger a DOMException in sandboxed iframes\n  try {\n    if (!global.localStorage) return false;\n  } catch (_) {\n    return false;\n  }\n  var val = global.localStorage[name];\n  if (null == val) return false;\n  return String(val).toLowerCase() === 'true';\n}\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n","module.exports = function isBuffer(arg) {\n  return arg && typeof arg === 'object'\n    && typeof arg.copy === 'function'\n    && typeof arg.fill === 'function'\n    && typeof arg.readUInt8 === 'function';\n}","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar getOwnPropertyDescriptors = Object.getOwnPropertyDescriptors ||\n  function getOwnPropertyDescriptors(obj) {\n    var keys = Object.keys(obj);\n    var descriptors = {};\n    for (var i = 0; i < keys.length; i++) {\n      descriptors[keys[i]] = Object.getOwnPropertyDescriptor(obj, keys[i]);\n    }\n    return descriptors;\n  };\n\nvar formatRegExp = /%[sdj%]/g;\nexports.format = function(f) {\n  if (!isString(f)) {\n    var objects = [];\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function(x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n    switch (x) {\n      case '%s': return String(args[i++]);\n      case '%d': return Number(args[i++]);\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n      default:\n        return x;\n    }\n  });\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n  return str;\n};\n\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\nexports.deprecate = function(fn, msg) {\n  if (typeof process !== 'undefined' && process.noDeprecation === true) {\n    return fn;\n  }\n\n  // Allow for deprecating things in the process of starting up.\n  if (typeof process === 'undefined') {\n    return function() {\n      return exports.deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n};\n\n\nvar debugs = {};\nvar debugEnviron;\nexports.debuglog = function(set) {\n  if (isUndefined(debugEnviron))\n    debugEnviron = process.env.NODE_DEBUG || '';\n  set = set.toUpperCase();\n  if (!debugs[set]) {\n    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\n      var pid = process.pid;\n      debugs[set] = function() {\n        var msg = exports.format.apply(exports, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function() {};\n    }\n  }\n  return debugs[set];\n};\n\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n/* legacy: obj, showHidden, depth, colors*/\nfunction inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  };\n  // legacy...\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    exports._extend(ctx, opts);\n  }\n  // set default options\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\nexports.inspect = inspect;\n\n\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\ninspect.colors = {\n  'bold' : [1, 22],\n  'italic' : [3, 23],\n  'underline' : [4, 24],\n  'inverse' : [7, 27],\n  'white' : [37, 39],\n  'grey' : [90, 39],\n  'black' : [30, 39],\n  'blue' : [34, 39],\n  'cyan' : [36, 39],\n  'green' : [32, 39],\n  'magenta' : [35, 39],\n  'red' : [31, 39],\n  'yellow' : [33, 39]\n};\n\n// Don't use 'blue' not visible on cmd.exe\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n           '\\u001b[' + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\n\nfunction arrayToHash(array) {\n  var hash = {};\n\n  array.forEach(function(val, idx) {\n    hash[val] = true;\n  });\n\n  return hash;\n}\n\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect &&\n      value &&\n      isFunction(value.inspect) &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== exports.inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // Look up the keys of the object.\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  }\n\n  // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n  if (isError(value)\n      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  }\n\n  // Some type of object without properties can be shortcutted.\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '', array = false, braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value))\n    return ctx.stylize('undefined', 'undefined');\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                             .replace(/'/g, \"\\\\'\")\n                                             .replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n  if (isNumber(value))\n    return ctx.stylize('' + value, 'number');\n  if (isBoolean(value))\n    return ctx.stylize('' + value, 'boolean');\n  // For some reason typeof null is \"object\", so special case here.\n  if (isNull(value))\n    return ctx.stylize('null', 'null');\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function(prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nfunction isArray(ar) {\n  return Array.isArray(ar);\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = require('./support/isBuffer');\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n              'Oct', 'Nov', 'Dec'];\n\n// 26 Feb 16:19:34\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()),\n              pad(d.getMinutes()),\n              pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n}\n\n\n// log is just a thin wrapper to console.log that prepends a timestamp\nexports.log = function() {\n  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\n};\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n */\nexports.inherits = require('inherits');\n\nexports._extend = function(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n};\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nvar kCustomPromisifiedSymbol = typeof Symbol !== 'undefined' ? Symbol('util.promisify.custom') : undefined;\n\nexports.promisify = function promisify(original) {\n  if (typeof original !== 'function')\n    throw new TypeError('The \"original\" argument must be of type Function');\n\n  if (kCustomPromisifiedSymbol && original[kCustomPromisifiedSymbol]) {\n    var fn = original[kCustomPromisifiedSymbol];\n    if (typeof fn !== 'function') {\n      throw new TypeError('The \"util.promisify.custom\" argument must be of type Function');\n    }\n    Object.defineProperty(fn, kCustomPromisifiedSymbol, {\n      value: fn, enumerable: false, writable: false, configurable: true\n    });\n    return fn;\n  }\n\n  function fn() {\n    var promiseResolve, promiseReject;\n    var promise = new Promise(function (resolve, reject) {\n      promiseResolve = resolve;\n      promiseReject = reject;\n    });\n\n    var args = [];\n    for (var i = 0; i < arguments.length; i++) {\n      args.push(arguments[i]);\n    }\n    args.push(function (err, value) {\n      if (err) {\n        promiseReject(err);\n      } else {\n        promiseResolve(value);\n      }\n    });\n\n    try {\n      original.apply(this, args);\n    } catch (err) {\n      promiseReject(err);\n    }\n\n    return promise;\n  }\n\n  Object.setPrototypeOf(fn, Object.getPrototypeOf(original));\n\n  if (kCustomPromisifiedSymbol) Object.defineProperty(fn, kCustomPromisifiedSymbol, {\n    value: fn, enumerable: false, writable: false, configurable: true\n  });\n  return Object.defineProperties(\n    fn,\n    getOwnPropertyDescriptors(original)\n  );\n}\n\nexports.promisify.custom = kCustomPromisifiedSymbol\n\nfunction callbackifyOnRejected(reason, cb) {\n  // `!reason` guard inspired by bluebird (Ref: https://goo.gl/t5IS6M).\n  // Because `null` is a special error value in callbacks which means \"no error\n  // occurred\", we error-wrap so the callback consumer can distinguish between\n  // \"the promise rejected with null\" or \"the promise fulfilled with undefined\".\n  if (!reason) {\n    var newReason = new Error('Promise was rejected with a falsy value');\n    newReason.reason = reason;\n    reason = newReason;\n  }\n  return cb(reason);\n}\n\nfunction callbackify(original) {\n  if (typeof original !== 'function') {\n    throw new TypeError('The \"original\" argument must be of type Function');\n  }\n\n  // We DO NOT return the promise as it gives the user a false sense that\n  // the promise is actually somehow related to the callback's execution\n  // and that the callback throwing will reject the promise.\n  function callbackified() {\n    var args = [];\n    for (var i = 0; i < arguments.length; i++) {\n      args.push(arguments[i]);\n    }\n\n    var maybeCb = args.pop();\n    if (typeof maybeCb !== 'function') {\n      throw new TypeError('The last argument must be of type Function');\n    }\n    var self = this;\n    var cb = function() {\n      return maybeCb.apply(self, arguments);\n    };\n    // In true node style we process the callback on `nextTick` with all the\n    // implications (stack, `uncaughtException`, `async_hooks`)\n    original.apply(this, args)\n      .then(function(ret) { process.nextTick(cb, null, ret) },\n            function(rej) { process.nextTick(callbackifyOnRejected, rej, cb) });\n  }\n\n  Object.setPrototypeOf(callbackified, Object.getPrototypeOf(original));\n  Object.defineProperties(callbackified,\n                          getOwnPropertyDescriptors(original));\n  return callbackified;\n}\nexports.callbackify = callbackify;\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","var bs58check = require('bs58check')\n\nfunction decodeRaw (buffer, version) {\n  // check version only if defined\n  if (version !== undefined && buffer[0] !== version) throw new Error('Invalid network version')\n\n  // uncompressed\n  if (buffer.length === 33) {\n    return {\n      version: buffer[0],\n      privateKey: buffer.slice(1, 33),\n      compressed: false\n    }\n  }\n\n  // invalid length\n  if (buffer.length !== 34) throw new Error('Invalid WIF length')\n\n  // invalid compression flag\n  if (buffer[33] !== 0x01) throw new Error('Invalid compression flag')\n\n  return {\n    version: buffer[0],\n    privateKey: buffer.slice(1, 33),\n    compressed: true\n  }\n}\n\nfunction encodeRaw (version, privateKey, compressed) {\n  var result = new Buffer(compressed ? 34 : 33)\n\n  result.writeUInt8(version, 0)\n  privateKey.copy(result, 1)\n\n  if (compressed) {\n    result[33] = 0x01\n  }\n\n  return result\n}\n\nfunction decode (string, version) {\n  return decodeRaw(bs58check.decode(string), version)\n}\n\nfunction encode (version, privateKey, compressed) {\n  if (typeof version === 'number') return bs58check.encode(encodeRaw(version, privateKey, compressed))\n\n  return bs58check.encode(\n    encodeRaw(\n      version.version,\n      version.privateKey,\n      version.compressed\n    )\n  )\n}\n\nmodule.exports = {\n  decode: decode,\n  decodeRaw: decodeRaw,\n  encode: encode,\n  encodeRaw: encodeRaw\n}\n","import {\n    generateMnemonic,\n    mnemonicToSeedSync,\n    validateMnemonic\n} from 'bip39';\n\nimport {\n    BIP32Interface,\n    fromSeed\n} from 'bip32';\n\nimport {\n    encode as bech32Encode,\n    toWords as bech32ToWords\n} from 'bech32';\n\nimport {\n    instantiateRipemd160,\n    instantiateSecp256k1,\n    instantiateSha256,\n    Ripemd160,\n    Secp256k1,\n    Sha256\n} from 'bitcoin-ts';\n\nimport {\n    Bech32String,\n    BroadcastMode,\n    BroadcastTx,\n    Bytes,\n    KeyPair,\n    StdSignature,\n    StdSignMsg,\n    StdTx,\n    Tx,\n    TxMeta,\n    Wallet\n} from './types';\n\nexport * from './types';\n\nimport {\n    base64ToBytes,\n    bytesToBase64,\n    toCanonicalJSONBytes\n} from './util';\n\nexport * from './util';\n\n/**\n * The core API.\n *\n * Must be asynchronously {@link instantiate|instantiated}.\n */\nexport interface API {\n    /**\n     * Create a {@link Wallet|`Wallet`} from a random mnemonic.\n     *\n     * @param   prefix - Bech32 human readable part, defaulting to {@link COSMOS_PREFIX|`COSMOS_PREFIX`}\n     * @param   path   - BIP32 derivation path, defaulting to {@link COSMOS_PATH|`COSMOS_PATH`}\n     *\n     * @returns a keypair and address derived from a random mnemonic\n     */\n    createWallet (prefix?: string, path?: string): Wallet;\n\n    /**\n     * Create a {@link Wallet|`Wallet`} from a known mnemonic.\n     *\n     * @param   mnemonic - BIP39 mnemonic seed\n     * @param   prefix   - Bech32 human readable part, defaulting to {@link COSMOS_PREFIX|`COSMOS_PREFIX`}\n     * @param   path     - BIP32 derivation path, defaulting to {@link COSMOS_PATH|`COSMOS_PATH`}\n     *\n     * @returns a keypair and address derived from the provided mnemonic\n     * @throws  will throw if the provided mnemonic is invalid\n     */\n    createWalletFromMnemonic (mnemonic: string, prefix?: string, path?: string): Wallet;\n\n    /**\n     * Create a {@link Wallet|`Wallet`} from a BIP32 master key.\n     *\n     * @param   masterKey - BIP32 master key\n     * @param   prefix    - Bech32 human readable part, defaulting to {@link COSMOS_PREFIX|`COSMOS_PREFIX`}\n     * @param   path      - BIP32 derivation path, defaulting to {@link COSMOS_PATH|`COSMOS_PATH`}\n     *\n     * @returns a keypair and address derived from the provided master key\n     */\n    createWalletFromMasterKey (masterKey: BIP32Interface, prefix?: string, path?: string): Wallet;\n\n    /**\n     * Derive a BIP32 master key from a mnemonic.\n     *\n     * @param   mnemonic - BIP39 mnemonic seed\n     *\n     * @returns BIP32 master key\n     * @throws  will throw if the provided mnemonic is invalid\n     */\n    createMasterKeyFromMnemonic (mnemonic: string): BIP32Interface;\n\n    /**\n     * Derive a keypair from a BIP32 master key.\n     *\n     * @param   masterKey - BIP32 master key\n     * @param   path      - BIP32 derivation path, defaulting to {@link COSMOS_PATH|`COSMOS_PATH`}\n     *\n     * @returns derived public and private key pair\n     * @throws  will throw if a private key cannot be derived\n     */\n    createKeyPairFromMasterKey (masterKey: BIP32Interface, path?: string): KeyPair;\n\n    /**\n     * Derive a Bech32 address from a public key.\n     *\n     * @param   publicKey - public key bytes\n     * @param   prefix    - Bech32 human readable part, defaulting to {@link COSMOS_PREFIX|`COSMOS_PREFIX`}\n     *\n     * @returns Bech32-encoded address\n     */\n    createAddress (publicKey: Bytes, prefix?: string): Bech32String;\n\n    /**\n     * Sign the sha256 hash of `bytes` with a secp256k1 private key.\n     *\n     * @param   bytes      - bytes to hash and sign\n     * @param   privateKey - private key bytes\n     *\n     * @returns signed hash of the bytes\n     * @throws  will throw if the provided private key is invalid\n     */\n    sign (bytes: Bytes, privateKey: Bytes): Bytes;\n\n    /**\n     * Create signature bytes from a {@link StdSignMsg|`StdSignMsg`}.\n     *\n     * @param   signMsg    - transaction with metadata for signing\n     * @param   privateKey - private key bytes\n     *\n     * @returns signature bytes\n     */\n    createSignatureBytes (signMsg: StdSignMsg, privateKey: Bytes): Bytes;\n\n    /**\n     * Verify a signature against a {@link StdSignMsg|`StdSignMsg`}.\n     *\n     * @param   signMsg   - transaction with metadata for signing\n     * @param   signature - signature bytes\n     * @param   publicKey - public key bytes\n     *\n     * @returns `true` if the signature is valid and matches, `false` otherwise\n     */\n    verifySignatureBytes (signMsg: StdSignMsg, signature: Bytes, publicKey: Bytes): boolean;\n\n    /**\n     * Create a signature from a {@link StdSignMsg|`StdSignMsg`}.\n     *\n     * @param   signMsg - transaction with metadata for signing\n     * @param   keyPair - public and private key pair (or {@link Wallet|`Wallet`})\n     *\n     * @returns a signature and corresponding public key\n     */\n    createSignature (signMsg: StdSignMsg, keyPair: KeyPair): StdSignature;\n\n    /**\n     * Verify a {@link StdSignMsg|`StdSignMsg`} against a {@link StdSignature|`StdSignature`}.\n     *\n     * @param   signMsg   - transaction with metadata for signing\n     * @param   signature - signature\n     *\n     * @returns `true` if the signature is valid and matches, `false` otherwise\n     */\n    verifySignature (signMsg: StdSignMsg, signature: StdSignature): boolean;\n\n    /**\n     * Verify a {@link StdSignMsg|`StdSignMsg`} against multiple {@link StdSignature|`StdSignature`}s.\n     *\n     * @param   signMsg    - transaction with metadata for signing\n     * @param   signatures - signatures\n     *\n     * @returns `true` if all signatures are valid and match, `false` otherwise or if no signatures were provided\n     */\n    verifySignatures (signMsg: StdSignMsg, signatures: StdSignature[]): boolean;\n\n    /**\n     * Create a transaction with metadata for signing.\n     *\n     * @param   tx   - unsigned transaction\n     * @param   meta - metadata for signing\n     *\n     * @returns\n     */\n    createSignMsg (tx: Tx, meta: TxMeta): StdSignMsg;\n\n    /**\n     * Sign a transaction.\n     *\n     * This combines the {@link Tx|`Tx`} and {@link TxMeta|`TxMeta`} into a {@link StdSignMsg|`StdSignMsg`}, signs it,\n     * and attaches the signature to the transaction. If the transaction is already signed, the signature will be\n     * added to the existing signatures.\n     *\n     * @param   tx      - transaction (signed or unsigned)\n     * @param   meta    - metadata for signing\n     * @param   keyPair - public and private key pair (or {@link Wallet|`Wallet`})\n     *\n     * @returns a signed transaction\n     */\n    signTx (tx: Tx | StdTx, meta: TxMeta, keyPair: KeyPair): StdTx;\n\n    /**\n     * Verify a signed transaction's signatures.\n     *\n     * @param   tx   - signed transaction\n     * @param   meta - metadata for signing\n     *\n     * @returns `true` if all signatures are valid and match, `false` otherwise or if no signatures were provided\n     */\n    verifyTx (tx: StdTx, meta: TxMeta): boolean;\n\n    /**\n     * Prepare a signed transaction for broadcast.\n     *\n     * @param   tx   - signed transaction\n     * @param   mode - broadcast mode\n     *\n     * @returns a transaction broadcast\n     */\n    broadcastTx (tx: StdTx, mode?: BroadcastMode): BroadcastTx;\n}\n\n/**\n * Bech32 prefix for Cosmos addresses.\n */\nexport const COSMOS_PREFIX = 'cosmos';\n\n/**\n * BIP32 derivation path for Cosmos keys.\n */\n// @formatter:off\nexport const COSMOS_PATH = \"m/44'/118'/0'/0/0\";\n// @formatter:on\n\n/**\n * Asynchronously instantiate the core API.\n *\n * This loads WASM interfaces for sha256, ripemd160, and secp256k1 cryptographic functions.\n *\n * @param   randomSeed - a 32-byte random seed used to randomize the secp256k1 context\n *\n * @returns a Promise resolving with the core API\n */\nexport function instantiate (randomSeed?: Bytes): Promise<API> {\n    return Promise.all([\n        instantiateSha256(),\n        instantiateRipemd160(),\n        instantiateSecp256k1(randomSeed)\n    ]).then(api);\n}\n\nfunction api ([sha256, ripemd160, secp256k1]: [Sha256, Ripemd160, Secp256k1]): API {\n    function createWallet (prefix: string = COSMOS_PREFIX, path: string = COSMOS_PATH): Wallet {\n        const mnemonic = generateMnemonic();\n\n        return createWalletFromMnemonic(mnemonic, prefix, path);\n    }\n\n    function createWalletFromMnemonic (mnemonic: string, prefix: string = COSMOS_PREFIX, path: string = COSMOS_PATH): Wallet {\n        const masterKey = createMasterKeyFromMnemonic(mnemonic);\n\n        return createWalletFromMasterKey(masterKey, prefix, path);\n    }\n\n    function createWalletFromMasterKey (masterKey: BIP32Interface, prefix: string = COSMOS_PREFIX, path: string = COSMOS_PATH): Wallet {\n        const { privateKey, publicKey } = createKeyPairFromMasterKey(masterKey, path);\n\n        const address = createAddress(publicKey, prefix);\n\n        return {\n            address,\n            privateKey,\n            publicKey\n        };\n    }\n\n    function createMasterKeyFromMnemonic (mnemonic: string): BIP32Interface {\n        if (!validateMnemonic(mnemonic)) {\n            throw new Error('invalid mnemonic');\n        }\n\n        const seed = mnemonicToSeedSync(mnemonic);\n\n        return fromSeed(seed);\n    }\n\n    function createKeyPairFromMasterKey (masterKey: BIP32Interface, path: string = COSMOS_PATH): KeyPair {\n        const { privateKey } = masterKey.derivePath(path);\n        if (!privateKey) {\n            throw new Error('could not derive private key');\n        }\n\n        const publicKey = secp256k1.derivePublicKeyCompressed(privateKey);\n\n        return {\n            privateKey,\n            publicKey\n        };\n    }\n\n    function createAddress (publicKey: Bytes, prefix: string = COSMOS_PREFIX): Bech32String {\n        const hash = ripemd160.hash(sha256.hash(publicKey));\n\n        // bech32.toWords takes a Buffer, which subclasses Uint8Array\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const words = bech32ToWords(hash as any);\n\n        return bech32Encode(prefix, words);\n    }\n\n    function sign (bytes: Bytes, privateKey: Bytes): Bytes {\n        const hash = sha256.hash(bytes);\n\n        return secp256k1.signMessageHashCompact(privateKey, hash);\n    }\n\n    function createSignatureBytes (signMsg: StdSignMsg, privateKey: Bytes): Bytes {\n        const bytes = toCanonicalJSONBytes(signMsg);\n\n        return sign(bytes, privateKey);\n    }\n\n    function verifySignatureBytes (signMsg: StdSignMsg, signature: Bytes, publicKey: Bytes): boolean {\n        const bytes = toCanonicalJSONBytes(signMsg);\n        const hash  = sha256.hash(bytes);\n\n        return secp256k1.verifySignatureCompact(signature, publicKey, hash);\n    }\n\n    function createSignature (signMsg: StdSignMsg, { privateKey, publicKey }: KeyPair): StdSignature {\n        const signatureBytes = createSignatureBytes(signMsg, privateKey);\n\n        return {\n            signature: bytesToBase64(signatureBytes),\n            pub_key:   {\n                type:  'tendermint/PubKeySecp256k1',\n                value: bytesToBase64(publicKey)\n            }\n        };\n    }\n\n    function verifySignature (signMsg: StdSignMsg, signature: StdSignature): boolean {\n        const signatureBytes = base64ToBytes(signature.signature);\n        const publicKey      = base64ToBytes(signature.pub_key.value);\n\n        return verifySignatureBytes(signMsg, signatureBytes, publicKey);\n    }\n\n    function verifySignatures (signMsg: StdSignMsg, signatures: StdSignature[]): boolean {\n        if (signatures.length > 0) {\n            return signatures.every(function (signature: StdSignature): boolean {\n                return verifySignature(signMsg, signature);\n            });\n        }\n        else {\n            return false;\n        }\n    }\n\n    function createSignMsg (tx: Tx, meta: TxMeta): StdSignMsg {\n        return {\n            account_number: meta.account_number,\n            chain_id:       meta.chain_id,\n            fee:            tx.fee,\n            memo:           tx.memo,\n            msgs:           tx.msg,\n            sequence:       meta.sequence\n        };\n    }\n\n    function signTx (tx: Tx | StdTx, meta: TxMeta, keyPair: KeyPair): StdTx {\n        const signMsg    = createSignMsg(tx, meta);\n        const signature  = createSignature(signMsg, keyPair);\n        const signatures = ('signatures' in tx) ? [...tx.signatures, signature] : [signature];\n\n        return {\n            ...tx,\n            signatures\n        };\n    }\n\n    function verifyTx (tx: StdTx, meta: TxMeta): boolean {\n        const signMsg = createSignMsg(tx, meta);\n\n        return verifySignatures(signMsg, tx.signatures);\n    }\n\n    function broadcastTx (tx: StdTx, mode: BroadcastMode = 'sync'): BroadcastTx {\n        return {\n            tx,\n            mode\n        };\n    }\n\n    return {\n        createWallet,\n        createWalletFromMnemonic,\n        createWalletFromMasterKey,\n        createMasterKeyFromMnemonic,\n        createKeyPairFromMasterKey,\n        createAddress,\n        sign,\n        createSignatureBytes,\n        verifySignatureBytes,\n        createSignature,\n        verifySignature,\n        verifySignatures,\n        createSignMsg,\n        signTx,\n        verifyTx,\n        broadcastTx\n    };\n}\n","import { Base64String, BinaryString, Bytes, JSONValue } from './types';\n\nlet TextDecoder: { new (): { decode (bytes: Bytes): string } };\nlet TextEncoder: { new (): { encode (string: string): Bytes } };\nlet atob: (base64: Base64String) => BinaryString;\nlet btoa: (binary: BinaryString) => Base64String;\n\nif (typeof process !== 'undefined' && process.versions && process.versions.node) {\n    ({ TextDecoder, TextEncoder } = require('util'));\n    // eslint-disable-next-line @typescript-eslint/no-var-requires\n    const { Buffer } = require('buffer');\n\n    atob = function (base64: Base64String): BinaryString {\n        return Buffer.from(base64, 'base64').toString('binary');\n    };\n    btoa = function (binary: BinaryString): Base64String {\n        return Buffer.from(binary, 'binary').toString('base64');\n    };\n}\nelse {\n    ({ atob, btoa, TextDecoder, TextEncoder } = window);\n}\n\nconst decoder = new TextDecoder;\nconst encoder = new TextEncoder;\n\n/**\n * Decode bytes from Base64.\n *\n * @param   base64 - string to decode\n *\n * @returns bytes from Base64-encoded string\n */\nexport function base64ToBytes (base64: Base64String): Bytes {\n    const binary = atob(base64);\n    const length = binary.length;\n    const bytes  = new Uint8Array(new ArrayBuffer(length));\n\n    for (let i = 0; i < length; i++) {\n        bytes[i] = binary.charCodeAt(i);\n    }\n\n    return bytes;\n}\n\n/**\n * Encode bytes as Base64.\n *\n * @param   bytes - bytes to encode\n *\n * @returns Base64-encoded string from bytes\n */\nexport function bytesToBase64 (bytes: Bytes): Base64String {\n    const binary = String.fromCharCode(...bytes);\n    return btoa(binary);\n}\n\n/**\n * Decode a string from bytes.\n *\n * @param   bytes - bytes to decode as a string\n *\n * @returns string decoded from bytes\n * @throws  will throw if decoding fails\n */\nexport function bytesToString (bytes: Bytes): string {\n    return decoder.decode(bytes);\n}\n\n/**\n * Encode a string as bytes.\n *\n * @param   string - string to encode as bytes\n *\n * @returns bytes encoded from string\n * @throws  will throw if encoding fails\n */\nexport function stringToBytes (string: string): Bytes {\n    return encoder.encode(string);\n}\n\n/**\n * Canonicalize JSON for signing, encode it as a string, then decode the string as JSON.\n *\n * @param   value - JSON value\n *\n * @returns the canonical JSON\n * @throws  will throw if encoding or decoding fails\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function toCanonicalJSON (value: any): JSONValue {\n    return JSON.parse(toCanonicalJSONString(value));\n}\n\n/**\n * Canonicalize JSON for signing, then encode it as a string.\n *\n * @param   value - JSON value\n *\n * @returns the canonical JSON string\n * @throws  will throw if encoding fails\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function toCanonicalJSONString (value: any): string {\n    return JSON.stringify(canonicalizeJSON(value));\n}\n\n/**\n * Canonicalize JSON for signing, encode it as a string, then encode the string as bytes.\n *\n * @param   value - JSON value\n *\n * @returns the canonical JSON bytes\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function toCanonicalJSONBytes (value: any): Bytes {\n    return stringToBytes(toCanonicalJSONString(value));\n}\n\n/**\n * Check if a value is a plain object.\n *\n * @param   value - value to check\n *\n * @returns `true` if the value is a plain object, `false` otherwise\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function isObject (value: any): boolean {\n    return (Object.prototype.toString.call(value) === '[object Object]');\n}\n\n/**\n * Canonicalize JSON for signing.\n *\n * This recursively sorts objects by key, removing any keys with `null` or `undefined` values, and replaces other\n * `undefined` values with `null`.\n *\n * @param   value - any value (but usually a JSON object)\n *\n * @returns canonical JSON\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function canonicalizeJSON (value: any): any {\n    if (isObject(value)) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const sorted = {} as { [key: string]: any };\n        const keys   = Object.keys(value).sort();\n\n        for (const key of keys) {\n            const keyValue = value[key];\n            if (keyValue != null) {\n                sorted[key] = canonicalizeJSON(keyValue);\n            }\n        }\n\n        return sorted;\n    }\n\n    if (Array.isArray(value)) {\n        return value.map(canonicalizeJSON);\n    }\n\n    return (value === undefined) ? null : value;\n}\n\n/**\n * Wrap arguments in an array. If only one argument is provided:\n *\n * - if it's `null` or `undefined`, return an empty array\n * - if it's an array, return a copy of it\n * - otherwise, return a new array containing it\n *\n * @param   first - first argument\n * @param   rest  - other arguments\n *\n * @returns an array\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function arrayWrap (first: any, ...rest: any[]): any[] {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    let array: any[];\n    if (arguments.length > 1) {\n        array = [first, ...rest];\n    }\n    else if (first == null) {\n        array = [];\n    }\n    else if (Array.isArray(first)) {\n        array = [...first];\n    }\n    else {\n        array = [first];\n    }\n    return array;\n}\n","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */"],"sourceRoot":""}